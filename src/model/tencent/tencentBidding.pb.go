// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: tencentBidding.proto

//version: 20151215

package tencent

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  *string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`                                                                //bid request id, 一次bid request可能会包含多个曝光(impression)
	At                  *uint32               `protobuf:"varint,2,opt,name=at" json:"at,omitempty"`                                                               //拍卖方式，1为first pricing, 2为second pricing，目前统一为2
	Site                *Request_Site         `protobuf:"bytes,3,opt,name=site" json:"site,omitempty"`                                                            //媒体站点信息
	Device              *Request_Device       `protobuf:"bytes,4,opt,name=device" json:"device,omitempty"`                                                        //设备信息
	User                *Request_User         `protobuf:"bytes,5,opt,name=user" json:"user,omitempty"`                                                            //用户信息
	Impression          []*Request_Impression `protobuf:"bytes,6,rep,name=impression" json:"impression,omitempty"`                                                //曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
	DEPRECATEDInnerInfo *string               `protobuf:"bytes,7,opt,name=DEPRECATED_inner_info,json=DEPRECATEDInnerInfo" json:"DEPRECATED_inner_info,omitempty"` //忽略，无用字段
	App                 *Request_App          `protobuf:"bytes,8,opt,name=app" json:"app,omitempty"`                                                              //移动app信息
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Request) GetAt() uint32 {
	if x != nil && x.At != nil {
		return *x.At
	}
	return 0
}

func (x *Request) GetSite() *Request_Site {
	if x != nil {
		return x.Site
	}
	return nil
}

func (x *Request) GetDevice() *Request_Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *Request) GetUser() *Request_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Request) GetImpression() []*Request_Impression {
	if x != nil {
		return x.Impression
	}
	return nil
}

func (x *Request) GetDEPRECATEDInnerInfo() string {
	if x != nil && x.DEPRECATEDInnerInfo != nil {
		return *x.DEPRECATEDInnerInfo
	}
	return ""
}

func (x *Request) GetApp() *Request_App {
	if x != nil {
		return x.App
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *string             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`           //bid request id, 同请求ID Request.id，必须有
	Bidid   *string             `protobuf:"bytes,2,opt,name=bidid" json:"bidid,omitempty"`     //没有实际使用，bid response id
	Seatbid []*Response_SeatBid `protobuf:"bytes,3,rep,name=seatbid" json:"seatbid,omitempty"` //回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Response) GetBidid() string {
	if x != nil && x.Bidid != nil {
		return *x.Bidid
	}
	return ""
}

func (x *Response) GetSeatbid() []*Response_SeatBid {
	if x != nil {
		return x.Seatbid
	}
	return nil
}

type Request_Impression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *string                              `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`                                    //标识每一次曝光的唯一ID
	Tagid      *string                              `protobuf:"bytes,2,opt,name=tagid" json:"tagid,omitempty"`                              //广告位ID，同资源报表中的广告位ID，如 Ent_F_Width1
	Bidfloor   *float32                             `protobuf:"fixed32,3,opt,name=bidfloor" json:"bidfloor,omitempty"`                      //曝光底价，单位 千次曝光分
	Banner     *Request_Impression_Banner           `protobuf:"bytes,4,opt,name=banner" json:"banner,omitempty"`                            //banner广告位
	Video      *Request_Impression_Video            `protobuf:"bytes,5,opt,name=video" json:"video,omitempty"`                              //video广告位
	Clientid   *string                              `protobuf:"bytes,6,opt,name=clientid" json:"clientid,omitempty"`                        //无效字段
	Tradecode  *string                              `protobuf:"bytes,7,opt,name=tradecode" json:"tradecode,omitempty"`                      //该广告位的限制行业编码列表，如：018;014;008;006;001;004;002
	SnsLists   *string                              `protobuf:"bytes,8,opt,name=sns_lists,json=snsLists" json:"sns_lists,omitempty"`        //(暂停使用) 该广告位允许的社交化播放形式列表
	Dealid     *string                              `protobuf:"bytes,9,opt,name=dealid" json:"dealid,omitempty"`                            //仅GPB方式使用 用来告诉DSP是哪次投放
	AdmRequire []*Request_Impression_MaterialFormat `protobuf:"bytes,10,rep,name=adm_require,json=admRequire" json:"adm_require,omitempty"` //无效字段
	ImpExt     *Request_Impression_ImpExt           `protobuf:"bytes,11,opt,name=imp_ext,json=impExt" json:"imp_ext,omitempty"`             //无效字段
	Channel    *string                              `protobuf:"bytes,12,opt,name=channel" json:"channel,omitempty"`                         //频道号
}

func (x *Request_Impression) Reset() {
	*x = Request_Impression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Impression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Impression) ProtoMessage() {}

func (x *Request_Impression) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Impression.ProtoReflect.Descriptor instead.
func (*Request_Impression) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Request_Impression) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Request_Impression) GetTagid() string {
	if x != nil && x.Tagid != nil {
		return *x.Tagid
	}
	return ""
}

func (x *Request_Impression) GetBidfloor() float32 {
	if x != nil && x.Bidfloor != nil {
		return *x.Bidfloor
	}
	return 0
}

func (x *Request_Impression) GetBanner() *Request_Impression_Banner {
	if x != nil {
		return x.Banner
	}
	return nil
}

func (x *Request_Impression) GetVideo() *Request_Impression_Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *Request_Impression) GetClientid() string {
	if x != nil && x.Clientid != nil {
		return *x.Clientid
	}
	return ""
}

func (x *Request_Impression) GetTradecode() string {
	if x != nil && x.Tradecode != nil {
		return *x.Tradecode
	}
	return ""
}

func (x *Request_Impression) GetSnsLists() string {
	if x != nil && x.SnsLists != nil {
		return *x.SnsLists
	}
	return ""
}

func (x *Request_Impression) GetDealid() string {
	if x != nil && x.Dealid != nil {
		return *x.Dealid
	}
	return ""
}

func (x *Request_Impression) GetAdmRequire() []*Request_Impression_MaterialFormat {
	if x != nil {
		return x.AdmRequire
	}
	return nil
}

func (x *Request_Impression) GetImpExt() *Request_Impression_ImpExt {
	if x != nil {
		return x.ImpExt
	}
	return nil
}

func (x *Request_Impression) GetChannel() string {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return ""
}

type Request_Site struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`       //网站名称
	Page    *string `protobuf:"bytes,2,opt,name=page" json:"page,omitempty"`       //当前页面url
	Ref     *string `protobuf:"bytes,3,opt,name=ref" json:"ref,omitempty"`         //referrer url
	Channel *string `protobuf:"bytes,4,opt,name=channel" json:"channel,omitempty"` //频道号
}

func (x *Request_Site) Reset() {
	*x = Request_Site{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Site) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Site) ProtoMessage() {}

func (x *Request_Site) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Site.ProtoReflect.Descriptor instead.
func (*Request_Site) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Request_Site) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Request_Site) GetPage() string {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return ""
}

func (x *Request_Site) GetRef() string {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return ""
}

func (x *Request_Site) GetChannel() string {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return ""
}

type Request_Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip             *string             `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`                           //设备ip
	Ua             *string             `protobuf:"bytes,2,opt,name=ua" json:"ua,omitempty"`                           //设备user agent
	Geo            *Request_Device_Geo `protobuf:"bytes,3,opt,name=geo" json:"geo,omitempty"`                         //地理位置信息，只提供一定精度模糊值，产生规则详见说明文档。暂无
	Idfa           *string             `protobuf:"bytes,4,opt,name=idfa" json:"idfa,omitempty"`                       //加密方式参见文档
	IdfaEnc        *uint32             `protobuf:"varint,5,opt,name=idfa_enc,json=idfaEnc" json:"idfa_enc,omitempty"` //0: 明文，1 ：MD5, 2:SHA1 默认填0
	Openudid       *string             `protobuf:"bytes,6,opt,name=openudid" json:"openudid,omitempty"`               //加密方式参见文档
	Carrier        *uint32             `protobuf:"varint,7,opt,name=carrier" json:"carrier,omitempty"`                //运营商标识，0 Wifi，70120 中国移动，70121 中国电信，70123 中国联通（与OpenRTB定义有差异），暂无
	Make           *string             `protobuf:"bytes,8,opt,name=make" json:"make,omitempty"`                       //设备品牌，如"Apple"，暂无
	Model          *string             `protobuf:"bytes,9,opt,name=model" json:"model,omitempty"`                     //设备型号，如"iPhone"
	Os             *string             `protobuf:"bytes,10,opt,name=os" json:"os,omitempty"`                          //设备操作系统，如"iOS"
	Osv            *string             `protobuf:"bytes,11,opt,name=Osv" json:"Osv,omitempty"`                        //设备操作系统版本，如"3.1.2"，
	Js             *uint32             `protobuf:"varint,12,opt,name=Js" json:"Js,omitempty"`                         //1:支持JavaScript; 0:不支持
	Connectiontype *uint32             `protobuf:"varint,13,opt,name=connectiontype" json:"connectiontype,omitempty"` //连接类型，0：未知; 1：以太网; 2：Wifi; 3：移动数据-未知; 4：2G; 5：3G; 6：4G;
	Devicetype     *uint32             `protobuf:"varint,14,opt,name=devicetype" json:"devicetype,omitempty"`         //1：手机/平板  2：个人电脑  3：TV。
	Mac            *string             `protobuf:"bytes,15,opt,name=mac" json:"mac,omitempty"`                        //加密方式参见文档
	Imei           *string             `protobuf:"bytes,16,opt,name=imei" json:"imei,omitempty"`                      //加密方式参见文档
	Androidid      *string             `protobuf:"bytes,17,opt,name=androidid" json:"androidid,omitempty"`            //加密方式参见文档
}

func (x *Request_Device) Reset() {
	*x = Request_Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Device) ProtoMessage() {}

func (x *Request_Device) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Device.ProtoReflect.Descriptor instead.
func (*Request_Device) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Request_Device) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *Request_Device) GetUa() string {
	if x != nil && x.Ua != nil {
		return *x.Ua
	}
	return ""
}

func (x *Request_Device) GetGeo() *Request_Device_Geo {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *Request_Device) GetIdfa() string {
	if x != nil && x.Idfa != nil {
		return *x.Idfa
	}
	return ""
}

func (x *Request_Device) GetIdfaEnc() uint32 {
	if x != nil && x.IdfaEnc != nil {
		return *x.IdfaEnc
	}
	return 0
}

func (x *Request_Device) GetOpenudid() string {
	if x != nil && x.Openudid != nil {
		return *x.Openudid
	}
	return ""
}

func (x *Request_Device) GetCarrier() uint32 {
	if x != nil && x.Carrier != nil {
		return *x.Carrier
	}
	return 0
}

func (x *Request_Device) GetMake() string {
	if x != nil && x.Make != nil {
		return *x.Make
	}
	return ""
}

func (x *Request_Device) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *Request_Device) GetOs() string {
	if x != nil && x.Os != nil {
		return *x.Os
	}
	return ""
}

func (x *Request_Device) GetOsv() string {
	if x != nil && x.Osv != nil {
		return *x.Osv
	}
	return ""
}

func (x *Request_Device) GetJs() uint32 {
	if x != nil && x.Js != nil {
		return *x.Js
	}
	return 0
}

func (x *Request_Device) GetConnectiontype() uint32 {
	if x != nil && x.Connectiontype != nil {
		return *x.Connectiontype
	}
	return 0
}

func (x *Request_Device) GetDevicetype() uint32 {
	if x != nil && x.Devicetype != nil {
		return *x.Devicetype
	}
	return 0
}

func (x *Request_Device) GetMac() string {
	if x != nil && x.Mac != nil {
		return *x.Mac
	}
	return ""
}

func (x *Request_Device) GetImei() string {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return ""
}

func (x *Request_Device) GetAndroidid() string {
	if x != nil && x.Androidid != nil {
		return *x.Androidid
	}
	return ""
}

type Request_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`           //tuid,tencent user id
	Buyerid *string `protobuf:"bytes,2,opt,name=buyerid" json:"buyerid,omitempty"` //cookie mapping 匹配的 dsp user id
	Gender  *string `protobuf:"bytes,3,opt,name=gender" json:"gender,omitempty"`   //(目前不使用) M 代表男 F 代表女 不填代表未知
	Age     *uint32 `protobuf:"varint,4,opt,name=age" json:"age,omitempty"`        //(目前不使用) 年龄（0-20（0）、21-30（1）、31-40（2）、41-50(3)、51-60(4)、60+(5)这几个分段）不填代表未知
}

func (x *Request_User) Reset() {
	*x = Request_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_User) ProtoMessage() {}

func (x *Request_User) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_User.ProtoReflect.Descriptor instead.
func (*Request_User) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Request_User) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Request_User) GetBuyerid() string {
	if x != nil && x.Buyerid != nil {
		return *x.Buyerid
	}
	return ""
}

func (x *Request_User) GetGender() string {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return ""
}

func (x *Request_User) GetAge() uint32 {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return 0
}

type Request_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`                 //应用程序ID，Android 上表现为程序的包名, 例如：com.rovio.angrybirds，iOS 上表现为AppStore 上的ID，例如：327860。暂无
	Name       *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`             //应用程序名称
	Domain     *string  `protobuf:"bytes,3,opt,name=domain" json:"domain,omitempty"`         //应用程序域名。暂无
	Cat        []string `protobuf:"bytes,4,rep,name=cat" json:"cat,omitempty"`               //应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。暂无
	Sectioncat []string `protobuf:"bytes,5,rep,name=sectioncat" json:"sectioncat,omitempty"` //子分类。暂无
}

func (x *Request_App) Reset() {
	*x = Request_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_App) ProtoMessage() {}

func (x *Request_App) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_App.ProtoReflect.Descriptor instead.
func (*Request_App) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Request_App) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Request_App) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Request_App) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

func (x *Request_App) GetCat() []string {
	if x != nil {
		return x.Cat
	}
	return nil
}

func (x *Request_App) GetSectioncat() []string {
	if x != nil {
		return x.Sectioncat
	}
	return nil
}

type Request_Impression_ImpExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chid *uint32 `protobuf:"varint,1,opt,name=chid" json:"chid,omitempty"` //渠道id
}

func (x *Request_Impression_ImpExt) Reset() {
	*x = Request_Impression_ImpExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Impression_ImpExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Impression_ImpExt) ProtoMessage() {}

func (x *Request_Impression_ImpExt) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Impression_ImpExt.ProtoReflect.Descriptor instead.
func (*Request_Impression_ImpExt) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Request_Impression_ImpExt) GetChid() uint32 {
	if x != nil && x.Chid != nil {
		return *x.Chid
	}
	return 0
}

type Request_Impression_Banner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width      *uint32  `protobuf:"varint,1,opt,name=width" json:"width,omitempty"`                            //广告位宽度
	Height     *uint32  `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`                          //广告位高度
	Mimes      []string `protobuf:"bytes,3,rep,name=mimes" json:"mimes,omitempty"`                             //支持的素材类型(如 "jpg","swf")
	ExtraStyle *string  `protobuf:"bytes,4,opt,name=extra_style,json=extraStyle" json:"extra_style,omitempty"` //该广告位除广告位规格外额外允许投放的素材尺寸：960*90;1000*90(分号分隔多个 宽*高)
	Visibility *uint32  `protobuf:"varint,5,opt,name=visibility" json:"visibility,omitempty"`                  //广告位所在的屏幕位置: 0:未知 1：首屏 2：非首屏
}

func (x *Request_Impression_Banner) Reset() {
	*x = Request_Impression_Banner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Impression_Banner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Impression_Banner) ProtoMessage() {}

func (x *Request_Impression_Banner) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Impression_Banner.ProtoReflect.Descriptor instead.
func (*Request_Impression_Banner) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *Request_Impression_Banner) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Request_Impression_Banner) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *Request_Impression_Banner) GetMimes() []string {
	if x != nil {
		return x.Mimes
	}
	return nil
}

func (x *Request_Impression_Banner) GetExtraStyle() string {
	if x != nil && x.ExtraStyle != nil {
		return *x.ExtraStyle
	}
	return ""
}

func (x *Request_Impression_Banner) GetVisibility() uint32 {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return 0
}

type Request_Impression_Video struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mimes       []string `protobuf:"bytes,1,rep,name=mimes" json:"mimes,omitempty"`              //支持播放的内容类型(如 "flv","swf")
	Linearity   *uint32  `protobuf:"varint,2,opt,name=linearity" json:"linearity,omitempty"`     //目前没有实际作用，linear/in-stream(1) or non-linear/overlay(2)
	Minduration *uint32  `protobuf:"varint,3,opt,name=minduration" json:"minduration,omitempty"` //广告视频最短时长 单位毫秒
	Maxduration *uint32  `protobuf:"varint,4,opt,name=maxduration" json:"maxduration,omitempty"` //广告视频最长时长 单位毫秒
	Protocol    *uint32  `protobuf:"varint,5,opt,name=protocol" json:"protocol,omitempty"`       //目前没有实际作用，vast 1.0/2.0/3.0/wrapper
	Width       *uint32  `protobuf:"varint,6,opt,name=width" json:"width,omitempty"`             //广告位宽度
	Height      *uint32  `protobuf:"varint,7,opt,name=height" json:"height,omitempty"`           //广告位高度
}

func (x *Request_Impression_Video) Reset() {
	*x = Request_Impression_Video{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Impression_Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Impression_Video) ProtoMessage() {}

func (x *Request_Impression_Video) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Impression_Video.ProtoReflect.Descriptor instead.
func (*Request_Impression_Video) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *Request_Impression_Video) GetMimes() []string {
	if x != nil {
		return x.Mimes
	}
	return nil
}

func (x *Request_Impression_Video) GetLinearity() uint32 {
	if x != nil && x.Linearity != nil {
		return *x.Linearity
	}
	return 0
}

func (x *Request_Impression_Video) GetMinduration() uint32 {
	if x != nil && x.Minduration != nil {
		return *x.Minduration
	}
	return 0
}

func (x *Request_Impression_Video) GetMaxduration() uint32 {
	if x != nil && x.Maxduration != nil {
		return *x.Maxduration
	}
	return 0
}

func (x *Request_Impression_Video) GetProtocol() uint32 {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return 0
}

func (x *Request_Impression_Video) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Request_Impression_Video) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type Request_Impression_MaterialFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  *uint32 `protobuf:"varint,1,opt,name=width" json:"width,omitempty"`   //广告位宽度,txt类型时表示中文个数
	Height *uint32 `protobuf:"varint,2,opt,name=height" json:"height,omitempty"` //广告位高度,txt类型时高度为0
	Mimes  *string `protobuf:"bytes,3,opt,name=mimes" json:"mimes,omitempty"`    //此种播放形式要求的,素材允许的类型,全部小写,多个格式用,隔开 如“swf,jgp,txt”
}

func (x *Request_Impression_MaterialFormat) Reset() {
	*x = Request_Impression_MaterialFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Impression_MaterialFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Impression_MaterialFormat) ProtoMessage() {}

func (x *Request_Impression_MaterialFormat) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Impression_MaterialFormat.ProtoReflect.Descriptor instead.
func (*Request_Impression_MaterialFormat) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{0, 0, 3}
}

func (x *Request_Impression_MaterialFormat) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Request_Impression_MaterialFormat) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *Request_Impression_MaterialFormat) GetMimes() string {
	if x != nil && x.Mimes != nil {
		return *x.Mimes
	}
	return ""
}

type Request_Device_Geo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  *float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`   //纬度，取值从-90到90，南为负值
	Longitude *float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"` //经度，取值从-180到180，西为负值
}

func (x *Request_Device_Geo) Reset() {
	*x = Request_Device_Geo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Device_Geo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Device_Geo) ProtoMessage() {}

func (x *Request_Device_Geo) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Device_Geo.ProtoReflect.Descriptor instead.
func (*Request_Device_Geo) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *Request_Device_Geo) GetLatitude() float32 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *Request_Device_Geo) GetLongitude() float32 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

type Response_Bid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`                                                           //response id per impression(dsp 标识曝光的ID)
	Impid              *string  `protobuf:"bytes,2,opt,name=impid" json:"impid,omitempty"`                                                     //必须有，标识曝光ID(设置为对应Request.Impression.id)
	Price              *float32 `protobuf:"fixed32,3,opt,name=price" json:"price,omitempty"`                                                   //出价，单位千次曝光分
	Adid               *string  `protobuf:"bytes,4,opt,name=adid" json:"adid,omitempty"`                                                       //广告ID或订单ID，跟素材上传api中的dsp_order_id相同
	Nurl               *string  `protobuf:"bytes,5,opt,name=nurl" json:"nurl,omitempty"`                                                       //目前不建议使用，win notice url
	Adm                *string  `protobuf:"bytes,6,opt,name=adm" json:"adm,omitempty"`                                                         //过时的，目前不使用 url已失效
	Ext                *string  `protobuf:"bytes,7,opt,name=ext" json:"ext,omitempty"`                                                         //替换曝光监测和点击中的宏${EXT}。(base64 encoded preferred，512字节以内)
	AdmPara            *string  `protobuf:"bytes,8,opt,name=adm_para,json=admPara" json:"adm_para,omitempty"`                                  //传递给adm的参数列表字符串,如 http://creative.dsp.mediav.com/aa.html?cid=xxxx&pid=xxxx  该字段填充'?'后的部分,不包括问号
	DeprecatedRespinfo *string  `protobuf:"bytes,9,opt,name=deprecated_respinfo,json=deprecatedRespinfo" json:"deprecated_respinfo,omitempty"` //忽略，无用字段
	Ext2               *string  `protobuf:"bytes,10,opt,name=ext2" json:"ext2,omitempty"`                                                      //replace macro ${EXT2}, in click and display monitor(base64 encoded preferred，512字节以内)
	DispExts           []string `protobuf:"bytes,11,rep,name=disp_exts,json=dispExts" json:"disp_exts,omitempty"`                              // display monitor exts,  ${DISPLAY_EXT1/2/3}, no longer than 512 bytes
	ClickExts          []string `protobuf:"bytes,12,rep,name=click_exts,json=clickExts" json:"click_exts,omitempty"`                           // click monitor exts ${CLICK_EXT1/2/3}, no longer than 512 bytes
	Ext3               *string  `protobuf:"bytes,13,opt,name=ext3" json:"ext3,omitempty"`                                                      // replace macro ${EXT3}, in click and display monitor (base64 encoded preferred，512字节以内)
}

func (x *Response_Bid) Reset() {
	*x = Response_Bid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Bid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Bid) ProtoMessage() {}

func (x *Response_Bid) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Bid.ProtoReflect.Descriptor instead.
func (*Response_Bid) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Response_Bid) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Response_Bid) GetImpid() string {
	if x != nil && x.Impid != nil {
		return *x.Impid
	}
	return ""
}

func (x *Response_Bid) GetPrice() float32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *Response_Bid) GetAdid() string {
	if x != nil && x.Adid != nil {
		return *x.Adid
	}
	return ""
}

func (x *Response_Bid) GetNurl() string {
	if x != nil && x.Nurl != nil {
		return *x.Nurl
	}
	return ""
}

func (x *Response_Bid) GetAdm() string {
	if x != nil && x.Adm != nil {
		return *x.Adm
	}
	return ""
}

func (x *Response_Bid) GetExt() string {
	if x != nil && x.Ext != nil {
		return *x.Ext
	}
	return ""
}

func (x *Response_Bid) GetAdmPara() string {
	if x != nil && x.AdmPara != nil {
		return *x.AdmPara
	}
	return ""
}

func (x *Response_Bid) GetDeprecatedRespinfo() string {
	if x != nil && x.DeprecatedRespinfo != nil {
		return *x.DeprecatedRespinfo
	}
	return ""
}

func (x *Response_Bid) GetExt2() string {
	if x != nil && x.Ext2 != nil {
		return *x.Ext2
	}
	return ""
}

func (x *Response_Bid) GetDispExts() []string {
	if x != nil {
		return x.DispExts
	}
	return nil
}

func (x *Response_Bid) GetClickExts() []string {
	if x != nil {
		return x.ClickExts
	}
	return nil
}

func (x *Response_Bid) GetExt3() string {
	if x != nil && x.Ext3 != nil {
		return *x.Ext3
	}
	return ""
}

type Response_SeatBid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bid []*Response_Bid `protobuf:"bytes,1,rep,name=bid" json:"bid,omitempty"` //与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
}

func (x *Response_SeatBid) Reset() {
	*x = Response_SeatBid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tencentBidding_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_SeatBid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_SeatBid) ProtoMessage() {}

func (x *Response_SeatBid) ProtoReflect() protoreflect.Message {
	mi := &file_tencentBidding_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_SeatBid.ProtoReflect.Descriptor instead.
func (*Response_SeatBid) Descriptor() ([]byte, []int) {
	return file_tencentBidding_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Response_SeatBid) GetBid() []*Response_Bid {
	if x != nil {
		return x.Bid
	}
	return nil
}

var File_tencentBidding_proto protoreflect.FileDescriptor

var file_tencentBidding_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69,
	0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x22, 0xbd,
	0x12, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x61, 0x74, 0x12, 0x48, 0x0a, 0x04, 0x73, 0x69,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x52, 0x04,
	0x73, 0x69, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74,
	0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64,
	0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x5a,
	0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64,
	0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x44, 0x45,
	0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x44, 0x45, 0x50, 0x52, 0x45,
	0x43, 0x41, 0x54, 0x45, 0x44, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45,
	0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69,
	0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x72, 0x74, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x70, 0x70,
	0x52, 0x03, 0x61, 0x70, 0x70, 0x1a, 0xa2, 0x08, 0x0a, 0x0a, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x67, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69,
	0x64, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x62, 0x69,
	0x64, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x59, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b,
	0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x12, 0x56, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6e, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x6a, 0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x61, 0x64, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x12, 0x5a, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x5f, 0x65, 0x78, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69,
	0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x49, 0x6d, 0x70, 0x45, 0x78, 0x74, 0x52, 0x06, 0x69, 0x6d, 0x70, 0x45, 0x78, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x1c, 0x0a, 0x06, 0x49, 0x6d,
	0x70, 0x45, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x68, 0x69, 0x64, 0x1a, 0x8d, 0x01, 0x0a, 0x06, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0xc9, 0x01, 0x0a, 0x05, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x65,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x69, 0x6e,
	0x65, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x69, 0x6e,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d,
	0x61, 0x78, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x1a, 0x54, 0x0a, 0x0e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x69, 0x6d, 0x65, 0x73, 0x1a, 0x5a, 0x0a, 0x04, 0x53, 0x69,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x84, 0x04, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x75,
	0x61, 0x12, 0x4c, 0x0a, 0x03, 0x67, 0x65, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6f, 0x52, 0x03, 0x67, 0x65, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x64, 0x66, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x64, 0x66, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x66, 0x61, 0x5f, 0x65, 0x6e, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x64, 0x66, 0x61, 0x45, 0x6e, 0x63, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x75, 0x64, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x75, 0x64, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x4f, 0x73, 0x76, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4f, 0x73, 0x76,
	0x12, 0x0e, 0x0a, 0x02, 0x4a, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x4a, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d,
	0x65, 0x69, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x69, 0x64, 0x1a, 0x3f, 0x0a, 0x03,
	0x47, 0x65, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x1a, 0x5a, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65, 0x1a, 0x73, 0x0a, 0x03, 0x41, 0x70, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x61, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x63, 0x61, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x22, 0x97,
	0x04, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x69, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x64, 0x69,
	0x64, 0x12, 0x52, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64,
	0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x42, 0x69, 0x64, 0x52, 0x07, 0x73, 0x65,
	0x61, 0x74, 0x62, 0x69, 0x64, 0x1a, 0xbd, 0x02, 0x0a, 0x03, 0x42, 0x69, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x70, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x75, 0x72,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x64, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x61, 0x64, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x50, 0x61, 0x72, 0x61,
	0x12, 0x2f, 0x0a, 0x13, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x74, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x65, 0x78, 0x74, 0x32, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x65, 0x78,
	0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x70, 0x45, 0x78,
	0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x65, 0x78, 0x74, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x78, 0x74,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x74, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x65, 0x78, 0x74, 0x33, 0x1a, 0x51, 0x0a, 0x07, 0x53, 0x65, 0x61, 0x74, 0x42, 0x69, 0x64,
	0x12, 0x46, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x42, 0x69, 0x64, 0x52, 0x03, 0x62, 0x69, 0x64, 0x42, 0x38, 0x0a, 0x26, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72,
	0x74, 0x62, 0x42, 0x0e, 0x54, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x64, 0x64, 0x69,
	0x6e, 0x67,
}

var (
	file_tencentBidding_proto_rawDescOnce sync.Once
	file_tencentBidding_proto_rawDescData = file_tencentBidding_proto_rawDesc
)

func file_tencentBidding_proto_rawDescGZIP() []byte {
	file_tencentBidding_proto_rawDescOnce.Do(func() {
		file_tencentBidding_proto_rawDescData = protoimpl.X.CompressGZIP(file_tencentBidding_proto_rawDescData)
	})
	return file_tencentBidding_proto_rawDescData
}

var file_tencentBidding_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_tencentBidding_proto_goTypes = []interface{}{
	(*Request)(nil),                           // 0: com.adkit.demandsideplatform.model.rtb.Request
	(*Response)(nil),                          // 1: com.adkit.demandsideplatform.model.rtb.Response
	(*Request_Impression)(nil),                // 2: com.adkit.demandsideplatform.model.rtb.Request.Impression
	(*Request_Site)(nil),                      // 3: com.adkit.demandsideplatform.model.rtb.Request.Site
	(*Request_Device)(nil),                    // 4: com.adkit.demandsideplatform.model.rtb.Request.Device
	(*Request_User)(nil),                      // 5: com.adkit.demandsideplatform.model.rtb.Request.User
	(*Request_App)(nil),                       // 6: com.adkit.demandsideplatform.model.rtb.Request.App
	(*Request_Impression_ImpExt)(nil),         // 7: com.adkit.demandsideplatform.model.rtb.Request.Impression.ImpExt
	(*Request_Impression_Banner)(nil),         // 8: com.adkit.demandsideplatform.model.rtb.Request.Impression.Banner
	(*Request_Impression_Video)(nil),          // 9: com.adkit.demandsideplatform.model.rtb.Request.Impression.Video
	(*Request_Impression_MaterialFormat)(nil), // 10: com.adkit.demandsideplatform.model.rtb.Request.Impression.MaterialFormat
	(*Request_Device_Geo)(nil),                // 11: com.adkit.demandsideplatform.model.rtb.Request.Device.Geo
	(*Response_Bid)(nil),                      // 12: com.adkit.demandsideplatform.model.rtb.Response.Bid
	(*Response_SeatBid)(nil),                  // 13: com.adkit.demandsideplatform.model.rtb.Response.SeatBid
}
var file_tencentBidding_proto_depIdxs = []int32{
	3,  // 0: com.adkit.demandsideplatform.model.rtb.Request.site:type_name -> com.adkit.demandsideplatform.model.rtb.Request.Site
	4,  // 1: com.adkit.demandsideplatform.model.rtb.Request.device:type_name -> com.adkit.demandsideplatform.model.rtb.Request.Device
	5,  // 2: com.adkit.demandsideplatform.model.rtb.Request.user:type_name -> com.adkit.demandsideplatform.model.rtb.Request.User
	2,  // 3: com.adkit.demandsideplatform.model.rtb.Request.impression:type_name -> com.adkit.demandsideplatform.model.rtb.Request.Impression
	6,  // 4: com.adkit.demandsideplatform.model.rtb.Request.app:type_name -> com.adkit.demandsideplatform.model.rtb.Request.App
	13, // 5: com.adkit.demandsideplatform.model.rtb.Response.seatbid:type_name -> com.adkit.demandsideplatform.model.rtb.Response.SeatBid
	8,  // 6: com.adkit.demandsideplatform.model.rtb.Request.Impression.banner:type_name -> com.adkit.demandsideplatform.model.rtb.Request.Impression.Banner
	9,  // 7: com.adkit.demandsideplatform.model.rtb.Request.Impression.video:type_name -> com.adkit.demandsideplatform.model.rtb.Request.Impression.Video
	10, // 8: com.adkit.demandsideplatform.model.rtb.Request.Impression.adm_require:type_name -> com.adkit.demandsideplatform.model.rtb.Request.Impression.MaterialFormat
	7,  // 9: com.adkit.demandsideplatform.model.rtb.Request.Impression.imp_ext:type_name -> com.adkit.demandsideplatform.model.rtb.Request.Impression.ImpExt
	11, // 10: com.adkit.demandsideplatform.model.rtb.Request.Device.geo:type_name -> com.adkit.demandsideplatform.model.rtb.Request.Device.Geo
	12, // 11: com.adkit.demandsideplatform.model.rtb.Response.SeatBid.bid:type_name -> com.adkit.demandsideplatform.model.rtb.Response.Bid
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_tencentBidding_proto_init() }
func file_tencentBidding_proto_init() {
	if File_tencentBidding_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tencentBidding_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tencentBidding_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tencentBidding_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Impression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tencentBidding_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Site); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tencentBidding_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tencentBidding_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tencentBidding_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tencentBidding_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Impression_ImpExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tencentBidding_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Impression_Banner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tencentBidding_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Impression_Video); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tencentBidding_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Impression_MaterialFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tencentBidding_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Device_Geo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tencentBidding_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Bid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tencentBidding_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_SeatBid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tencentBidding_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tencentBidding_proto_goTypes,
		DependencyIndexes: file_tencentBidding_proto_depIdxs,
		MessageInfos:      file_tencentBidding_proto_msgTypes,
	}.Build()
	File_tencentBidding_proto = out.File
	file_tencentBidding_proto_rawDesc = nil
	file_tencentBidding_proto_goTypes = nil
	file_tencentBidding_proto_depIdxs = nil
}
