// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: ToutiaoBidding6.proto

//2019.12.11

package toutiao

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AdType int32

const (
	AdType_TOUTIAO_FEED_LP_LARGE           AdType = 1   // 690 * 286
	AdType_TOUTIAO_FEED_LP_SMALL           AdType = 2   // 228 * 150
	AdType_TOUTIAO_FEED_APP_LARGE          AdType = 4   // 690 * 286
	AdType_TOUTIAO_FEED_APP_SMALL          AdType = 3   // 228 * 150
	AdType_TOUTIAO_DETAIL_LP_GRAPHIC       AdType = 5   // 100 * 100 已不支持
	AdType_TOUTIAO_DETAIL_LP_BANNER        AdType = 6   // 690 * 238 已不支持
	AdType_TUANZI_FEED_APP                 AdType = 7   // 600 * 400
	AdType_TOUTIAO_DETAIL_APP_BANNER       AdType = 9   // 428 * 238 已不支持
	AdType_TOUTIAO_DETAIL_LP_TEXT_IMAGE    AdType = 10  // 690 * 238
	AdType_TOUTIAO_FEED_LP_GROUP           AdType = 11  //组图 228 * 150
	AdType_TOUTIAO_VIDEO_PATCH             AdType = 12  // 视频贴片广告 720p以上。视频比例16:9
	AdType_NETWORK_SPLASH                  AdType = 13  //开屏广告 1080x1920,1242x1863,1200x1600,1280x1530,1280x755
	AdType_TOUTIAO_SPLASH                  AdType = 14  //头条开屏广告 640*920 640*760 480*640 1242*1786
	AdType_DUANZI_FEED_LP_LARGE            AdType = 15  //段子推荐流-大图落地页，新样式690*286, 旧样式600*400 废弃
	AdType_DUANZI_FEED_LP_SMALL            AdType = 16  //段子推荐流-小图落地页，228*150
	AdType_DUANZI_FEED_LP_GROUP            AdType = 17  //段子推荐流-组图落地页，228*150,3张且有序
	AdType_TOUTIAO_FEED_APP_GROUP          AdType = 18  //头条推荐流应用组图
	AdType_TOUTIAO_RECOMMEND_LP_SMALL      AdType = 19  //头条视频相关推荐小图落地页
	AdType_TOUTIAO_FEED_LP_VIDEO           AdType = 20  //头条信息流落地页视频
	AdType_TOUTIAO_FEED_APP_VIDEO          AdType = 21  // 头条信息流应用下载视频
	AdType_TOUTIAO_RECOMMEND_APP_SMALL     AdType = 22  //头条视频相关推荐应用下载小图
	AdType_TOUTIAO_GALLERY_LP              AdType = 23  // 头条图集落地页 全屏 750*1000
	AdType_DUANZI_FEED_LP_VIDEO            AdType = 24  // 段子推荐流-视频落地页
	AdType_DUANZI_FEED_APP_VIDEO           AdType = 25  // 段子推荐流-视频应用下载
	AdType_TOUTIAO_DETAIL_LP_SMALL         AdType = 26  // 头条详情页小图落地页 228*150
	AdType_TOUTIAO_DETAIL_LP_GROUP         AdType = 27  // 头条详情页组图落地页 228*150*3
	AdType_TOUTIAO_DETAIL_APP_LARGE        AdType = 28  // 头条详情页应用下载新大图 690*388
	AdType_VIDEO_SPLASH                    AdType = 29  //西瓜视频开屏广告 640*920 640*760 480*640 1242*1786
	AdType_VIDEO_PATCH_LP_LARGE            AdType = 30  //视频后贴片落地页大图 690*388 1280*720
	AdType_DUANZI_SPLASH                   AdType = 31  //段子开屏 640*920 640*760 480*640 1242*1786
	AdType_TOUTIAO_SPLASH_VIDEO_FULL       AdType = 32  //头条全屏视频开屏广告 640*1136 640*960 480*800 1242*2208
	AdType_TOUTIAO_SPLASH_VIDEO_IMG        AdType = 33  //头条插屏视频开屏广告
	AdType_TOUTIAO_FEED_LP_GIF             AdType = 34  //头条信息流落地页微动 690*388
	AdType_HOTSOON_FEED_LP_LARGE           AdType = 35  //火山信息流落地页竖图 870*540
	AdType_TOUTIAO_GALLERY_LERGE_LP        AdType = 36  //图集尾帧_大图_落地页 690 * 388
	AdType_TOUTIAO_GALLERY_LERGE_APP       AdType = 37  //图集尾帧_大图_应用下载 690 * 388
	AdType_HOTSOON_FEED_LP_VERTICAL_VIDEO  AdType = 38  //火山信息流_落地页竖版视频
	AdType_HOTSOON_FEED_APP_VERTICAL_VIDEO AdType = 39  //火山信息流_应用下载竖版视频
	AdType_COMMON_SPLASH_GIF               AdType = 41  //通用开屏gif
	AdType_COMMON_SPLASH                   AdType = 42  //通用开屏图片
	AdType_AWEME_FEED_LP_VERTICAL_VIDEO    AdType = 43  //抖音信息流_落地页竖版视频
	AdType_AWEME_FEED_APP_VERTICAL_VIDEO   AdType = 44  //抖音信息流_应用下载竖版视频
	AdType_UNION_FEED_LP_LARGE             AdType = 45  //联盟信息流_落地页_大图
	AdType_UNION_FEED_LP_SMALL             AdType = 46  //联盟信息流_落地页_小图
	AdType_UNION_FEED_LP_GROUP             AdType = 47  //联盟信息流_落地页_组图
	AdType_UNION_FEED_APP_LARGE            AdType = 48  //联盟信息流_应用下载_大图
	AdType_UNION_FEED_APP_SMALL            AdType = 49  //联盟信息流_应用下载_小图
	AdType_UNION_FEED_APP_GROUP            AdType = 50  //联盟信息流_应用下载_组图
	AdType_COMMON_SPLASH_VIDEO_FULL        AdType = 51  //全屏视频开屏广告 640*1136 640*960 480*800 1242*2208
	AdType_COMMON_TEXTLINK_LP_CARD         AdType = 52  //详情页落地页卡片 目前有抖音POI详情页
	AdType_UNION_SPLASH_LP                 AdType = 53  //联盟开屏_落地页
	AdType_UNION_SPLASH_APP                AdType = 54  //联盟开屏_应用下载
	AdType_COMMON_LP_LARGE                 AdType = 55  //通用_落地页_大图
	AdType_COMMON_LP_SMALL                 AdType = 56  //通用_落地页_小图
	AdType_COMMON_LP_GROUP                 AdType = 57  //通用_落地页_组图
	AdType_COMMON_APP_LARGE                AdType = 58  //通用_应用下载_大图
	AdType_COMMON_APP_SMALL                AdType = 59  //通用_应用下载_小图
	AdType_COMMON_APP_GROUP                AdType = 60  //通用_应用下载_组图
	AdType_COMMON_LP_VIDEO                 AdType = 61  //通用_落地页_横版视频
	AdType_COMMON_APP_VIDEO                AdType = 62  //通用_应用下载_横版视频
	AdType_COMMON_LP_VERTICAL_VIDEO        AdType = 63  //通用_落地页_竖版视频
	AdType_COMMON_APP_VERTICAL_VIDEO       AdType = 64  //通用_应用下载_竖版视频
	AdType_COMMON_LP_PATCH_VIDEO           AdType = 65  //西瓜视频后贴片视频落地页 690*388 1280*720
	AdType_COMMON_SPLASH_FULL              AdType = 66  //通用_开屏_全屏静图 1242*2208、750*1624、720*1280、1080*1920、1080*2340
	AdType_COMMON_LP_NO_IMAGE              AdType = 67  //通用_落地页_无图
	AdType_UNION_LP_VIDEO                  AdType = 68  //联盟视频_落地页_横版视频
	AdType_UNION_APP_VIDEO                 AdType = 69  //联盟视频_应用下载_横版视频
	AdType_UNION_LP_VERTICAL_VIDEO         AdType = 70  //联盟视频_落地页_竖版视频
	AdType_UNION_APP_VERTICAL_VIDEO        AdType = 71  //联盟视频_应用下载_竖版视频
	AdType_I18N_FEED_LP_LARGE              AdType = 201 //国际化FEED大图 628*1200
	AdType_I18N_FEED_VIDEO                 AdType = 202 //国际化视频
)

// Enum value maps for AdType.
var (
	AdType_name = map[int32]string{
		1:   "TOUTIAO_FEED_LP_LARGE",
		2:   "TOUTIAO_FEED_LP_SMALL",
		4:   "TOUTIAO_FEED_APP_LARGE",
		3:   "TOUTIAO_FEED_APP_SMALL",
		5:   "TOUTIAO_DETAIL_LP_GRAPHIC",
		6:   "TOUTIAO_DETAIL_LP_BANNER",
		7:   "TUANZI_FEED_APP",
		9:   "TOUTIAO_DETAIL_APP_BANNER",
		10:  "TOUTIAO_DETAIL_LP_TEXT_IMAGE",
		11:  "TOUTIAO_FEED_LP_GROUP",
		12:  "TOUTIAO_VIDEO_PATCH",
		13:  "NETWORK_SPLASH",
		14:  "TOUTIAO_SPLASH",
		15:  "DUANZI_FEED_LP_LARGE",
		16:  "DUANZI_FEED_LP_SMALL",
		17:  "DUANZI_FEED_LP_GROUP",
		18:  "TOUTIAO_FEED_APP_GROUP",
		19:  "TOUTIAO_RECOMMEND_LP_SMALL",
		20:  "TOUTIAO_FEED_LP_VIDEO",
		21:  "TOUTIAO_FEED_APP_VIDEO",
		22:  "TOUTIAO_RECOMMEND_APP_SMALL",
		23:  "TOUTIAO_GALLERY_LP",
		24:  "DUANZI_FEED_LP_VIDEO",
		25:  "DUANZI_FEED_APP_VIDEO",
		26:  "TOUTIAO_DETAIL_LP_SMALL",
		27:  "TOUTIAO_DETAIL_LP_GROUP",
		28:  "TOUTIAO_DETAIL_APP_LARGE",
		29:  "VIDEO_SPLASH",
		30:  "VIDEO_PATCH_LP_LARGE",
		31:  "DUANZI_SPLASH",
		32:  "TOUTIAO_SPLASH_VIDEO_FULL",
		33:  "TOUTIAO_SPLASH_VIDEO_IMG",
		34:  "TOUTIAO_FEED_LP_GIF",
		35:  "HOTSOON_FEED_LP_LARGE",
		36:  "TOUTIAO_GALLERY_LERGE_LP",
		37:  "TOUTIAO_GALLERY_LERGE_APP",
		38:  "HOTSOON_FEED_LP_VERTICAL_VIDEO",
		39:  "HOTSOON_FEED_APP_VERTICAL_VIDEO",
		41:  "COMMON_SPLASH_GIF",
		42:  "COMMON_SPLASH",
		43:  "AWEME_FEED_LP_VERTICAL_VIDEO",
		44:  "AWEME_FEED_APP_VERTICAL_VIDEO",
		45:  "UNION_FEED_LP_LARGE",
		46:  "UNION_FEED_LP_SMALL",
		47:  "UNION_FEED_LP_GROUP",
		48:  "UNION_FEED_APP_LARGE",
		49:  "UNION_FEED_APP_SMALL",
		50:  "UNION_FEED_APP_GROUP",
		51:  "COMMON_SPLASH_VIDEO_FULL",
		52:  "COMMON_TEXTLINK_LP_CARD",
		53:  "UNION_SPLASH_LP",
		54:  "UNION_SPLASH_APP",
		55:  "COMMON_LP_LARGE",
		56:  "COMMON_LP_SMALL",
		57:  "COMMON_LP_GROUP",
		58:  "COMMON_APP_LARGE",
		59:  "COMMON_APP_SMALL",
		60:  "COMMON_APP_GROUP",
		61:  "COMMON_LP_VIDEO",
		62:  "COMMON_APP_VIDEO",
		63:  "COMMON_LP_VERTICAL_VIDEO",
		64:  "COMMON_APP_VERTICAL_VIDEO",
		65:  "COMMON_LP_PATCH_VIDEO",
		66:  "COMMON_SPLASH_FULL",
		67:  "COMMON_LP_NO_IMAGE",
		68:  "UNION_LP_VIDEO",
		69:  "UNION_APP_VIDEO",
		70:  "UNION_LP_VERTICAL_VIDEO",
		71:  "UNION_APP_VERTICAL_VIDEO",
		201: "I18N_FEED_LP_LARGE",
		202: "I18N_FEED_VIDEO",
	}
	AdType_value = map[string]int32{
		"TOUTIAO_FEED_LP_LARGE":           1,
		"TOUTIAO_FEED_LP_SMALL":           2,
		"TOUTIAO_FEED_APP_LARGE":          4,
		"TOUTIAO_FEED_APP_SMALL":          3,
		"TOUTIAO_DETAIL_LP_GRAPHIC":       5,
		"TOUTIAO_DETAIL_LP_BANNER":        6,
		"TUANZI_FEED_APP":                 7,
		"TOUTIAO_DETAIL_APP_BANNER":       9,
		"TOUTIAO_DETAIL_LP_TEXT_IMAGE":    10,
		"TOUTIAO_FEED_LP_GROUP":           11,
		"TOUTIAO_VIDEO_PATCH":             12,
		"NETWORK_SPLASH":                  13,
		"TOUTIAO_SPLASH":                  14,
		"DUANZI_FEED_LP_LARGE":            15,
		"DUANZI_FEED_LP_SMALL":            16,
		"DUANZI_FEED_LP_GROUP":            17,
		"TOUTIAO_FEED_APP_GROUP":          18,
		"TOUTIAO_RECOMMEND_LP_SMALL":      19,
		"TOUTIAO_FEED_LP_VIDEO":           20,
		"TOUTIAO_FEED_APP_VIDEO":          21,
		"TOUTIAO_RECOMMEND_APP_SMALL":     22,
		"TOUTIAO_GALLERY_LP":              23,
		"DUANZI_FEED_LP_VIDEO":            24,
		"DUANZI_FEED_APP_VIDEO":           25,
		"TOUTIAO_DETAIL_LP_SMALL":         26,
		"TOUTIAO_DETAIL_LP_GROUP":         27,
		"TOUTIAO_DETAIL_APP_LARGE":        28,
		"VIDEO_SPLASH":                    29,
		"VIDEO_PATCH_LP_LARGE":            30,
		"DUANZI_SPLASH":                   31,
		"TOUTIAO_SPLASH_VIDEO_FULL":       32,
		"TOUTIAO_SPLASH_VIDEO_IMG":        33,
		"TOUTIAO_FEED_LP_GIF":             34,
		"HOTSOON_FEED_LP_LARGE":           35,
		"TOUTIAO_GALLERY_LERGE_LP":        36,
		"TOUTIAO_GALLERY_LERGE_APP":       37,
		"HOTSOON_FEED_LP_VERTICAL_VIDEO":  38,
		"HOTSOON_FEED_APP_VERTICAL_VIDEO": 39,
		"COMMON_SPLASH_GIF":               41,
		"COMMON_SPLASH":                   42,
		"AWEME_FEED_LP_VERTICAL_VIDEO":    43,
		"AWEME_FEED_APP_VERTICAL_VIDEO":   44,
		"UNION_FEED_LP_LARGE":             45,
		"UNION_FEED_LP_SMALL":             46,
		"UNION_FEED_LP_GROUP":             47,
		"UNION_FEED_APP_LARGE":            48,
		"UNION_FEED_APP_SMALL":            49,
		"UNION_FEED_APP_GROUP":            50,
		"COMMON_SPLASH_VIDEO_FULL":        51,
		"COMMON_TEXTLINK_LP_CARD":         52,
		"UNION_SPLASH_LP":                 53,
		"UNION_SPLASH_APP":                54,
		"COMMON_LP_LARGE":                 55,
		"COMMON_LP_SMALL":                 56,
		"COMMON_LP_GROUP":                 57,
		"COMMON_APP_LARGE":                58,
		"COMMON_APP_SMALL":                59,
		"COMMON_APP_GROUP":                60,
		"COMMON_LP_VIDEO":                 61,
		"COMMON_APP_VIDEO":                62,
		"COMMON_LP_VERTICAL_VIDEO":        63,
		"COMMON_APP_VERTICAL_VIDEO":       64,
		"COMMON_LP_PATCH_VIDEO":           65,
		"COMMON_SPLASH_FULL":              66,
		"COMMON_LP_NO_IMAGE":              67,
		"UNION_LP_VIDEO":                  68,
		"UNION_APP_VIDEO":                 69,
		"UNION_LP_VERTICAL_VIDEO":         70,
		"UNION_APP_VERTICAL_VIDEO":        71,
		"I18N_FEED_LP_LARGE":              201,
		"I18N_FEED_VIDEO":                 202,
	}
)

func (x AdType) Enum() *AdType {
	p := new(AdType)
	*p = x
	return p
}

func (x AdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdType) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[0].Descriptor()
}

func (AdType) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[0]
}

func (x AdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AdType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AdType(num)
	return nil
}

// Deprecated: Use AdType.Descriptor instead.
func (AdType) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{0}
}

type AdvCreativeType int32

const (
	AdvCreativeType_NONE               AdvCreativeType = 0  // 普通落地页
	AdvCreativeType_ACTION             AdvCreativeType = 2  // 电话拨打创意
	AdvCreativeType_DISCOUNT           AdvCreativeType = 5  // 优惠券
	AdvCreativeType_MAGNET_CARD        AdvCreativeType = 8  // 抖音图片磁贴附加创意
	AdvCreativeType_COMMODITY_CARD     AdvCreativeType = 9  // 抖音卡片样式
	AdvCreativeType_RIGHT_CARD         AdvCreativeType = 20 // 抖音权益卡片
	AdvCreativeType_SMART_PHONE_ACTION AdvCreativeType = 14 // 智能电话附加创意
	AdvCreativeType_SHOP_WINDOW        AdvCreativeType = 19 // 火山电商卡片
	AdvCreativeType_OUTIQUE_BAR        AdvCreativeType = 28 // 头条品牌精品栏
)

// Enum value maps for AdvCreativeType.
var (
	AdvCreativeType_name = map[int32]string{
		0:  "NONE",
		2:  "ACTION",
		5:  "DISCOUNT",
		8:  "MAGNET_CARD",
		9:  "COMMODITY_CARD",
		20: "RIGHT_CARD",
		14: "SMART_PHONE_ACTION",
		19: "SHOP_WINDOW",
		28: "OUTIQUE_BAR",
	}
	AdvCreativeType_value = map[string]int32{
		"NONE":               0,
		"ACTION":             2,
		"DISCOUNT":           5,
		"MAGNET_CARD":        8,
		"COMMODITY_CARD":     9,
		"RIGHT_CARD":         20,
		"SMART_PHONE_ACTION": 14,
		"SHOP_WINDOW":        19,
		"OUTIQUE_BAR":        28,
	}
)

func (x AdvCreativeType) Enum() *AdvCreativeType {
	p := new(AdvCreativeType)
	*p = x
	return p
}

func (x AdvCreativeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdvCreativeType) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[1].Descriptor()
}

func (AdvCreativeType) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[1]
}

func (x AdvCreativeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AdvCreativeType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AdvCreativeType(num)
	return nil
}

// Deprecated: Use AdvCreativeType.Descriptor instead.
func (AdvCreativeType) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{1}
}

type LpType int32

const (
	LpType_DEFAULT LpType = 0 // 普通落地页
	LpType_ATLAS   LpType = 1 // 图集落地页
)

// Enum value maps for LpType.
var (
	LpType_name = map[int32]string{
		0: "DEFAULT",
		1: "ATLAS",
	}
	LpType_value = map[string]int32{
		"DEFAULT": 0,
		"ATLAS":   1,
	}
)

func (x LpType) Enum() *LpType {
	p := new(LpType)
	*p = x
	return p
}

func (x LpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LpType) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[2].Descriptor()
}

func (LpType) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[2]
}

func (x LpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LpType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LpType(num)
	return nil
}

// Deprecated: Use LpType.Descriptor instead.
func (LpType) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{2}
}

type AuditType int32

const (
	AuditType_DELIVER_FIRST     AuditType = 1
	AuditType_AUDIT_FIRST       AuditType = 2
	AuditType_DELIVER_AND_AUDIT AuditType = 3
)

// Enum value maps for AuditType.
var (
	AuditType_name = map[int32]string{
		1: "DELIVER_FIRST",
		2: "AUDIT_FIRST",
		3: "DELIVER_AND_AUDIT",
	}
	AuditType_value = map[string]int32{
		"DELIVER_FIRST":     1,
		"AUDIT_FIRST":       2,
		"DELIVER_AND_AUDIT": 3,
	}
)

func (x AuditType) Enum() *AuditType {
	p := new(AuditType)
	*p = x
	return p
}

func (x AuditType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditType) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[3].Descriptor()
}

func (AuditType) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[3]
}

func (x AuditType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AuditType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AuditType(num)
	return nil
}

// Deprecated: Use AuditType.Descriptor instead.
func (AuditType) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{3}
}

type PricingType int32

const (
	PricingType_PRICING_CPM         PricingType = 1
	PricingType_PRICING_CPC         PricingType = 2
	PricingType_PRICING_CPM_AND_CPC PricingType = 3
)

// Enum value maps for PricingType.
var (
	PricingType_name = map[int32]string{
		1: "PRICING_CPM",
		2: "PRICING_CPC",
		3: "PRICING_CPM_AND_CPC",
	}
	PricingType_value = map[string]int32{
		"PRICING_CPM":         1,
		"PRICING_CPC":         2,
		"PRICING_CPM_AND_CPC": 3,
	}
)

func (x PricingType) Enum() *PricingType {
	p := new(PricingType)
	*p = x
	return p
}

func (x PricingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PricingType) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[4].Descriptor()
}

func (PricingType) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[4]
}

func (x PricingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PricingType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PricingType(num)
	return nil
}

// Deprecated: Use PricingType.Descriptor instead.
func (PricingType) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{4}
}

// value 的类型, 通过字符串转换
type ValueType int32

const (
	ValueType_INT    ValueType = 1 // int64
	ValueType_FLOAT  ValueType = 2 // float64
	ValueType_STRING ValueType = 3 // string
	ValueType_BOOL   ValueType = 4 // true or false
)

// Enum value maps for ValueType.
var (
	ValueType_name = map[int32]string{
		1: "INT",
		2: "FLOAT",
		3: "STRING",
		4: "BOOL",
	}
	ValueType_value = map[string]int32{
		"INT":    1,
		"FLOAT":  2,
		"STRING": 3,
		"BOOL":   4,
	}
)

func (x ValueType) Enum() *ValueType {
	p := new(ValueType)
	*p = x
	return p
}

func (x ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[5].Descriptor()
}

func (ValueType) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[5]
}

func (x ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ValueType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ValueType(num)
	return nil
}

// Deprecated: Use ValueType.Descriptor instead.
func (ValueType) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{5}
}

type FilterType int32

const (
	FilterType_AD_ID    FilterType = 1
	FilterType_CATEGORY FilterType = 2
	FilterType_SIMONS   FilterType = 3
)

// Enum value maps for FilterType.
var (
	FilterType_name = map[int32]string{
		1: "AD_ID",
		2: "CATEGORY",
		3: "SIMONS",
	}
	FilterType_value = map[string]int32{
		"AD_ID":    1,
		"CATEGORY": 2,
		"SIMONS":   3,
	}
)

func (x FilterType) Enum() *FilterType {
	p := new(FilterType)
	*p = x
	return p
}

func (x FilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[6].Descriptor()
}

func (FilterType) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[6]
}

func (x FilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FilterType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FilterType(num)
	return nil
}

// Deprecated: Use FilterType.Descriptor instead.
func (FilterType) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{6}
}

type AdSlot_Position int32

const (
	AdSlot_SPLASH               AdSlot_Position = 1
	AdSlot_FEED                 AdSlot_Position = 2
	AdSlot_DETAIL               AdSlot_Position = 4
	AdSlot_RECOMMEND            AdSlot_Position = 8
	AdSlot_GALLERY              AdSlot_Position = 16
	AdSlot_VIDEO_PATCH          AdSlot_Position = 32
	AdSlot_UNION_FEED           AdSlot_Position = 64
	AdSlot_TEXTLINK_CARD        AdSlot_Position = 128
	AdSlot_TEXTLINK_MIDDLE_CARD AdSlot_Position = 129
	AdSlot_UNION_SPLASH         AdSlot_Position = 256
	AdSlot_SEARCH               AdSlot_Position = 512
	AdSlot_TAB_DRAW             AdSlot_Position = 1024
	AdSlot_PRE_PATCH            AdSlot_Position = 2048
)

// Enum value maps for AdSlot_Position.
var (
	AdSlot_Position_name = map[int32]string{
		1:    "SPLASH",
		2:    "FEED",
		4:    "DETAIL",
		8:    "RECOMMEND",
		16:   "GALLERY",
		32:   "VIDEO_PATCH",
		64:   "UNION_FEED",
		128:  "TEXTLINK_CARD",
		129:  "TEXTLINK_MIDDLE_CARD",
		256:  "UNION_SPLASH",
		512:  "SEARCH",
		1024: "TAB_DRAW",
		2048: "PRE_PATCH",
	}
	AdSlot_Position_value = map[string]int32{
		"SPLASH":               1,
		"FEED":                 2,
		"DETAIL":               4,
		"RECOMMEND":            8,
		"GALLERY":              16,
		"VIDEO_PATCH":          32,
		"UNION_FEED":           64,
		"TEXTLINK_CARD":        128,
		"TEXTLINK_MIDDLE_CARD": 129,
		"UNION_SPLASH":         256,
		"SEARCH":               512,
		"TAB_DRAW":             1024,
		"PRE_PATCH":            2048,
	}
)

func (x AdSlot_Position) Enum() *AdSlot_Position {
	p := new(AdSlot_Position)
	*p = x
	return p
}

func (x AdSlot_Position) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdSlot_Position) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[7].Descriptor()
}

func (AdSlot_Position) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[7]
}

func (x AdSlot_Position) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AdSlot_Position) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AdSlot_Position(num)
	return nil
}

// Deprecated: Use AdSlot_Position.Descriptor instead.
func (AdSlot_Position) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{1, 0}
}

type Device_ConnectionType int32

const (
	Device_Honeycomb Device_ConnectionType = 1 // 3G网
	Device_WIFI      Device_ConnectionType = 2
	Device_UNKNOWN   Device_ConnectionType = 3
	Device_NT_2G     Device_ConnectionType = 4 //2G网
	Device_NT_4G     Device_ConnectionType = 5 //4G网
)

// Enum value maps for Device_ConnectionType.
var (
	Device_ConnectionType_name = map[int32]string{
		1: "Honeycomb",
		2: "WIFI",
		3: "UNKNOWN",
		4: "NT_2G",
		5: "NT_4G",
	}
	Device_ConnectionType_value = map[string]int32{
		"Honeycomb": 1,
		"WIFI":      2,
		"UNKNOWN":   3,
		"NT_2G":     4,
		"NT_4G":     5,
	}
)

func (x Device_ConnectionType) Enum() *Device_ConnectionType {
	p := new(Device_ConnectionType)
	*p = x
	return p
}

func (x Device_ConnectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Device_ConnectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[8].Descriptor()
}

func (Device_ConnectionType) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[8]
}

func (x Device_ConnectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Device_ConnectionType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Device_ConnectionType(num)
	return nil
}

// Deprecated: Use Device_ConnectionType.Descriptor instead.
func (Device_ConnectionType) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{6, 0}
}

type Device_DeviceType int32

const (
	Device_PHONE  Device_DeviceType = 1
	Device_TABLET Device_DeviceType = 2
)

// Enum value maps for Device_DeviceType.
var (
	Device_DeviceType_name = map[int32]string{
		1: "PHONE",
		2: "TABLET",
	}
	Device_DeviceType_value = map[string]int32{
		"PHONE":  1,
		"TABLET": 2,
	}
)

func (x Device_DeviceType) Enum() *Device_DeviceType {
	p := new(Device_DeviceType)
	*p = x
	return p
}

func (x Device_DeviceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Device_DeviceType) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[9].Descriptor()
}

func (Device_DeviceType) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[9]
}

func (x Device_DeviceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Device_DeviceType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Device_DeviceType(num)
	return nil
}

// Deprecated: Use Device_DeviceType.Descriptor instead.
func (Device_DeviceType) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{6, 1}
}

type User_Gender int32

const (
	User_MALE    User_Gender = 1
	User_FEMALE  User_Gender = 2
	User_UNKNOWN User_Gender = 3
)

// Enum value maps for User_Gender.
var (
	User_Gender_name = map[int32]string{
		1: "MALE",
		2: "FEMALE",
		3: "UNKNOWN",
	}
	User_Gender_value = map[string]int32{
		"MALE":    1,
		"FEMALE":  2,
		"UNKNOWN": 3,
	}
)

func (x User_Gender) Enum() *User_Gender {
	p := new(User_Gender)
	*p = x
	return p
}

func (x User_Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User_Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[10].Descriptor()
}

func (User_Gender) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[10]
}

func (x User_Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *User_Gender) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = User_Gender(num)
	return nil
}

// Deprecated: Use User_Gender.Descriptor instead.
func (User_Gender) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{8, 0}
}

type BidRequest_BidReqType int32

const (
	BidRequest_ONLY_RETARGET    BidRequest_BidReqType = 1
	BidRequest_ONLY_DSP         BidRequest_BidReqType = 2
	BidRequest_RETARGET_AND_DSP BidRequest_BidReqType = 3
)

// Enum value maps for BidRequest_BidReqType.
var (
	BidRequest_BidReqType_name = map[int32]string{
		1: "ONLY_RETARGET",
		2: "ONLY_DSP",
		3: "RETARGET_AND_DSP",
	}
	BidRequest_BidReqType_value = map[string]int32{
		"ONLY_RETARGET":    1,
		"ONLY_DSP":         2,
		"RETARGET_AND_DSP": 3,
	}
)

func (x BidRequest_BidReqType) Enum() *BidRequest_BidReqType {
	p := new(BidRequest_BidReqType)
	*p = x
	return p
}

func (x BidRequest_BidReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BidRequest_BidReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[11].Descriptor()
}

func (BidRequest_BidReqType) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[11]
}

func (x BidRequest_BidReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BidRequest_BidReqType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BidRequest_BidReqType(num)
	return nil
}

// Deprecated: Use BidRequest_BidReqType.Descriptor instead.
func (BidRequest_BidReqType) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{11, 0}
}

type MaterialMeta_ExternalMeta_ButtonText int32

const (
	MaterialMeta_ExternalMeta_PHONE_DIAL      MaterialMeta_ExternalMeta_ButtonText = 0
	MaterialMeta_ExternalMeta_CONSULT_HOTLINE MaterialMeta_ExternalMeta_ButtonText = 1
	MaterialMeta_ExternalMeta_PHONE_CONSULT   MaterialMeta_ExternalMeta_ButtonText = 2
	MaterialMeta_ExternalMeta_ATONCE_DIAL     MaterialMeta_ExternalMeta_ButtonText = 3
	MaterialMeta_ExternalMeta_CONSULT_PHONE   MaterialMeta_ExternalMeta_ButtonText = 4
	MaterialMeta_ExternalMeta_FREE_HOTLINE    MaterialMeta_ExternalMeta_ButtonText = 5
	MaterialMeta_ExternalMeta_JOIN_HOTLINE    MaterialMeta_ExternalMeta_ButtonText = 6
	MaterialMeta_ExternalMeta_ORDER_HOTLINE   MaterialMeta_ExternalMeta_ButtonText = 7
)

// Enum value maps for MaterialMeta_ExternalMeta_ButtonText.
var (
	MaterialMeta_ExternalMeta_ButtonText_name = map[int32]string{
		0: "PHONE_DIAL",
		1: "CONSULT_HOTLINE",
		2: "PHONE_CONSULT",
		3: "ATONCE_DIAL",
		4: "CONSULT_PHONE",
		5: "FREE_HOTLINE",
		6: "JOIN_HOTLINE",
		7: "ORDER_HOTLINE",
	}
	MaterialMeta_ExternalMeta_ButtonText_value = map[string]int32{
		"PHONE_DIAL":      0,
		"CONSULT_HOTLINE": 1,
		"PHONE_CONSULT":   2,
		"ATONCE_DIAL":     3,
		"CONSULT_PHONE":   4,
		"FREE_HOTLINE":    5,
		"JOIN_HOTLINE":    6,
		"ORDER_HOTLINE":   7,
	}
)

func (x MaterialMeta_ExternalMeta_ButtonText) Enum() *MaterialMeta_ExternalMeta_ButtonText {
	p := new(MaterialMeta_ExternalMeta_ButtonText)
	*p = x
	return p
}

func (x MaterialMeta_ExternalMeta_ButtonText) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaterialMeta_ExternalMeta_ButtonText) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[12].Descriptor()
}

func (MaterialMeta_ExternalMeta_ButtonText) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[12]
}

func (x MaterialMeta_ExternalMeta_ButtonText) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MaterialMeta_ExternalMeta_ButtonText) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MaterialMeta_ExternalMeta_ButtonText(num)
	return nil
}

// Deprecated: Use MaterialMeta_ExternalMeta_ButtonText.Descriptor instead.
func (MaterialMeta_ExternalMeta_ButtonText) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 1, 0}
}

type MaterialMeta_ExternalMeta_CommodityButtonText int32

const (
	MaterialMeta_ExternalMeta_TO_VISIT     MaterialMeta_ExternalMeta_CommodityButtonText = 0
	MaterialMeta_ExternalMeta_NEW_GOODS    MaterialMeta_ExternalMeta_CommodityButtonText = 1
	MaterialMeta_ExternalMeta_MARKET_LIST  MaterialMeta_ExternalMeta_CommodityButtonText = 2
	MaterialMeta_ExternalMeta_SECKILL      MaterialMeta_ExternalMeta_CommodityButtonText = 3
	MaterialMeta_ExternalMeta_PANIC_BUYING MaterialMeta_ExternalMeta_CommodityButtonText = 4
	MaterialMeta_ExternalMeta_HOT_SALE     MaterialMeta_ExternalMeta_CommodityButtonText = 5
	MaterialMeta_ExternalMeta_GOODS_ADMIRE MaterialMeta_ExternalMeta_CommodityButtonText = 6
	MaterialMeta_ExternalMeta_MORE_INFO    MaterialMeta_ExternalMeta_CommodityButtonText = 7
)

// Enum value maps for MaterialMeta_ExternalMeta_CommodityButtonText.
var (
	MaterialMeta_ExternalMeta_CommodityButtonText_name = map[int32]string{
		0: "TO_VISIT",
		1: "NEW_GOODS",
		2: "MARKET_LIST",
		3: "SECKILL",
		4: "PANIC_BUYING",
		5: "HOT_SALE",
		6: "GOODS_ADMIRE",
		7: "MORE_INFO",
	}
	MaterialMeta_ExternalMeta_CommodityButtonText_value = map[string]int32{
		"TO_VISIT":     0,
		"NEW_GOODS":    1,
		"MARKET_LIST":  2,
		"SECKILL":      3,
		"PANIC_BUYING": 4,
		"HOT_SALE":     5,
		"GOODS_ADMIRE": 6,
		"MORE_INFO":    7,
	}
)

func (x MaterialMeta_ExternalMeta_CommodityButtonText) Enum() *MaterialMeta_ExternalMeta_CommodityButtonText {
	p := new(MaterialMeta_ExternalMeta_CommodityButtonText)
	*p = x
	return p
}

func (x MaterialMeta_ExternalMeta_CommodityButtonText) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaterialMeta_ExternalMeta_CommodityButtonText) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[13].Descriptor()
}

func (MaterialMeta_ExternalMeta_CommodityButtonText) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[13]
}

func (x MaterialMeta_ExternalMeta_CommodityButtonText) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MaterialMeta_ExternalMeta_CommodityButtonText) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MaterialMeta_ExternalMeta_CommodityButtonText(num)
	return nil
}

// Deprecated: Use MaterialMeta_ExternalMeta_CommodityButtonText.Descriptor instead.
func (MaterialMeta_ExternalMeta_CommodityButtonText) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 1, 1}
}

type Bid_BidAdType int32

const (
	Bid_RETARGET_AD     Bid_BidAdType = 1 //重定向广告，Adx负责对广告做ranking，比如：直投类型
	Bid_DSP_AD          Bid_BidAdType = 2 //DSP广告，目前专指RTB广告
	Bid_NON_RETARGET_AD Bid_BidAdType = 3 //非重定向广告，
)

// Enum value maps for Bid_BidAdType.
var (
	Bid_BidAdType_name = map[int32]string{
		1: "RETARGET_AD",
		2: "DSP_AD",
		3: "NON_RETARGET_AD",
	}
	Bid_BidAdType_value = map[string]int32{
		"RETARGET_AD":     1,
		"DSP_AD":          2,
		"NON_RETARGET_AD": 3,
	}
)

func (x Bid_BidAdType) Enum() *Bid_BidAdType {
	p := new(Bid_BidAdType)
	*p = x
	return p
}

func (x Bid_BidAdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bid_BidAdType) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[14].Descriptor()
}

func (Bid_BidAdType) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[14]
}

func (x Bid_BidAdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Bid_BidAdType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Bid_BidAdType(num)
	return nil
}

// Deprecated: Use Bid_BidAdType.Descriptor instead.
func (Bid_BidAdType) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{13, 0}
}

type DspUserInfo_DspUserType int32

const (
	DspUserInfo_DEFAULT DspUserInfo_DspUserType = 1
)

// Enum value maps for DspUserInfo_DspUserType.
var (
	DspUserInfo_DspUserType_name = map[int32]string{
		1: "DEFAULT",
	}
	DspUserInfo_DspUserType_value = map[string]int32{
		"DEFAULT": 1,
	}
)

func (x DspUserInfo_DspUserType) Enum() *DspUserInfo_DspUserType {
	p := new(DspUserInfo_DspUserType)
	*p = x
	return p
}

func (x DspUserInfo_DspUserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DspUserInfo_DspUserType) Descriptor() protoreflect.EnumDescriptor {
	return file_ToutiaoBidding6_proto_enumTypes[15].Descriptor()
}

func (DspUserInfo_DspUserType) Type() protoreflect.EnumType {
	return &file_ToutiaoBidding6_proto_enumTypes[15]
}

func (x DspUserInfo_DspUserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DspUserInfo_DspUserType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DspUserInfo_DspUserType(num)
	return nil
}

// Deprecated: Use DspUserInfo_DspUserType.Descriptor instead.
func (DspUserInfo_DspUserType) EnumDescriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{15, 0}
}

type Pmp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrivateAuction *uint32     `protobuf:"varint,1,opt,name=private_auction,json=privateAuction" json:"private_auction,omitempty"` // 1 表示私有交易， 0 表示公有交易
	Deals          []*Pmp_Deal `protobuf:"bytes,2,rep,name=deals" json:"deals,omitempty"`                                          // 交易列表
}

func (x *Pmp) Reset() {
	*x = Pmp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pmp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pmp) ProtoMessage() {}

func (x *Pmp) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pmp.ProtoReflect.Descriptor instead.
func (*Pmp) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{0}
}

func (x *Pmp) GetPrivateAuction() uint32 {
	if x != nil && x.PrivateAuction != nil {
		return *x.PrivateAuction
	}
	return 0
}

func (x *Pmp) GetDeals() []*Pmp_Deal {
	if x != nil {
		return x.Deals
	}
	return nil
}

type AdSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   *string           `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`                                                                           // 广告位id
	Banner               []*AdSlot_Banner  `protobuf:"bytes,2,rep,name=banner" json:"banner,omitempty"`                                                                   // 广告位空间描述
	AdType               []AdType          `protobuf:"varint,3,rep,name=ad_type,json=adType,enum=com.adkit.demandsideplatform.model.rtb.AdType" json:"ad_type,omitempty"` // 可接收的广告类型
	BidFloor             *uint32           `protobuf:"varint,4,opt,name=bid_floor,json=bidFloor" json:"bid_floor,omitempty"`                                              // 单位为分
	Pmp                  *Pmp              `protobuf:"bytes,5,opt,name=pmp" json:"pmp,omitempty"`
	PatchVideoLength     *uint32           `protobuf:"varint,6,opt,name=patch_video_length,json=patchVideoLength" json:"patch_video_length,omitempty"`                                                                          //贴片广告允许的最长时间
	PatchVideoTitle      *string           `protobuf:"bytes,7,opt,name=patch_video_title,json=patchVideoTitle" json:"patch_video_title,omitempty"`                                                                              //贴片广告载体视频的title
	ChannelId            *uint64           `protobuf:"varint,8,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`                                                                                                 //feed流的频道
	Timestamp            *uint64           `protobuf:"varint,9,opt,name=timestamp" json:"timestamp,omitempty"`                                                                                                                  //头条开屏广告的时间戳
	Keywords             []string          `protobuf:"bytes,10,rep,name=keywords" json:"keywords,omitempty"`                                                                                                                    //详情页关键字
	GroupId              *uint64           `protobuf:"varint,11,opt,name=group_id,json=groupId" json:"group_id,omitempty"`                                                                                                      //文章groupID
	AdvancedCreativeType []AdvCreativeType `protobuf:"varint,12,rep,name=advanced_creative_type,json=advancedCreativeType,enum=com.adkit.demandsideplatform.model.rtb.AdvCreativeType" json:"advanced_creative_type,omitempty"` // 可接收的落地页附加创意类型
	SupportDeeplink      *bool             `protobuf:"varint,13,opt,name=support_deeplink,json=supportDeeplink,def=1" json:"support_deeplink,omitempty"`                                                                        //流量是否支持应用唤醒
	ImgIdList            []string          `protobuf:"bytes,14,rep,name=img_id_list,json=imgIdList" json:"img_id_list,omitempty"`
	TemplateIdList       []int64           `protobuf:"varint,15,rep,name=template_id_list,json=templateIdList" json:"template_id_list,omitempty"` //可接收的模板list
	Query                *string           `protobuf:"bytes,16,opt,name=query" json:"query,omitempty"`                                            //搜索词
	PreloadedCids        []int64           `protobuf:"varint,17,rep,name=preloaded_cids,json=preloadedCids" json:"preloaded_cids,omitempty"`      //已经预加载成功的cid列表
	RewritedQuery        *string           `protobuf:"bytes,18,opt,name=rewrited_query,json=rewritedQuery" json:"rewrited_query,omitempty"`       //阿里重写广告搜索词
	SupportUlink         *bool             `protobuf:"varint,19,opt,name=support_ulink,json=supportUlink" json:"support_ulink,omitempty"`         //流量是否支持ulink跳转
}

// Default values for AdSlot fields.
const (
	Default_AdSlot_SupportDeeplink = bool(true)
)

func (x *AdSlot) Reset() {
	*x = AdSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdSlot) ProtoMessage() {}

func (x *AdSlot) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdSlot.ProtoReflect.Descriptor instead.
func (*AdSlot) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{1}
}

func (x *AdSlot) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *AdSlot) GetBanner() []*AdSlot_Banner {
	if x != nil {
		return x.Banner
	}
	return nil
}

func (x *AdSlot) GetAdType() []AdType {
	if x != nil {
		return x.AdType
	}
	return nil
}

func (x *AdSlot) GetBidFloor() uint32 {
	if x != nil && x.BidFloor != nil {
		return *x.BidFloor
	}
	return 0
}

func (x *AdSlot) GetPmp() *Pmp {
	if x != nil {
		return x.Pmp
	}
	return nil
}

func (x *AdSlot) GetPatchVideoLength() uint32 {
	if x != nil && x.PatchVideoLength != nil {
		return *x.PatchVideoLength
	}
	return 0
}

func (x *AdSlot) GetPatchVideoTitle() string {
	if x != nil && x.PatchVideoTitle != nil {
		return *x.PatchVideoTitle
	}
	return ""
}

func (x *AdSlot) GetChannelId() uint64 {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return 0
}

func (x *AdSlot) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *AdSlot) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *AdSlot) GetGroupId() uint64 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *AdSlot) GetAdvancedCreativeType() []AdvCreativeType {
	if x != nil {
		return x.AdvancedCreativeType
	}
	return nil
}

func (x *AdSlot) GetSupportDeeplink() bool {
	if x != nil && x.SupportDeeplink != nil {
		return *x.SupportDeeplink
	}
	return Default_AdSlot_SupportDeeplink
}

func (x *AdSlot) GetImgIdList() []string {
	if x != nil {
		return x.ImgIdList
	}
	return nil
}

func (x *AdSlot) GetTemplateIdList() []int64 {
	if x != nil {
		return x.TemplateIdList
	}
	return nil
}

func (x *AdSlot) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *AdSlot) GetPreloadedCids() []int64 {
	if x != nil {
		return x.PreloadedCids
	}
	return nil
}

func (x *AdSlot) GetRewritedQuery() string {
	if x != nil && x.RewritedQuery != nil {
		return *x.RewritedQuery
	}
	return ""
}

func (x *AdSlot) GetSupportUlink() bool {
	if x != nil && x.SupportUlink != nil {
		return *x.SupportUlink
	}
	return false
}

type Publisher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Name   *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Cat    *string `protobuf:"bytes,3,opt,name=cat" json:"cat,omitempty"`
	Domain *string `protobuf:"bytes,4,opt,name=domain" json:"domain,omitempty"`
}

func (x *Publisher) Reset() {
	*x = Publisher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Publisher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publisher) ProtoMessage() {}

func (x *Publisher) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publisher.ProtoReflect.Descriptor instead.
func (*Publisher) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{2}
}

func (x *Publisher) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Publisher) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Publisher) GetCat() string {
	if x != nil && x.Cat != nil {
		return *x.Cat
	}
	return ""
}

func (x *Publisher) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *string           `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Title         *string           `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Series        *string           `protobuf:"bytes,3,opt,name=series" json:"series,omitempty"`
	Url           *string           `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	Keywords      *string           `protobuf:"bytes,5,opt,name=keywords" json:"keywords,omitempty"`
	Contentrating *string           `protobuf:"bytes,6,opt,name=contentrating" json:"contentrating,omitempty"`
	Userrating    *string           `protobuf:"bytes,7,opt,name=userrating" json:"userrating,omitempty"`
	Context       *string           `protobuf:"bytes,8,opt,name=context" json:"context,omitempty"`
	Producer      *Content_Producer `protobuf:"bytes,9,opt,name=producer" json:"producer,omitempty"`
	Language      *string           `protobuf:"bytes,10,opt,name=language" json:"language,omitempty"`
}

func (x *Content) Reset() {
	*x = Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{3}
}

func (x *Content) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Content) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Content) GetSeries() string {
	if x != nil && x.Series != nil {
		return *x.Series
	}
	return ""
}

func (x *Content) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Content) GetKeywords() string {
	if x != nil && x.Keywords != nil {
		return *x.Keywords
	}
	return ""
}

func (x *Content) GetContentrating() string {
	if x != nil && x.Contentrating != nil {
		return *x.Contentrating
	}
	return ""
}

func (x *Content) GetUserrating() string {
	if x != nil && x.Userrating != nil {
		return *x.Userrating
	}
	return ""
}

func (x *Content) GetContext() string {
	if x != nil && x.Context != nil {
		return *x.Context
	}
	return ""
}

func (x *Content) GetProducer() *Content_Producer {
	if x != nil {
		return x.Producer
	}
	return nil
}

func (x *Content) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

type App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *string    `protobuf:"bytes,1,req,name=id,def=11" json:"id,omitempty"`
	Name          *string    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Domain        *string    `protobuf:"bytes,3,opt,name=domain" json:"domain,omitempty"`
	Ver           *string    `protobuf:"bytes,4,opt,name=ver" json:"ver,omitempty"`
	Bundle        *string    `protobuf:"bytes,5,opt,name=bundle" json:"bundle,omitempty"`
	Privacypolicy *uint32    `protobuf:"varint,6,opt,name=privacypolicy" json:"privacypolicy,omitempty"`
	Paid          *uint32    `protobuf:"varint,7,opt,name=paid" json:"paid,omitempty"`
	Publisher     *Publisher `protobuf:"bytes,8,opt,name=publisher" json:"publisher,omitempty"`
	Content       *Content   `protobuf:"bytes,9,opt,name=content" json:"content,omitempty"`
	Keywords      *string    `protobuf:"bytes,10,opt,name=keywords" json:"keywords,omitempty"`
	Scheme        *string    `protobuf:"bytes,11,opt,name=scheme" json:"scheme,omitempty"`
	Category      *string    `protobuf:"bytes,12,opt,name=category" json:"category,omitempty"`
}

// Default values for App fields.
const (
	Default_App_Id = string("11")
)

func (x *App) Reset() {
	*x = App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{4}
}

func (x *App) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_App_Id
}

func (x *App) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *App) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

func (x *App) GetVer() string {
	if x != nil && x.Ver != nil {
		return *x.Ver
	}
	return ""
}

func (x *App) GetBundle() string {
	if x != nil && x.Bundle != nil {
		return *x.Bundle
	}
	return ""
}

func (x *App) GetPrivacypolicy() uint32 {
	if x != nil && x.Privacypolicy != nil {
		return *x.Privacypolicy
	}
	return 0
}

func (x *App) GetPaid() uint32 {
	if x != nil && x.Paid != nil {
		return *x.Paid
	}
	return 0
}

func (x *App) GetPublisher() *Publisher {
	if x != nil {
		return x.Publisher
	}
	return nil
}

func (x *App) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *App) GetKeywords() string {
	if x != nil && x.Keywords != nil {
		return *x.Keywords
	}
	return ""
}

func (x *App) GetScheme() string {
	if x != nil && x.Scheme != nil {
		return *x.Scheme
	}
	return ""
}

func (x *App) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

type Geo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat     *float64 `protobuf:"fixed64,1,opt,name=lat" json:"lat,omitempty"`
	Lon     *float64 `protobuf:"fixed64,2,opt,name=lon" json:"lon,omitempty"`
	Country *string  `protobuf:"bytes,3,opt,name=country" json:"country,omitempty"`
	Region  *string  `protobuf:"bytes,4,opt,name=region" json:"region,omitempty"` // 谈判待定
	City    *string  `protobuf:"bytes,5,opt,name=city" json:"city,omitempty"`
	Type    *string  `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
}

func (x *Geo) Reset() {
	*x = Geo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Geo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Geo) ProtoMessage() {}

func (x *Geo) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Geo.ProtoReflect.Descriptor instead.
func (*Geo) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{5}
}

func (x *Geo) GetLat() float64 {
	if x != nil && x.Lat != nil {
		return *x.Lat
	}
	return 0
}

func (x *Geo) GetLon() float64 {
	if x != nil && x.Lon != nil {
		return *x.Lon
	}
	return 0
}

func (x *Geo) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *Geo) GetRegion() string {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return ""
}

func (x *Geo) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *Geo) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dnt            *bool                  `protobuf:"varint,1,req,name=dnt" json:"dnt,omitempty"` // 是否允许追踪  待定
	Ua             *string                `protobuf:"bytes,2,req,name=ua" json:"ua,omitempty"`    // 待定 浏览器
	Ip             *string                `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`    //
	Geo            *Geo                   `protobuf:"bytes,4,opt,name=geo" json:"geo,omitempty"`
	DeviceId       *string                `protobuf:"bytes,5,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	DeviceIdMd5    *string                `protobuf:"bytes,6,opt,name=device_id_md5,json=deviceIdMd5" json:"device_id_md5,omitempty"`
	Carrier        *string                `protobuf:"bytes,7,opt,name=carrier" json:"carrier,omitempty"`
	Language       *string                `protobuf:"bytes,8,opt,name=language" json:"language,omitempty"`
	Make           *string                `protobuf:"bytes,9,opt,name=make" json:"make,omitempty"`    // 制造商
	Model          *string                `protobuf:"bytes,10,opt,name=model" json:"model,omitempty"` // 型号
	Os             *string                `protobuf:"bytes,11,opt,name=os" json:"os,omitempty"`       // ios or android
	Osv            *string                `protobuf:"bytes,12,opt,name=osv" json:"osv,omitempty"`
	Js             *bool                  `protobuf:"varint,13,opt,name=js" json:"js,omitempty"` // js support
	ConnectionType *Device_ConnectionType `protobuf:"varint,14,opt,name=connection_type,json=connectionType,enum=com.adkit.demandsideplatform.model.rtb.Device_ConnectionType" json:"connection_type,omitempty"`
	DeviceType     *Device_DeviceType     `protobuf:"varint,15,opt,name=device_type,json=deviceType,enum=com.adkit.demandsideplatform.model.rtb.Device_DeviceType" json:"device_type,omitempty"`
	AndroidId      *string                `protobuf:"bytes,16,opt,name=android_id,json=androidId" json:"android_id,omitempty"` //对于android手机传输android_id
	AndroidIdMd5   *string                `protobuf:"bytes,17,opt,name=android_id_md5,json=androidIdMd5" json:"android_id_md5,omitempty"`
	Oaid           *string                `protobuf:"bytes,18,opt,name=oaid" json:"oaid,omitempty"` // Android Q 及更高版本
	OaidMd5        *string                `protobuf:"bytes,19,opt,name=oaid_md5,json=oaidMd5" json:"oaid_md5,omitempty"`
	SplashHeight   *int32                 `protobuf:"varint,20,opt,name=splash_height,json=splashHeight" json:"splash_height,omitempty"` // 客户端实际的开屏尺寸（高）
	SplashWidth    *int32                 `protobuf:"varint,21,opt,name=splash_width,json=splashWidth" json:"splash_width,omitempty"`    // 客户端实际的开屏尺寸（宽）
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{6}
}

func (x *Device) GetDnt() bool {
	if x != nil && x.Dnt != nil {
		return *x.Dnt
	}
	return false
}

func (x *Device) GetUa() string {
	if x != nil && x.Ua != nil {
		return *x.Ua
	}
	return ""
}

func (x *Device) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *Device) GetGeo() *Geo {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *Device) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *Device) GetDeviceIdMd5() string {
	if x != nil && x.DeviceIdMd5 != nil {
		return *x.DeviceIdMd5
	}
	return ""
}

func (x *Device) GetCarrier() string {
	if x != nil && x.Carrier != nil {
		return *x.Carrier
	}
	return ""
}

func (x *Device) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *Device) GetMake() string {
	if x != nil && x.Make != nil {
		return *x.Make
	}
	return ""
}

func (x *Device) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *Device) GetOs() string {
	if x != nil && x.Os != nil {
		return *x.Os
	}
	return ""
}

func (x *Device) GetOsv() string {
	if x != nil && x.Osv != nil {
		return *x.Osv
	}
	return ""
}

func (x *Device) GetJs() bool {
	if x != nil && x.Js != nil {
		return *x.Js
	}
	return false
}

func (x *Device) GetConnectionType() Device_ConnectionType {
	if x != nil && x.ConnectionType != nil {
		return *x.ConnectionType
	}
	return Device_Honeycomb
}

func (x *Device) GetDeviceType() Device_DeviceType {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return Device_PHONE
}

func (x *Device) GetAndroidId() string {
	if x != nil && x.AndroidId != nil {
		return *x.AndroidId
	}
	return ""
}

func (x *Device) GetAndroidIdMd5() string {
	if x != nil && x.AndroidIdMd5 != nil {
		return *x.AndroidIdMd5
	}
	return ""
}

func (x *Device) GetOaid() string {
	if x != nil && x.Oaid != nil {
		return *x.Oaid
	}
	return ""
}

func (x *Device) GetOaidMd5() string {
	if x != nil && x.OaidMd5 != nil {
		return *x.OaidMd5
	}
	return ""
}

func (x *Device) GetSplashHeight() int32 {
	if x != nil && x.SplashHeight != nil {
		return *x.SplashHeight
	}
	return 0
}

func (x *Device) GetSplashWidth() int32 {
	if x != nil && x.SplashWidth != nil {
		return *x.SplashWidth
	}
	return 0
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *string         `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`     // 数据分类id
	Name    *string         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"` // 数据分类名字
	Segment []*Data_Segment `protobuf:"bytes,3,rep,name=segment" json:"segment,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{7}
}

func (x *Data) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Data) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Data) GetSegment() []*Data_Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *string      `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	BuyerId  *string      `protobuf:"bytes,2,opt,name=buyer_id,json=buyerId" json:"buyer_id,omitempty"`
	Yob      *string      `protobuf:"bytes,3,opt,name=yob" json:"yob,omitempty"`                                                                // 年龄
	Gender   *User_Gender `protobuf:"varint,4,opt,name=gender,enum=com.adkit.demandsideplatform.model.rtb.User_Gender" json:"gender,omitempty"` // 用户性别
	Keywords *string      `protobuf:"bytes,5,opt,name=keywords" json:"keywords,omitempty"`                                                      // 兴趣关键词(utf-8), 以逗号分隔
	Geo      *Geo         `protobuf:"bytes,6,opt,name=geo" json:"geo,omitempty"`                                                                // 地理位置
	Data     []*Data      `protobuf:"bytes,7,rep,name=data" json:"data,omitempty"`                                                              // 额外的用户信息
	Did      *string      `protobuf:"bytes,8,opt,name=did" json:"did,omitempty"`                                                                // 设备id //did更名为tt_id，  取头条自己定义的did，非imei、idfa.    user中的did-->改名为tt_id
	DmpId    []int64      `protobuf:"varint,9,rep,name=dmp_id,json=dmpId" json:"dmp_id,omitempty"`                                              //dmp数据对应的id
	Ut       *int32       `protobuf:"varint,10,opt,name=ut" json:"ut,omitempty"`
	TtId     *string      `protobuf:"bytes,11,opt,name=tt_id,json=ttId" json:"tt_id,omitempty"` // 设备id //did更名为tt_id，  取头条自己定义的did，非imei、idfa.    user中的did-->改名为tt_id
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{8}
}

func (x *User) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *User) GetBuyerId() string {
	if x != nil && x.BuyerId != nil {
		return *x.BuyerId
	}
	return ""
}

func (x *User) GetYob() string {
	if x != nil && x.Yob != nil {
		return *x.Yob
	}
	return ""
}

func (x *User) GetGender() User_Gender {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return User_MALE
}

func (x *User) GetKeywords() string {
	if x != nil && x.Keywords != nil {
		return *x.Keywords
	}
	return ""
}

func (x *User) GetGeo() *Geo {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *User) GetData() []*Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *User) GetDid() string {
	if x != nil && x.Did != nil {
		return *x.Did
	}
	return ""
}

func (x *User) GetDmpId() []int64 {
	if x != nil {
		return x.DmpId
	}
	return nil
}

func (x *User) GetUt() int32 {
	if x != nil && x.Ut != nil {
		return *x.Ut
	}
	return 0
}

func (x *User) GetTtId() string {
	if x != nil && x.TtId != nil {
		return *x.TtId
	}
	return ""
}

type PrivateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Materials []*PrivateReq_MaterialInfo `protobuf:"bytes,1,rep,name=materials" json:"materials,omitempty"`
	// 京东地域汉字
	AreaCnName *string `protobuf:"bytes,2,opt,name=area_cn_name,json=areaCnName" json:"area_cn_name,omitempty"`
	// 京东地域id
	AreaId *string `protobuf:"bytes,3,opt,name=area_id,json=areaId" json:"area_id,omitempty"`
}

func (x *PrivateReq) Reset() {
	*x = PrivateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateReq) ProtoMessage() {}

func (x *PrivateReq) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateReq.ProtoReflect.Descriptor instead.
func (*PrivateReq) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{9}
}

func (x *PrivateReq) GetMaterials() []*PrivateReq_MaterialInfo {
	if x != nil {
		return x.Materials
	}
	return nil
}

func (x *PrivateReq) GetAreaCnName() string {
	if x != nil && x.AreaCnName != nil {
		return *x.AreaCnName
	}
	return ""
}

func (x *PrivateReq) GetAreaId() string {
	if x != nil && x.AreaId != nil {
		return *x.AreaId
	}
	return ""
}

type ABTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string    `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value *string    `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	Vtype *ValueType `protobuf:"varint,3,req,name=vtype,enum=com.adkit.demandsideplatform.model.rtb.ValueType" json:"vtype,omitempty"`
}

func (x *ABTest) Reset() {
	*x = ABTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABTest) ProtoMessage() {}

func (x *ABTest) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABTest.ProtoReflect.Descriptor instead.
func (*ABTest) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{10}
}

func (x *ABTest) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *ABTest) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *ABTest) GetVtype() ValueType {
	if x != nil && x.Vtype != nil {
		return *x.Vtype
	}
	return ValueType_INT
}

type BidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        *string                `protobuf:"bytes,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`    //待平稳过渡后，后期会废掉这个request_id,采用新的request_id_md5
	ApiVersion       *string                `protobuf:"bytes,2,req,name=api_version,json=apiVersion" json:"api_version,omitempty"` // 接口版本
	Adslots          []*AdSlot              `protobuf:"bytes,3,rep,name=adslots" json:"adslots,omitempty"`
	App              *App                   `protobuf:"bytes,4,req,name=app" json:"app,omitempty"`
	Device           *Device                `protobuf:"bytes,5,req,name=device" json:"device,omitempty"`
	User             *User                  `protobuf:"bytes,6,req,name=user" json:"user,omitempty"`
	BidReqType       *BidRequest_BidReqType `protobuf:"varint,7,opt,name=bid_req_type,json=bidReqType,enum=com.adkit.demandsideplatform.model.rtb.BidRequest_BidReqType,def=2" json:"bid_req_type,omitempty"` //请求广告模式
	Preq             *PrivateReq            `protobuf:"bytes,8,opt,name=preq" json:"preq,omitempty"`
	DspId            *uint32                `protobuf:"varint,9,req,name=dsp_id,json=dspId" json:"dsp_id,omitempty"`                                                                                             //逐渐废弃掉 字段长度受限, 使用 new_dsp_id
	MergeDspIds      []uint32               `protobuf:"varint,10,rep,name=merge_dsp_ids,json=mergeDspIds" json:"merge_dsp_ids,omitempty"`                                                                        //逐渐废弃掉， 使用 new_merge_dsp_ids
	ReqAuditType     *AuditType             `protobuf:"varint,11,opt,name=req_audit_type,json=reqAuditType,enum=com.adkit.demandsideplatform.model.rtb.AuditType,def=1" json:"req_audit_type,omitempty"`         //请求支持的审核方式
	ReqPricingType   *PricingType           `protobuf:"varint,12,opt,name=req_pricing_type,json=reqPricingType,enum=com.adkit.demandsideplatform.model.rtb.PricingType,def=1" json:"req_pricing_type,omitempty"` //请求支持的计费方式
	Abtest           []*ABTest              `protobuf:"bytes,13,rep,name=abtest" json:"abtest,omitempty"`
	NewDspId         *int64                 `protobuf:"varint,14,opt,name=new_dsp_id,json=newDspId" json:"new_dsp_id,omitempty"`
	NewMergeDspIds   []int64                `protobuf:"varint,15,rep,name=new_merge_dsp_ids,json=newMergeDspIds" json:"new_merge_dsp_ids,omitempty"`
	Extra            *string                `protobuf:"bytes,16,opt,name=extra" json:"extra,omitempty"`                                     //连池卡片附加信息
	RequestIdMd5     *string                `protobuf:"bytes,17,opt,name=request_id_md5,json=requestIdMd5" json:"request_id_md5,omitempty"` // [request_id + dsp_id] Md5加密，待平稳过渡后，后期会废掉原来的request_id,采用这个新的request_id_md5
	ExcludeCids      []int64                `protobuf:"varint,18,rep,name=exclude_cids,json=excludeCids" json:"exclude_cids,omitempty"`
	CandidateCids    []int64                `protobuf:"varint,19,rep,name=candidate_cids,json=candidateCids" json:"candidate_cids,omitempty"` // for preload ads
	IsRealtimeSplash *uint32                `protobuf:"varint,20,opt,name=is_realtime_splash,json=isRealtimeSplash" json:"is_realtime_splash,omitempty"`
	Filters          []*Filter              `protobuf:"bytes,21,rep,name=filters" json:"filters,omitempty"`
	MaxAdNum         *int64                 `protobuf:"varint,22,opt,name=max_ad_num,json=maxAdNum,def=1" json:"max_ad_num,omitempty"`                                                                   //本次请求最多支持广告数
	IsPreview        *bool                  `protobuf:"varint,23,opt,name=is_preview,json=isPreview" json:"is_preview,omitempty"`                                                                        // 这次请求是否为预览请求，默认为false
	AllowedPricing   []PricingType          `protobuf:"varint,24,rep,name=allowed_pricing,json=allowedPricing,enum=com.adkit.demandsideplatform.model.rtb.PricingType" json:"allowed_pricing,omitempty"` // 该次请求允许的出价类型的广告
	UnionEncodedSlot *int64                 `protobuf:"varint,25,opt,name=union_encoded_slot,json=unionEncodedSlot" json:"union_encoded_slot,omitempty"`                                                 // 网盟加密的slot id，区别于union site，发送给京东，标识流量位
}

// Default values for BidRequest fields.
const (
	Default_BidRequest_BidReqType     = BidRequest_ONLY_DSP
	Default_BidRequest_ReqAuditType   = AuditType_DELIVER_FIRST
	Default_BidRequest_ReqPricingType = PricingType_PRICING_CPM
	Default_BidRequest_MaxAdNum       = int64(1)
)

func (x *BidRequest) Reset() {
	*x = BidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidRequest) ProtoMessage() {}

func (x *BidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidRequest.ProtoReflect.Descriptor instead.
func (*BidRequest) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{11}
}

func (x *BidRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *BidRequest) GetApiVersion() string {
	if x != nil && x.ApiVersion != nil {
		return *x.ApiVersion
	}
	return ""
}

func (x *BidRequest) GetAdslots() []*AdSlot {
	if x != nil {
		return x.Adslots
	}
	return nil
}

func (x *BidRequest) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *BidRequest) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *BidRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *BidRequest) GetBidReqType() BidRequest_BidReqType {
	if x != nil && x.BidReqType != nil {
		return *x.BidReqType
	}
	return Default_BidRequest_BidReqType
}

func (x *BidRequest) GetPreq() *PrivateReq {
	if x != nil {
		return x.Preq
	}
	return nil
}

func (x *BidRequest) GetDspId() uint32 {
	if x != nil && x.DspId != nil {
		return *x.DspId
	}
	return 0
}

func (x *BidRequest) GetMergeDspIds() []uint32 {
	if x != nil {
		return x.MergeDspIds
	}
	return nil
}

func (x *BidRequest) GetReqAuditType() AuditType {
	if x != nil && x.ReqAuditType != nil {
		return *x.ReqAuditType
	}
	return Default_BidRequest_ReqAuditType
}

func (x *BidRequest) GetReqPricingType() PricingType {
	if x != nil && x.ReqPricingType != nil {
		return *x.ReqPricingType
	}
	return Default_BidRequest_ReqPricingType
}

func (x *BidRequest) GetAbtest() []*ABTest {
	if x != nil {
		return x.Abtest
	}
	return nil
}

func (x *BidRequest) GetNewDspId() int64 {
	if x != nil && x.NewDspId != nil {
		return *x.NewDspId
	}
	return 0
}

func (x *BidRequest) GetNewMergeDspIds() []int64 {
	if x != nil {
		return x.NewMergeDspIds
	}
	return nil
}

func (x *BidRequest) GetExtra() string {
	if x != nil && x.Extra != nil {
		return *x.Extra
	}
	return ""
}

func (x *BidRequest) GetRequestIdMd5() string {
	if x != nil && x.RequestIdMd5 != nil {
		return *x.RequestIdMd5
	}
	return ""
}

func (x *BidRequest) GetExcludeCids() []int64 {
	if x != nil {
		return x.ExcludeCids
	}
	return nil
}

func (x *BidRequest) GetCandidateCids() []int64 {
	if x != nil {
		return x.CandidateCids
	}
	return nil
}

func (x *BidRequest) GetIsRealtimeSplash() uint32 {
	if x != nil && x.IsRealtimeSplash != nil {
		return *x.IsRealtimeSplash
	}
	return 0
}

func (x *BidRequest) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *BidRequest) GetMaxAdNum() int64 {
	if x != nil && x.MaxAdNum != nil {
		return *x.MaxAdNum
	}
	return Default_BidRequest_MaxAdNum
}

func (x *BidRequest) GetIsPreview() bool {
	if x != nil && x.IsPreview != nil {
		return *x.IsPreview
	}
	return false
}

func (x *BidRequest) GetAllowedPricing() []PricingType {
	if x != nil {
		return x.AllowedPricing
	}
	return nil
}

func (x *BidRequest) GetUnionEncodedSlot() int64 {
	if x != nil && x.UnionEncodedSlot != nil {
		return *x.UnionEncodedSlot
	}
	return 0
}

type MaterialMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdType                       *AdType                        `protobuf:"varint,1,req,name=ad_type,json=adType,enum=com.adkit.demandsideplatform.model.rtb.AdType" json:"ad_type,omitempty"`
	Nurl                         *string                        `protobuf:"bytes,2,opt,name=nurl" json:"nurl,omitempty"`     // winnotice url,  RTB必填，PMP和BPG可选填
	Title                        *string                        `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`   // 除detail_banner之外必须
	Source                       *string                        `protobuf:"bytes,4,req,name=source" json:"source,omitempty"` // 来源, 默认dsp名
	ImageBanner                  *MaterialMeta_ImageMeta        `protobuf:"bytes,5,opt,name=image_banner,json=imageBanner" json:"image_banner,omitempty"`
	External                     *MaterialMeta_ExternalMeta     `protobuf:"bytes,6,opt,name=external" json:"external,omitempty"`                                                                                      // 对于落地页广告才有
	AndroidApp                   *MaterialMeta_AndroidApp       `protobuf:"bytes,7,opt,name=android_app,json=androidApp" json:"android_app,omitempty"`                                                                // android应用下载才有
	IosApp                       *MaterialMeta_IosApp           `protobuf:"bytes,8,opt,name=ios_app,json=iosApp" json:"ios_app,omitempty"`                                                                            // ios应用下载才有
	ShowUrl                      []string                       `protobuf:"bytes,9,rep,name=show_url,json=showUrl" json:"show_url,omitempty"`                                                                         // 展现监测
	ClickUrl                     []string                       `protobuf:"bytes,10,rep,name=click_url,json=clickUrl" json:"click_url,omitempty"`                                                                     // 点击监测
	IsInapp                      *bool                          `protobuf:"varint,11,opt,name=is_inapp,json=isInapp" json:"is_inapp,omitempty"`                                                                       // is_inapp=true以原生态打开
	Ext                          *string                        `protobuf:"bytes,12,opt,name=ext" json:"ext,omitempty"`                                                                                               // 点击展示监测扩展字段
	LpOpenUrl                    *string                        `protobuf:"bytes,13,opt,name=lp_open_url,json=lpOpenUrl" json:"lp_open_url,omitempty"`                                                                //落地页广告调起链接,落地页广告需要的时候才进行填写
	VideoPlayStartUrl            []string                       `protobuf:"bytes,14,rep,name=video_play_start_url,json=videoPlayStartUrl" json:"video_play_start_url,omitempty"`                                      // 视频开始播放监测url
	VideoPlayFinishUrl           []string                       `protobuf:"bytes,15,rep,name=video_play_finish_url,json=videoPlayFinishUrl" json:"video_play_finish_url,omitempty"`                                   // 视频播放完成监测url
	SourceAvatar                 *string                        `protobuf:"bytes,16,opt,name=source_avatar,json=sourceAvatar" json:"source_avatar,omitempty"`                                                         //广告来源头像
	SplashCreatives              []*MaterialMeta_ImageMeta      `protobuf:"bytes,17,rep,name=splash_creatives,json=splashCreatives" json:"splash_creatives,omitempty"`                                                //针对的是头条开屏素材
	VideoUrl                     *string                        `protobuf:"bytes,18,opt,name=video_url,json=videoUrl" json:"video_url,omitempty"`                                                                     //视频下载链接
	VideoPlayUrl                 []string                       `protobuf:"bytes,19,rep,name=video_play_url,json=videoPlayUrl" json:"video_play_url,omitempty"`                                                       // wifi状态视频自动开始播放监测url
	VideoPlayValidUrl            []string                       `protobuf:"bytes,20,rep,name=video_play_valid_url,json=videoPlayValidUrl" json:"video_play_valid_url,omitempty"`                                      // 视频有效播放监测url
	SubTitle                     *string                        `protobuf:"bytes,21,opt,name=sub_title,json=subTitle" json:"sub_title,omitempty"`                                                                     // 副标题 电话拨打必填
	SdkPlayTrackUrl              *string                        `protobuf:"bytes,22,opt,name=sdk_play_track_url,json=sdkPlayTrackUrl" json:"sdk_play_track_url,omitempty"`                                            // SDK视频播放监测链接
	IsDynamic                    *bool                          `protobuf:"varint,23,opt,name=is_dynamic,json=isDynamic" json:"is_dynamic,omitempty"`                                                                 // is_dynamic=true使用动态创意
	WordSet                      []uint64                       `protobuf:"varint,24,rep,name=word_set,json=wordSet" json:"word_set,omitempty"`                                                                       // 动态创意
	ShareTitle                   *string                        `protobuf:"bytes,25,opt,name=share_title,json=shareTitle" json:"share_title,omitempty"`                                                               // 开屏广告分享简介
	SplashShareBanner            *MaterialMeta_ImageMeta        `protobuf:"bytes,26,opt,name=splash_share_banner,json=splashShareBanner" json:"splash_share_banner,omitempty"`                                        //开屏分享图片素材
	IsCanvas                     *bool                          `protobuf:"varint,27,opt,name=is_canvas,json=isCanvas" json:"is_canvas,omitempty"`                                                                    // is_canvas=true使用沉浸式
	IsExternalVideo              *bool                          `protobuf:"varint,28,opt,name=is_external_video,json=isExternalVideo" json:"is_external_video,omitempty"`                                             //is_external_video=true使用第三方视频链接
	VideoMeta                    *MaterialMeta_VideoMeta        `protobuf:"bytes,29,opt,name=video_meta,json=videoMeta" json:"video_meta,omitempty"`                                                                  //第三方视频信息
	VideoId                      *string                        `protobuf:"bytes,30,opt,name=video_id,json=videoId" json:"video_id,omitempty"`                                                                        //头条视频唯一ID
	InteractUrl                  []string                       `protobuf:"bytes,31,rep,name=interact_url,json=interactUrl" json:"interact_url,omitempty"`                                                            //互动监测
	SplashButtonText             *string                        `protobuf:"bytes,32,opt,name=splash_button_text,json=splashButtonText" json:"splash_button_text,omitempty"`                                           //开屏直达调起文案， 不超过8个汉字
	TextlinkCardData             *string                        `protobuf:"bytes,33,opt,name=textlink_card_data,json=textlinkCardData" json:"textlink_card_data,omitempty"`                                           //连池卡片信息 json格式 接入方根据不同模板填写(格式和卡片FE开发的npm包对应)
	MmaEffectiveShowTrackUrlList []string                       `protobuf:"bytes,34,rep,name=mma_effective_show_track_url_list,json=mmaEffectiveShowTrackUrlList" json:"mma_effective_show_track_url_list,omitempty"` //mma曝光的可见性监测
	MmaEffectivePlayTrackUrlList []string                       `protobuf:"bytes,35,rep,name=mma_effective_play_track_url_list,json=mmaEffectivePlayTrackUrlList" json:"mma_effective_play_track_url_list,omitempty"` //mma播放的可见性监测
	CardShowUrl                  []string                       `protobuf:"bytes,36,rep,name=card_show_url,json=cardShowUrl" json:"card_show_url,omitempty"`                                                          //卡片展现监测
	DownloadCardMeta             *MaterialMeta_DownloadCardMeta `protobuf:"bytes,37,opt,name=download_card_meta,json=downloadCardMeta" json:"download_card_meta,omitempty"`                                           //应用下载卡片
	DownloadTrackUrl             []string                       `protobuf:"bytes,38,rep,name=download_track_url,json=downloadTrackUrl" json:"download_track_url,omitempty"`                                           //应用下载监测
	ButtonText                   *string                        `protobuf:"bytes,39,opt,name=button_text,json=buttonText" json:"button_text,omitempty"`                                                               //按钮文案，字数2-10，穿山甲
}

func (x *MaterialMeta) Reset() {
	*x = MaterialMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialMeta) ProtoMessage() {}

func (x *MaterialMeta) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialMeta.ProtoReflect.Descriptor instead.
func (*MaterialMeta) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12}
}

func (x *MaterialMeta) GetAdType() AdType {
	if x != nil && x.AdType != nil {
		return *x.AdType
	}
	return AdType_TOUTIAO_FEED_LP_LARGE
}

func (x *MaterialMeta) GetNurl() string {
	if x != nil && x.Nurl != nil {
		return *x.Nurl
	}
	return ""
}

func (x *MaterialMeta) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *MaterialMeta) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *MaterialMeta) GetImageBanner() *MaterialMeta_ImageMeta {
	if x != nil {
		return x.ImageBanner
	}
	return nil
}

func (x *MaterialMeta) GetExternal() *MaterialMeta_ExternalMeta {
	if x != nil {
		return x.External
	}
	return nil
}

func (x *MaterialMeta) GetAndroidApp() *MaterialMeta_AndroidApp {
	if x != nil {
		return x.AndroidApp
	}
	return nil
}

func (x *MaterialMeta) GetIosApp() *MaterialMeta_IosApp {
	if x != nil {
		return x.IosApp
	}
	return nil
}

func (x *MaterialMeta) GetShowUrl() []string {
	if x != nil {
		return x.ShowUrl
	}
	return nil
}

func (x *MaterialMeta) GetClickUrl() []string {
	if x != nil {
		return x.ClickUrl
	}
	return nil
}

func (x *MaterialMeta) GetIsInapp() bool {
	if x != nil && x.IsInapp != nil {
		return *x.IsInapp
	}
	return false
}

func (x *MaterialMeta) GetExt() string {
	if x != nil && x.Ext != nil {
		return *x.Ext
	}
	return ""
}

func (x *MaterialMeta) GetLpOpenUrl() string {
	if x != nil && x.LpOpenUrl != nil {
		return *x.LpOpenUrl
	}
	return ""
}

func (x *MaterialMeta) GetVideoPlayStartUrl() []string {
	if x != nil {
		return x.VideoPlayStartUrl
	}
	return nil
}

func (x *MaterialMeta) GetVideoPlayFinishUrl() []string {
	if x != nil {
		return x.VideoPlayFinishUrl
	}
	return nil
}

func (x *MaterialMeta) GetSourceAvatar() string {
	if x != nil && x.SourceAvatar != nil {
		return *x.SourceAvatar
	}
	return ""
}

func (x *MaterialMeta) GetSplashCreatives() []*MaterialMeta_ImageMeta {
	if x != nil {
		return x.SplashCreatives
	}
	return nil
}

func (x *MaterialMeta) GetVideoUrl() string {
	if x != nil && x.VideoUrl != nil {
		return *x.VideoUrl
	}
	return ""
}

func (x *MaterialMeta) GetVideoPlayUrl() []string {
	if x != nil {
		return x.VideoPlayUrl
	}
	return nil
}

func (x *MaterialMeta) GetVideoPlayValidUrl() []string {
	if x != nil {
		return x.VideoPlayValidUrl
	}
	return nil
}

func (x *MaterialMeta) GetSubTitle() string {
	if x != nil && x.SubTitle != nil {
		return *x.SubTitle
	}
	return ""
}

func (x *MaterialMeta) GetSdkPlayTrackUrl() string {
	if x != nil && x.SdkPlayTrackUrl != nil {
		return *x.SdkPlayTrackUrl
	}
	return ""
}

func (x *MaterialMeta) GetIsDynamic() bool {
	if x != nil && x.IsDynamic != nil {
		return *x.IsDynamic
	}
	return false
}

func (x *MaterialMeta) GetWordSet() []uint64 {
	if x != nil {
		return x.WordSet
	}
	return nil
}

func (x *MaterialMeta) GetShareTitle() string {
	if x != nil && x.ShareTitle != nil {
		return *x.ShareTitle
	}
	return ""
}

func (x *MaterialMeta) GetSplashShareBanner() *MaterialMeta_ImageMeta {
	if x != nil {
		return x.SplashShareBanner
	}
	return nil
}

func (x *MaterialMeta) GetIsCanvas() bool {
	if x != nil && x.IsCanvas != nil {
		return *x.IsCanvas
	}
	return false
}

func (x *MaterialMeta) GetIsExternalVideo() bool {
	if x != nil && x.IsExternalVideo != nil {
		return *x.IsExternalVideo
	}
	return false
}

func (x *MaterialMeta) GetVideoMeta() *MaterialMeta_VideoMeta {
	if x != nil {
		return x.VideoMeta
	}
	return nil
}

func (x *MaterialMeta) GetVideoId() string {
	if x != nil && x.VideoId != nil {
		return *x.VideoId
	}
	return ""
}

func (x *MaterialMeta) GetInteractUrl() []string {
	if x != nil {
		return x.InteractUrl
	}
	return nil
}

func (x *MaterialMeta) GetSplashButtonText() string {
	if x != nil && x.SplashButtonText != nil {
		return *x.SplashButtonText
	}
	return ""
}

func (x *MaterialMeta) GetTextlinkCardData() string {
	if x != nil && x.TextlinkCardData != nil {
		return *x.TextlinkCardData
	}
	return ""
}

func (x *MaterialMeta) GetMmaEffectiveShowTrackUrlList() []string {
	if x != nil {
		return x.MmaEffectiveShowTrackUrlList
	}
	return nil
}

func (x *MaterialMeta) GetMmaEffectivePlayTrackUrlList() []string {
	if x != nil {
		return x.MmaEffectivePlayTrackUrlList
	}
	return nil
}

func (x *MaterialMeta) GetCardShowUrl() []string {
	if x != nil {
		return x.CardShowUrl
	}
	return nil
}

func (x *MaterialMeta) GetDownloadCardMeta() *MaterialMeta_DownloadCardMeta {
	if x != nil {
		return x.DownloadCardMeta
	}
	return nil
}

func (x *MaterialMeta) GetDownloadTrackUrl() []string {
	if x != nil {
		return x.DownloadTrackUrl
	}
	return nil
}

func (x *MaterialMeta) GetButtonText() string {
	if x != nil && x.ButtonText != nil {
		return *x.ButtonText
	}
	return ""
}

type Bid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *string        `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	AdslotId       *string        `protobuf:"bytes,2,req,name=adslot_id,json=adslotId" json:"adslot_id,omitempty"`
	Price          *uint32        `protobuf:"varint,3,req,name=price" json:"price,omitempty"`      // 单位为分
	Adid           *uint64        `protobuf:"varint,4,req,name=adid" json:"adid,omitempty"`        // 创意id
	Creative       *MaterialMeta  `protobuf:"bytes,5,req,name=creative" json:"creative,omitempty"` // 素材
	Dealid         *string        `protobuf:"bytes,6,opt,name=dealid" json:"dealid,omitempty"`     // 如果是pmp需返回dealid字段
	Cid            *string        `protobuf:"bytes,7,opt,name=cid" json:"cid,omitempty"`           // 扩展id, 必须由数字组成的字符串，长度小于39位，选填，如果此字段有效则使用cid而不是adid, 如果可以通过adid(uint64)表示的建议使用adid
	BidAdType      *Bid_BidAdType `protobuf:"varint,8,opt,name=bid_ad_type,json=bidAdType,enum=com.adkit.demandsideplatform.model.rtb.Bid_BidAdType,def=2" json:"bid_ad_type,omitempty"`
	Quality        *float64       `protobuf:"fixed64,9,opt,name=quality" json:"quality,omitempty"`                                                                                                     // 直投用quality
	Ctr            *float64       `protobuf:"fixed64,10,opt,name=ctr" json:"ctr,omitempty"`                                                                                                            // 直投需要传预估ctr
	BidAuditType   *AuditType     `protobuf:"varint,11,opt,name=bid_audit_type,json=bidAuditType,enum=com.adkit.demandsideplatform.model.rtb.AuditType,def=1" json:"bid_audit_type,omitempty"`         //竞价响应的审核方式
	BidPricingType *PricingType   `protobuf:"varint,12,opt,name=bid_pricing_type,json=bidPricingType,enum=com.adkit.demandsideplatform.model.rtb.PricingType,def=1" json:"bid_pricing_type,omitempty"` //竞价响应的计费方式
	CategoryId     *uint64        `protobuf:"varint,13,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`                                                                             //品类ID
	CategoryName   *string        `protobuf:"bytes,14,opt,name=category_name,json=categoryName" json:"category_name,omitempty"`                                                                        //品类名称
	AdvertiserId   *uint64        `protobuf:"varint,15,opt,name=advertiser_id,json=advertiserId" json:"advertiser_id,omitempty"`                                                                       //广告主ID
	OriginId       *string        `protobuf:"bytes,16,opt,name=origin_id,json=originId" json:"origin_id,omitempty"`                                                                                    //广告素材原始id
	TemplateId     *uint64        `protobuf:"varint,17,opt,name=template_id,json=templateId" json:"template_id,omitempty"`                                                                             //连池卡片模板id
	OrderId        *int64         `protobuf:"varint,18,opt,name=order_id,json=orderId" json:"order_id,omitempty"`                                                                                      //连池订单id
	Relevance      *float64       `protobuf:"fixed64,19,opt,name=relevance" json:"relevance,omitempty"`                                                                                                //相关性评分
	QueryWords     []string       `protobuf:"bytes,20,rep,name=query_words,json=queryWords" json:"query_words,omitempty"`                                                                              //飘红关键词(来自请求中query分词)
}

// Default values for Bid fields.
const (
	Default_Bid_BidAdType      = Bid_DSP_AD
	Default_Bid_BidAuditType   = AuditType_DELIVER_FIRST
	Default_Bid_BidPricingType = PricingType_PRICING_CPM
)

func (x *Bid) Reset() {
	*x = Bid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bid) ProtoMessage() {}

func (x *Bid) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bid.ProtoReflect.Descriptor instead.
func (*Bid) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{13}
}

func (x *Bid) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Bid) GetAdslotId() string {
	if x != nil && x.AdslotId != nil {
		return *x.AdslotId
	}
	return ""
}

func (x *Bid) GetPrice() uint32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *Bid) GetAdid() uint64 {
	if x != nil && x.Adid != nil {
		return *x.Adid
	}
	return 0
}

func (x *Bid) GetCreative() *MaterialMeta {
	if x != nil {
		return x.Creative
	}
	return nil
}

func (x *Bid) GetDealid() string {
	if x != nil && x.Dealid != nil {
		return *x.Dealid
	}
	return ""
}

func (x *Bid) GetCid() string {
	if x != nil && x.Cid != nil {
		return *x.Cid
	}
	return ""
}

func (x *Bid) GetBidAdType() Bid_BidAdType {
	if x != nil && x.BidAdType != nil {
		return *x.BidAdType
	}
	return Default_Bid_BidAdType
}

func (x *Bid) GetQuality() float64 {
	if x != nil && x.Quality != nil {
		return *x.Quality
	}
	return 0
}

func (x *Bid) GetCtr() float64 {
	if x != nil && x.Ctr != nil {
		return *x.Ctr
	}
	return 0
}

func (x *Bid) GetBidAuditType() AuditType {
	if x != nil && x.BidAuditType != nil {
		return *x.BidAuditType
	}
	return Default_Bid_BidAuditType
}

func (x *Bid) GetBidPricingType() PricingType {
	if x != nil && x.BidPricingType != nil {
		return *x.BidPricingType
	}
	return Default_Bid_BidPricingType
}

func (x *Bid) GetCategoryId() uint64 {
	if x != nil && x.CategoryId != nil {
		return *x.CategoryId
	}
	return 0
}

func (x *Bid) GetCategoryName() string {
	if x != nil && x.CategoryName != nil {
		return *x.CategoryName
	}
	return ""
}

func (x *Bid) GetAdvertiserId() uint64 {
	if x != nil && x.AdvertiserId != nil {
		return *x.AdvertiserId
	}
	return 0
}

func (x *Bid) GetOriginId() string {
	if x != nil && x.OriginId != nil {
		return *x.OriginId
	}
	return ""
}

func (x *Bid) GetTemplateId() uint64 {
	if x != nil && x.TemplateId != nil {
		return *x.TemplateId
	}
	return 0
}

func (x *Bid) GetOrderId() int64 {
	if x != nil && x.OrderId != nil {
		return *x.OrderId
	}
	return 0
}

func (x *Bid) GetRelevance() float64 {
	if x != nil && x.Relevance != nil {
		return *x.Relevance
	}
	return 0
}

func (x *Bid) GetQueryWords() []string {
	if x != nil {
		return x.QueryWords
	}
	return nil
}

type SeatBid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ads  []*Bid  `protobuf:"bytes,1,rep,name=ads" json:"ads,omitempty"`
	Seat *string `protobuf:"bytes,2,opt,name=seat" json:"seat,omitempty"` // 广告来源dsp识别
}

func (x *SeatBid) Reset() {
	*x = SeatBid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatBid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatBid) ProtoMessage() {}

func (x *SeatBid) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatBid.ProtoReflect.Descriptor instead.
func (*SeatBid) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{14}
}

func (x *SeatBid) GetAds() []*Bid {
	if x != nil {
		return x.Ads
	}
	return nil
}

func (x *SeatBid) GetSeat() string {
	if x != nil && x.Seat != nil {
		return *x.Seat
	}
	return ""
}

type DspUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInterested *bool                      `protobuf:"varint,1,opt,name=is_interested,json=isInterested" json:"is_interested,omitempty"` // 是否对这个用户感兴趣
	UserScores   []*DspUserInfo_UserQuality `protobuf:"bytes,2,rep,name=user_scores,json=userScores" json:"user_scores,omitempty"`
}

func (x *DspUserInfo) Reset() {
	*x = DspUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DspUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DspUserInfo) ProtoMessage() {}

func (x *DspUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DspUserInfo.ProtoReflect.Descriptor instead.
func (*DspUserInfo) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{15}
}

func (x *DspUserInfo) GetIsInterested() bool {
	if x != nil && x.IsInterested != nil {
		return *x.IsInterested
	}
	return false
}

func (x *DspUserInfo) GetUserScores() []*DspUserInfo_UserQuality {
	if x != nil {
		return x.UserScores
	}
	return nil
}

type BidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId    *string      `protobuf:"bytes,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	Seatbids     []*SeatBid   `protobuf:"bytes,2,rep,name=seatbids" json:"seatbids,omitempty"`
	ErrorCode    *uint64      `protobuf:"varint,3,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`         // 请求出错时的错误码，用于问题排查
	ErrorMessage *string      `protobuf:"bytes,4,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"` // 错误码对应错误信息，用于问题排查
	UserInfo     *DspUserInfo `protobuf:"bytes,5,opt,name=user_info,json=userInfo" json:"user_info,omitempty"`
}

func (x *BidResponse) Reset() {
	*x = BidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidResponse) ProtoMessage() {}

func (x *BidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidResponse.ProtoReflect.Descriptor instead.
func (*BidResponse) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{16}
}

func (x *BidResponse) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *BidResponse) GetSeatbids() []*SeatBid {
	if x != nil {
		return x.Seatbids
	}
	return nil
}

func (x *BidResponse) GetErrorCode() uint64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *BidResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

func (x *BidResponse) GetUserInfo() *DspUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type DspClickNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dspid     *uint64 `protobuf:"varint,1,opt,name=dspid" json:"dspid,omitempty"`
	ClickUuid *string `protobuf:"bytes,2,opt,name=click_uuid,json=clickUuid" json:"click_uuid,omitempty"` // 经落地页url宏替换传递
	Price     *uint32 `protobuf:"varint,3,opt,name=price" json:"price,omitempty"`                         // 竞标二价，经落地页url宏替换传递
}

func (x *DspClickNotification) Reset() {
	*x = DspClickNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DspClickNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DspClickNotification) ProtoMessage() {}

func (x *DspClickNotification) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DspClickNotification.ProtoReflect.Descriptor instead.
func (*DspClickNotification) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{17}
}

func (x *DspClickNotification) GetDspid() uint64 {
	if x != nil && x.Dspid != nil {
		return *x.Dspid
	}
	return 0
}

func (x *DspClickNotification) GetClickUuid() string {
	if x != nil && x.ClickUuid != nil {
		return *x.ClickUuid
	}
	return ""
}

func (x *DspClickNotification) GetPrice() uint32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterType *FilterType `protobuf:"varint,1,req,name=filter_type,json=filterType,enum=com.adkit.demandsideplatform.model.rtb.FilterType" json:"filter_type,omitempty"`
	Ids        []uint64    `protobuf:"varint,2,rep,name=ids" json:"ids,omitempty"`
	OriginIds  []string    `protobuf:"bytes,3,rep,name=origin_ids,json=originIds" json:"origin_ids,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{18}
}

func (x *Filter) GetFilterType() FilterType {
	if x != nil && x.FilterType != nil {
		return *x.FilterType
	}
	return FilterType_AD_ID
}

func (x *Filter) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *Filter) GetOriginIds() []string {
	if x != nil {
		return x.OriginIds
	}
	return nil
}

type Pmp_Deal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *uint32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`                             // 私有交易id， 由exchange分配   字段需要设置成int64，后期逐渐废弃掉，使用new_id
	BidFloor *uint32  `protobuf:"varint,2,opt,name=bid_floor,json=bidFloor" json:"bid_floor,omitempty"` // 此次展示竞价底价 (如果是pmp以这里的底价为主)
	Wseat    []string `protobuf:"bytes,3,rep,name=wseat" json:"wseat,omitempty"`                        // 允许参与交易的广告主白名单
	Wadomain []string `protobuf:"bytes,4,rep,name=wadomain" json:"wadomain,omitempty"`                  // 允许参与竞价的广告主域名列表
	At       *uint32  `protobuf:"varint,5,opt,name=at" json:"at,omitempty"`                             // 1 表示first price, 2 表示Second price, 3 忽略底价
	NewId    *int64   `protobuf:"varint,6,opt,name=new_id,json=newId" json:"new_id,omitempty"`          //私有交易id，代替之前的id
}

func (x *Pmp_Deal) Reset() {
	*x = Pmp_Deal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pmp_Deal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pmp_Deal) ProtoMessage() {}

func (x *Pmp_Deal) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pmp_Deal.ProtoReflect.Descriptor instead.
func (*Pmp_Deal) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Pmp_Deal) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Pmp_Deal) GetBidFloor() uint32 {
	if x != nil && x.BidFloor != nil {
		return *x.BidFloor
	}
	return 0
}

func (x *Pmp_Deal) GetWseat() []string {
	if x != nil {
		return x.Wseat
	}
	return nil
}

func (x *Pmp_Deal) GetWadomain() []string {
	if x != nil {
		return x.Wadomain
	}
	return nil
}

func (x *Pmp_Deal) GetAt() uint32 {
	if x != nil && x.At != nil {
		return *x.At
	}
	return 0
}

func (x *Pmp_Deal) GetNewId() int64 {
	if x != nil && x.NewId != nil {
		return *x.NewId
	}
	return 0
}

type AdSlot_Banner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width    *uint32          `protobuf:"varint,1,req,name=width" json:"width,omitempty"`
	Height   *uint32          `protobuf:"varint,2,req,name=height" json:"height,omitempty"`
	Pos      *AdSlot_Position `protobuf:"varint,3,req,name=pos,enum=com.adkit.demandsideplatform.model.rtb.AdSlot_Position" json:"pos,omitempty"`
	Sequence *string          `protobuf:"bytes,4,opt,name=sequence" json:"sequence,omitempty"`
}

func (x *AdSlot_Banner) Reset() {
	*x = AdSlot_Banner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdSlot_Banner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdSlot_Banner) ProtoMessage() {}

func (x *AdSlot_Banner) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdSlot_Banner.ProtoReflect.Descriptor instead.
func (*AdSlot_Banner) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AdSlot_Banner) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *AdSlot_Banner) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *AdSlot_Banner) GetPos() AdSlot_Position {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return AdSlot_SPLASH
}

func (x *AdSlot_Banner) GetSequence() string {
	if x != nil && x.Sequence != nil {
		return *x.Sequence
	}
	return ""
}

type Content_Producer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Name   *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Cat    *string `protobuf:"bytes,3,opt,name=cat" json:"cat,omitempty"`
	Domain *string `protobuf:"bytes,4,opt,name=domain" json:"domain,omitempty"`
}

func (x *Content_Producer) Reset() {
	*x = Content_Producer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content_Producer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content_Producer) ProtoMessage() {}

func (x *Content_Producer) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content_Producer.ProtoReflect.Descriptor instead.
func (*Content_Producer) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Content_Producer) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Content_Producer) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Content_Producer) GetCat() string {
	if x != nil && x.Cat != nil {
		return *x.Cat
	}
	return ""
}

func (x *Content_Producer) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

type Data_Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`       // segment 编码id, 具体的映射表线下提供
	Name  *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`   // 暂时为空
	Value *string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"` // 暂时为空
}

func (x *Data_Segment) Reset() {
	*x = Data_Segment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Segment) ProtoMessage() {}

func (x *Data_Segment) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Segment.ProtoReflect.Descriptor instead.
func (*Data_Segment) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Data_Segment) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Data_Segment) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Data_Segment) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type PrivateReq_MaterialInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求素材id
	AdId *string `protobuf:"bytes,1,opt,name=ad_id,json=adId" json:"ad_id,omitempty"`
	// 请求广告主id
	AdvertiserId *string `protobuf:"bytes,2,opt,name=advertiser_id,json=advertiserId" json:"advertiser_id,omitempty"`
	// 素材尺寸类型
	AdType *AdType `protobuf:"varint,3,opt,name=ad_type,json=adType,enum=com.adkit.demandsideplatform.model.rtb.AdType" json:"ad_type,omitempty"`
}

func (x *PrivateReq_MaterialInfo) Reset() {
	*x = PrivateReq_MaterialInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateReq_MaterialInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateReq_MaterialInfo) ProtoMessage() {}

func (x *PrivateReq_MaterialInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateReq_MaterialInfo.ProtoReflect.Descriptor instead.
func (*PrivateReq_MaterialInfo) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{9, 0}
}

func (x *PrivateReq_MaterialInfo) GetAdId() string {
	if x != nil && x.AdId != nil {
		return *x.AdId
	}
	return ""
}

func (x *PrivateReq_MaterialInfo) GetAdvertiserId() string {
	if x != nil && x.AdvertiserId != nil {
		return *x.AdvertiserId
	}
	return ""
}

func (x *PrivateReq_MaterialInfo) GetAdType() AdType {
	if x != nil && x.AdType != nil {
		return *x.AdType
	}
	return AdType_TOUTIAO_FEED_LP_LARGE
}

type MaterialMeta_ImageMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description    *string  `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"` // 应用下载额外的描述
	Width          *uint32  `protobuf:"varint,2,req,name=width" json:"width,omitempty"`            // 大图小图的问题
	Height         *uint32  `protobuf:"varint,3,req,name=height" json:"height,omitempty"`
	Url            *string  `protobuf:"bytes,4,req,name=url" json:"url,omitempty"`                                              // 图片的外链, 常用格式
	Urls           []string `protobuf:"bytes,5,rep,name=urls" json:"urls,omitempty"`                                            //组图的外链，三个url
	DateTimestamp  *uint64  `protobuf:"varint,6,opt,name=date_timestamp,json=dateTimestamp" json:"date_timestamp,omitempty"`    //头条开屏广告投放的日期时间
	StartTimestamp *uint64  `protobuf:"varint,7,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"` //头条开屏广告投放的生效时间
	EndTimestamp   *uint64  `protobuf:"varint,8,opt,name=end_timestamp,json=endTimestamp" json:"end_timestamp,omitempty"`       //头条开屏广告投放的失效时间
	VideoUrl       *string  `protobuf:"bytes,9,opt,name=video_url,json=videoUrl" json:"video_url,omitempty"`                    // 开屏视频下载链接
	GifUrl         *string  `protobuf:"bytes,10,opt,name=gif_url,json=gifUrl" json:"gif_url,omitempty"`                         // 开屏GIF下载链接
}

func (x *MaterialMeta_ImageMeta) Reset() {
	*x = MaterialMeta_ImageMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialMeta_ImageMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialMeta_ImageMeta) ProtoMessage() {}

func (x *MaterialMeta_ImageMeta) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialMeta_ImageMeta.ProtoReflect.Descriptor instead.
func (*MaterialMeta_ImageMeta) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 0}
}

func (x *MaterialMeta_ImageMeta) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *MaterialMeta_ImageMeta) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *MaterialMeta_ImageMeta) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *MaterialMeta_ImageMeta) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *MaterialMeta_ImageMeta) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *MaterialMeta_ImageMeta) GetDateTimestamp() uint64 {
	if x != nil && x.DateTimestamp != nil {
		return *x.DateTimestamp
	}
	return 0
}

func (x *MaterialMeta_ImageMeta) GetStartTimestamp() uint64 {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return 0
}

func (x *MaterialMeta_ImageMeta) GetEndTimestamp() uint64 {
	if x != nil && x.EndTimestamp != nil {
		return *x.EndTimestamp
	}
	return 0
}

func (x *MaterialMeta_ImageMeta) GetVideoUrl() string {
	if x != nil && x.VideoUrl != nil {
		return *x.VideoUrl
	}
	return ""
}

func (x *MaterialMeta_ImageMeta) GetGifUrl() string {
	if x != nil && x.GifUrl != nil {
		return *x.GifUrl
	}
	return ""
}

type MaterialMeta_ExternalMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url                  *string                                        `protobuf:"bytes,1,req,name=url" json:"url,omitempty"`
	AdvancedCreativeType *AdvCreativeType                               `protobuf:"varint,2,opt,name=advanced_creative_type,json=advancedCreativeType,enum=com.adkit.demandsideplatform.model.rtb.AdvCreativeType" json:"advanced_creative_type,omitempty"`                             // 落地页附加创意类型
	PhoneNumber          *string                                        `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`                                                                                                                       // 电话号码
	ButtonText           *MaterialMeta_ExternalMeta_ButtonText          `protobuf:"varint,4,opt,name=button_text,json=buttonText,enum=com.adkit.demandsideplatform.model.rtb.MaterialMeta_ExternalMeta_ButtonText" json:"button_text,omitempty"`                                        // 文本按钮
	AdvancedUrl          *string                                        `protobuf:"bytes,5,opt,name=advanced_url,json=advancedUrl" json:"advanced_url,omitempty"`                                                                                                                       // 领取优惠券，对应的落地页链接
	AdvancedLpOpenUrl    *string                                        `protobuf:"bytes,6,opt,name=advanced_lp_open_url,json=advancedLpOpenUrl" json:"advanced_lp_open_url,omitempty"`                                                                                                 // 领取优惠券，应用调起对应的落地页链接
	LpType               *LpType                                        `protobuf:"varint,7,opt,name=lp_type,json=lpType,enum=com.adkit.demandsideplatform.model.rtb.LpType" json:"lp_type,omitempty"`                                                                                  // 落地页样式类型
	AtlasMeta            []*MaterialMeta_AtlasMeta                      `protobuf:"bytes,8,rep,name=atlas_meta,json=atlasMeta" json:"atlas_meta,omitempty"`                                                                                                                             // 图集广告素材 限制个数3-10
	CommodityCardMeta    *MaterialMeta_CommodityCardMeta                `protobuf:"bytes,9,opt,name=commodity_card_meta,json=commodityCardMeta" json:"commodity_card_meta,omitempty"`                                                                                                   // 抖音卡片样式素材
	TextlinkCardMeta     *MaterialMeta_TextlinkCardMeta                 `protobuf:"bytes,10,opt,name=textlink_card_meta,json=textlinkCardMeta" json:"textlink_card_meta,omitempty"`                                                                                                     //连池详情页卡片素材
	CommodityButtonText  *MaterialMeta_ExternalMeta_CommodityButtonText `protobuf:"varint,11,opt,name=commodity_button_text,json=commodityButtonText,enum=com.adkit.demandsideplatform.model.rtb.MaterialMeta_ExternalMeta_CommodityButtonText" json:"commodity_button_text,omitempty"` // 电商按钮文案
	CommodityCardData    *MaterialMeta_CommodityCardData                `protobuf:"bytes,12,opt,name=commodity_card_data,json=commodityCardData" json:"commodity_card_data,omitempty"`                                                                                                  // 火山卡片样式素材
	MagnetCardMeta       *MaterialMeta_MagnetCardMeta                   `protobuf:"bytes,13,opt,name=magnet_card_meta,json=magnetCardMeta" json:"magnet_card_meta,omitempty"`                                                                                                           //抖音图片磁贴附加创意
	PhoneUrl             *string                                        `protobuf:"bytes,14,opt,name=phone_url,json=phoneUrl" json:"phone_url,omitempty"`                                                                                                                               //动态请求广告电话号码的链接
	OutiqueBarItems      []*MaterialMeta_OutiqueBarMeta                 `protobuf:"bytes,15,rep,name=outique_bar_items,json=outiqueBarItems" json:"outique_bar_items,omitempty"`                                                                                                        //BPG头条精品栏，数量必须为4，每个图片的位置即是数组的位置
}

func (x *MaterialMeta_ExternalMeta) Reset() {
	*x = MaterialMeta_ExternalMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialMeta_ExternalMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialMeta_ExternalMeta) ProtoMessage() {}

func (x *MaterialMeta_ExternalMeta) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialMeta_ExternalMeta.ProtoReflect.Descriptor instead.
func (*MaterialMeta_ExternalMeta) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 1}
}

func (x *MaterialMeta_ExternalMeta) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *MaterialMeta_ExternalMeta) GetAdvancedCreativeType() AdvCreativeType {
	if x != nil && x.AdvancedCreativeType != nil {
		return *x.AdvancedCreativeType
	}
	return AdvCreativeType_NONE
}

func (x *MaterialMeta_ExternalMeta) GetPhoneNumber() string {
	if x != nil && x.PhoneNumber != nil {
		return *x.PhoneNumber
	}
	return ""
}

func (x *MaterialMeta_ExternalMeta) GetButtonText() MaterialMeta_ExternalMeta_ButtonText {
	if x != nil && x.ButtonText != nil {
		return *x.ButtonText
	}
	return MaterialMeta_ExternalMeta_PHONE_DIAL
}

func (x *MaterialMeta_ExternalMeta) GetAdvancedUrl() string {
	if x != nil && x.AdvancedUrl != nil {
		return *x.AdvancedUrl
	}
	return ""
}

func (x *MaterialMeta_ExternalMeta) GetAdvancedLpOpenUrl() string {
	if x != nil && x.AdvancedLpOpenUrl != nil {
		return *x.AdvancedLpOpenUrl
	}
	return ""
}

func (x *MaterialMeta_ExternalMeta) GetLpType() LpType {
	if x != nil && x.LpType != nil {
		return *x.LpType
	}
	return LpType_DEFAULT
}

func (x *MaterialMeta_ExternalMeta) GetAtlasMeta() []*MaterialMeta_AtlasMeta {
	if x != nil {
		return x.AtlasMeta
	}
	return nil
}

func (x *MaterialMeta_ExternalMeta) GetCommodityCardMeta() *MaterialMeta_CommodityCardMeta {
	if x != nil {
		return x.CommodityCardMeta
	}
	return nil
}

func (x *MaterialMeta_ExternalMeta) GetTextlinkCardMeta() *MaterialMeta_TextlinkCardMeta {
	if x != nil {
		return x.TextlinkCardMeta
	}
	return nil
}

func (x *MaterialMeta_ExternalMeta) GetCommodityButtonText() MaterialMeta_ExternalMeta_CommodityButtonText {
	if x != nil && x.CommodityButtonText != nil {
		return *x.CommodityButtonText
	}
	return MaterialMeta_ExternalMeta_TO_VISIT
}

func (x *MaterialMeta_ExternalMeta) GetCommodityCardData() *MaterialMeta_CommodityCardData {
	if x != nil {
		return x.CommodityCardData
	}
	return nil
}

func (x *MaterialMeta_ExternalMeta) GetMagnetCardMeta() *MaterialMeta_MagnetCardMeta {
	if x != nil {
		return x.MagnetCardMeta
	}
	return nil
}

func (x *MaterialMeta_ExternalMeta) GetPhoneUrl() string {
	if x != nil && x.PhoneUrl != nil {
		return *x.PhoneUrl
	}
	return ""
}

func (x *MaterialMeta_ExternalMeta) GetOutiqueBarItems() []*MaterialMeta_OutiqueBarMeta {
	if x != nil {
		return x.OutiqueBarItems
	}
	return nil
}

type MaterialMeta_AndroidApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName     *string `protobuf:"bytes,1,req,name=app_name,json=appName" json:"app_name,omitempty"`
	DownloadUrl *string `protobuf:"bytes,2,req,name=download_url,json=downloadUrl" json:"download_url,omitempty"`
	OpenUrl     *string `protobuf:"bytes,3,opt,name=open_url,json=openUrl" json:"open_url,omitempty"` // 安装之后打开应用的url
	Package     *string `protobuf:"bytes,4,opt,name=package" json:"package,omitempty"`
	WebUrl      *string `protobuf:"bytes,5,opt,name=web_url,json=webUrl" json:"web_url,omitempty"`
}

func (x *MaterialMeta_AndroidApp) Reset() {
	*x = MaterialMeta_AndroidApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialMeta_AndroidApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialMeta_AndroidApp) ProtoMessage() {}

func (x *MaterialMeta_AndroidApp) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialMeta_AndroidApp.ProtoReflect.Descriptor instead.
func (*MaterialMeta_AndroidApp) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 2}
}

func (x *MaterialMeta_AndroidApp) GetAppName() string {
	if x != nil && x.AppName != nil {
		return *x.AppName
	}
	return ""
}

func (x *MaterialMeta_AndroidApp) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *MaterialMeta_AndroidApp) GetOpenUrl() string {
	if x != nil && x.OpenUrl != nil {
		return *x.OpenUrl
	}
	return ""
}

func (x *MaterialMeta_AndroidApp) GetPackage() string {
	if x != nil && x.Package != nil {
		return *x.Package
	}
	return ""
}

func (x *MaterialMeta_AndroidApp) GetWebUrl() string {
	if x != nil && x.WebUrl != nil {
		return *x.WebUrl
	}
	return ""
}

type MaterialMeta_IosApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName     *string `protobuf:"bytes,1,req,name=app_name,json=appName" json:"app_name,omitempty"`
	DownloadUrl *string `protobuf:"bytes,2,req,name=download_url,json=downloadUrl" json:"download_url,omitempty"`
	OpenUrl     *string `protobuf:"bytes,3,opt,name=open_url,json=openUrl" json:"open_url,omitempty"`
	Appleid     *string `protobuf:"bytes,4,opt,name=appleid" json:"appleid,omitempty"`
	IpaUrl      *string `protobuf:"bytes,5,opt,name=ipa_url,json=ipaUrl" json:"ipa_url,omitempty"` // 越狱链接
}

func (x *MaterialMeta_IosApp) Reset() {
	*x = MaterialMeta_IosApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialMeta_IosApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialMeta_IosApp) ProtoMessage() {}

func (x *MaterialMeta_IosApp) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialMeta_IosApp.ProtoReflect.Descriptor instead.
func (*MaterialMeta_IosApp) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 3}
}

func (x *MaterialMeta_IosApp) GetAppName() string {
	if x != nil && x.AppName != nil {
		return *x.AppName
	}
	return ""
}

func (x *MaterialMeta_IosApp) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *MaterialMeta_IosApp) GetOpenUrl() string {
	if x != nil && x.OpenUrl != nil {
		return *x.OpenUrl
	}
	return ""
}

func (x *MaterialMeta_IosApp) GetAppleid() string {
	if x != nil && x.Appleid != nil {
		return *x.Appleid
	}
	return ""
}

func (x *MaterialMeta_IosApp) GetIpaUrl() string {
	if x != nil && x.IpaUrl != nil {
		return *x.IpaUrl
	}
	return ""
}

type MaterialMeta_VideoMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url             *string `protobuf:"bytes,1,req,name=url" json:"url,omitempty"`
	Height          *uint32 `protobuf:"varint,2,req,name=height" json:"height,omitempty"` //960*540
	Width           *uint32 `protobuf:"varint,3,req,name=width" json:"width,omitempty"`
	Duration        *uint32 `protobuf:"varint,4,req,name=duration" json:"duration,omitempty"`                                      //视频时长 毫秒
	Ratio           *string `protobuf:"bytes,5,opt,name=ratio" json:"ratio,omitempty"`                                             //码率
	SupportInteract *bool   `protobuf:"varint,6,opt,name=support_interact,json=supportInteract" json:"support_interact,omitempty"` //是否支持互动数据展示
}

func (x *MaterialMeta_VideoMeta) Reset() {
	*x = MaterialMeta_VideoMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialMeta_VideoMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialMeta_VideoMeta) ProtoMessage() {}

func (x *MaterialMeta_VideoMeta) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialMeta_VideoMeta.ProtoReflect.Descriptor instead.
func (*MaterialMeta_VideoMeta) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 4}
}

func (x *MaterialMeta_VideoMeta) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *MaterialMeta_VideoMeta) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *MaterialMeta_VideoMeta) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *MaterialMeta_VideoMeta) GetDuration() uint32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *MaterialMeta_VideoMeta) GetRatio() string {
	if x != nil && x.Ratio != nil {
		return *x.Ratio
	}
	return ""
}

func (x *MaterialMeta_VideoMeta) GetSupportInteract() bool {
	if x != nil && x.SupportInteract != nil {
		return *x.SupportInteract
	}
	return false
}

type MaterialMeta_AtlasMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width       *uint32 `protobuf:"varint,1,req,name=width" json:"width,omitempty"`
	Height      *uint32 `protobuf:"varint,2,req,name=height" json:"height,omitempty"` //640*640
	ImageUrl    *string `protobuf:"bytes,3,req,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	Title       *string `protobuf:"bytes,4,req,name=title" json:"title,omitempty"`             //图集页标题
	Description *string `protobuf:"bytes,5,req,name=description" json:"description,omitempty"` //图集页描述
	Label       *string `protobuf:"bytes,6,req,name=label" json:"label,omitempty"`             //图集页标签
	LpUrl       *string `protobuf:"bytes,7,req,name=lp_url,json=lpUrl" json:"lp_url,omitempty"`
	OpenUrl     *string `protobuf:"bytes,8,opt,name=open_url,json=openUrl" json:"open_url,omitempty"`
}

func (x *MaterialMeta_AtlasMeta) Reset() {
	*x = MaterialMeta_AtlasMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialMeta_AtlasMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialMeta_AtlasMeta) ProtoMessage() {}

func (x *MaterialMeta_AtlasMeta) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialMeta_AtlasMeta.ProtoReflect.Descriptor instead.
func (*MaterialMeta_AtlasMeta) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 5}
}

func (x *MaterialMeta_AtlasMeta) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *MaterialMeta_AtlasMeta) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *MaterialMeta_AtlasMeta) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *MaterialMeta_AtlasMeta) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *MaterialMeta_AtlasMeta) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *MaterialMeta_AtlasMeta) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *MaterialMeta_AtlasMeta) GetLpUrl() string {
	if x != nil && x.LpUrl != nil {
		return *x.LpUrl
	}
	return ""
}

func (x *MaterialMeta_AtlasMeta) GetOpenUrl() string {
	if x != nil && x.OpenUrl != nil {
		return *x.OpenUrl
	}
	return ""
}

type MaterialMeta_CommodityCardMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl      *string  `protobuf:"bytes,1,req,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	Width         *uint32  `protobuf:"varint,2,req,name=width" json:"width,omitempty"`
	Height        *uint32  `protobuf:"varint,3,req,name=height" json:"height,omitempty"`                                     //174*174
	Title         *string  `protobuf:"bytes,4,req,name=title" json:"title,omitempty"`                                        //商品标题 4~9个字
	Source        *string  `protobuf:"bytes,5,req,name=source" json:"source,omitempty"`                                      //商品标签 2~6个字
	OriginPrice   *float32 `protobuf:"fixed32,6,opt,name=origin_price,json=originPrice" json:"origin_price,omitempty"`       //商品原价
	DiscountPrice *float32 `protobuf:"fixed32,7,opt,name=discount_price,json=discountPrice" json:"discount_price,omitempty"` //商品折后价
	LpUrl         *string  `protobuf:"bytes,8,opt,name=lp_url,json=lpUrl" json:"lp_url,omitempty"`
	OpenUrl       *string  `protobuf:"bytes,9,opt,name=open_url,json=openUrl" json:"open_url,omitempty"`
	TitleId       *uint64  `protobuf:"varint,10,opt,name=title_id,json=titleId" json:"title_id,omitempty"`
}

func (x *MaterialMeta_CommodityCardMeta) Reset() {
	*x = MaterialMeta_CommodityCardMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialMeta_CommodityCardMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialMeta_CommodityCardMeta) ProtoMessage() {}

func (x *MaterialMeta_CommodityCardMeta) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialMeta_CommodityCardMeta.ProtoReflect.Descriptor instead.
func (*MaterialMeta_CommodityCardMeta) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 6}
}

func (x *MaterialMeta_CommodityCardMeta) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *MaterialMeta_CommodityCardMeta) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *MaterialMeta_CommodityCardMeta) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *MaterialMeta_CommodityCardMeta) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *MaterialMeta_CommodityCardMeta) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *MaterialMeta_CommodityCardMeta) GetOriginPrice() float32 {
	if x != nil && x.OriginPrice != nil {
		return *x.OriginPrice
	}
	return 0
}

func (x *MaterialMeta_CommodityCardMeta) GetDiscountPrice() float32 {
	if x != nil && x.DiscountPrice != nil {
		return *x.DiscountPrice
	}
	return 0
}

func (x *MaterialMeta_CommodityCardMeta) GetLpUrl() string {
	if x != nil && x.LpUrl != nil {
		return *x.LpUrl
	}
	return ""
}

func (x *MaterialMeta_CommodityCardMeta) GetOpenUrl() string {
	if x != nil && x.OpenUrl != nil {
		return *x.OpenUrl
	}
	return ""
}

func (x *MaterialMeta_CommodityCardMeta) GetTitleId() uint64 {
	if x != nil && x.TitleId != nil {
		return *x.TitleId
	}
	return 0
}

type MaterialMeta_TextlinkCardMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ButtonText     *string `protobuf:"bytes,1,req,name=button_text,json=buttonText" json:"button_text,omitempty"`             //按钮文案
	Price          *string `protobuf:"bytes,2,req,name=price" json:"price,omitempty"`                                         //现价
	OriginPrice    *string `protobuf:"bytes,3,opt,name=origin_price,json=originPrice" json:"origin_price,omitempty"`          //原价
	ShowType       *int32  `protobuf:"varint,4,opt,name=show_type,json=showType" json:"show_type,omitempty"`                  //区分POI卡片
	PromotionLabel *string `protobuf:"bytes,5,opt,name=promotion_label,json=promotionLabel" json:"promotion_label,omitempty"` //促销标签
}

func (x *MaterialMeta_TextlinkCardMeta) Reset() {
	*x = MaterialMeta_TextlinkCardMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialMeta_TextlinkCardMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialMeta_TextlinkCardMeta) ProtoMessage() {}

func (x *MaterialMeta_TextlinkCardMeta) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialMeta_TextlinkCardMeta.ProtoReflect.Descriptor instead.
func (*MaterialMeta_TextlinkCardMeta) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 7}
}

func (x *MaterialMeta_TextlinkCardMeta) GetButtonText() string {
	if x != nil && x.ButtonText != nil {
		return *x.ButtonText
	}
	return ""
}

func (x *MaterialMeta_TextlinkCardMeta) GetPrice() string {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return ""
}

func (x *MaterialMeta_TextlinkCardMeta) GetOriginPrice() string {
	if x != nil && x.OriginPrice != nil {
		return *x.OriginPrice
	}
	return ""
}

func (x *MaterialMeta_TextlinkCardMeta) GetShowType() int32 {
	if x != nil && x.ShowType != nil {
		return *x.ShowType
	}
	return 0
}

func (x *MaterialMeta_TextlinkCardMeta) GetPromotionLabel() string {
	if x != nil && x.PromotionLabel != nil {
		return *x.PromotionLabel
	}
	return ""
}

type MaterialMeta_DownloadCardMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl *string `protobuf:"bytes,1,req,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	Width    *uint32 `protobuf:"varint,2,req,name=width" json:"width,omitempty"`
	Height   *uint32 `protobuf:"varint,3,req,name=height" json:"height,omitempty"` //148*148
	Title    *string `protobuf:"bytes,4,req,name=title" json:"title,omitempty"`    //应用标题 4~40个字
	Source   *string `protobuf:"bytes,5,req,name=source" json:"source,omitempty"`  //应用来源 2~8个字
	LpUrl    *string `protobuf:"bytes,6,opt,name=lp_url,json=lpUrl" json:"lp_url,omitempty"`
	OpenUrl  *string `protobuf:"bytes,7,opt,name=open_url,json=openUrl" json:"open_url,omitempty"`
}

func (x *MaterialMeta_DownloadCardMeta) Reset() {
	*x = MaterialMeta_DownloadCardMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialMeta_DownloadCardMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialMeta_DownloadCardMeta) ProtoMessage() {}

func (x *MaterialMeta_DownloadCardMeta) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialMeta_DownloadCardMeta.ProtoReflect.Descriptor instead.
func (*MaterialMeta_DownloadCardMeta) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 8}
}

func (x *MaterialMeta_DownloadCardMeta) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *MaterialMeta_DownloadCardMeta) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *MaterialMeta_DownloadCardMeta) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *MaterialMeta_DownloadCardMeta) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *MaterialMeta_DownloadCardMeta) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *MaterialMeta_DownloadCardMeta) GetLpUrl() string {
	if x != nil && x.LpUrl != nil {
		return *x.LpUrl
	}
	return ""
}

func (x *MaterialMeta_DownloadCardMeta) GetOpenUrl() string {
	if x != nil && x.OpenUrl != nil {
		return *x.OpenUrl
	}
	return ""
}

type MaterialMeta_MagnetCardMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl  *string `protobuf:"bytes,1,req,name=image_url,json=imageUrl" json:"image_url,omitempty"`     // 图片链接，jpg/pngf格式
	Width     *uint32 `protobuf:"varint,2,req,name=width" json:"width,omitempty"`                          // 校验图片宽：540px
	Height    *uint32 `protobuf:"varint,3,req,name=height" json:"height,omitempty"`                        // 校验图片高：276px
	StartTime *int32  `protobuf:"varint,4,opt,name=start_time,json=startTime" json:"start_time,omitempty"` //  单位s/秒，整形；
}

func (x *MaterialMeta_MagnetCardMeta) Reset() {
	*x = MaterialMeta_MagnetCardMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialMeta_MagnetCardMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialMeta_MagnetCardMeta) ProtoMessage() {}

func (x *MaterialMeta_MagnetCardMeta) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialMeta_MagnetCardMeta.ProtoReflect.Descriptor instead.
func (*MaterialMeta_MagnetCardMeta) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 9}
}

func (x *MaterialMeta_MagnetCardMeta) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *MaterialMeta_MagnetCardMeta) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *MaterialMeta_MagnetCardMeta) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *MaterialMeta_MagnetCardMeta) GetStartTime() int32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

type MaterialMeta_OutiqueBarMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl        *string `protobuf:"bytes,1,req,name=image_url,json=imageUrl" json:"image_url,omitempty"`                // 图片链接
	ExternalUrl     *string `protobuf:"bytes,2,opt,name=external_url,json=externalUrl" json:"external_url,omitempty"`       // H5落地页
	OpenUrl         *string `protobuf:"bytes,3,opt,name=open_url,json=openUrl" json:"open_url,omitempty"`                   // 直达链接
	ExternalTitle   *string `protobuf:"bytes,4,opt,name=external_title,json=externalTitle" json:"external_title,omitempty"` // H5落地页标题
	MicroappOpenUrl *string `protobuf:"bytes,5,opt,name=MicroappOpenUrl" json:"MicroappOpenUrl,omitempty"`                  // 小程序链接
}

func (x *MaterialMeta_OutiqueBarMeta) Reset() {
	*x = MaterialMeta_OutiqueBarMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialMeta_OutiqueBarMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialMeta_OutiqueBarMeta) ProtoMessage() {}

func (x *MaterialMeta_OutiqueBarMeta) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialMeta_OutiqueBarMeta.ProtoReflect.Descriptor instead.
func (*MaterialMeta_OutiqueBarMeta) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 10}
}

func (x *MaterialMeta_OutiqueBarMeta) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *MaterialMeta_OutiqueBarMeta) GetExternalUrl() string {
	if x != nil && x.ExternalUrl != nil {
		return *x.ExternalUrl
	}
	return ""
}

func (x *MaterialMeta_OutiqueBarMeta) GetOpenUrl() string {
	if x != nil && x.OpenUrl != nil {
		return *x.OpenUrl
	}
	return ""
}

func (x *MaterialMeta_OutiqueBarMeta) GetExternalTitle() string {
	if x != nil && x.ExternalTitle != nil {
		return *x.ExternalTitle
	}
	return ""
}

func (x *MaterialMeta_OutiqueBarMeta) GetMicroappOpenUrl() string {
	if x != nil && x.MicroappOpenUrl != nil {
		return *x.MicroappOpenUrl
	}
	return ""
}

type MaterialMeta_CommodityCardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IconUrl               *string `protobuf:"bytes,1,opt,name=icon_url,json=iconUrl" json:"icon_url,omitempty"`    //头像，若广告主未传，取广告计划中的【source_avartar数据】
	IconName              *string `protobuf:"bytes,2,opt,name=icon_name,json=iconName" json:"icon_name,omitempty"` //头像名称，若广告主未传，取广告中的【source】字段
	ImageUrl              *string `protobuf:"bytes,3,req,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	Width                 *uint32 `protobuf:"varint,4,req,name=width" json:"width,omitempty"`
	Height                *uint32 `protobuf:"varint,5,req,name=height" json:"height,omitempty"`                                                              //商品卡片主图高，严格校验高=宽，且≥200像素；
	Title                 *string `protobuf:"bytes,6,req,name=title" json:"title,omitempty"`                                                                 //商品标题 4~9个字
	Source                *string `protobuf:"bytes,7,req,name=source" json:"source,omitempty"`                                                               //商品标签 2~6个字
	LpUrl                 *string `protobuf:"bytes,8,req,name=lp_url,json=lpUrl" json:"lp_url,omitempty"`                                                    //落地页链接
	OpenUrl               *string `protobuf:"bytes,9,opt,name=open_url,json=openUrl" json:"open_url,omitempty"`                                              //调起链接
	SourceBackgroundColor *string `protobuf:"bytes,10,opt,name=source_background_color,json=sourceBackgroundColor" json:"source_background_color,omitempty"` //来源背景色"#DD000A"，针对账户可配置底色；
	SourceTextColor       *string `protobuf:"bytes,11,opt,name=source_text_color,json=sourceTextColor" json:"source_text_color,omitempty"`                   //来源字颜色 "#FFFFFF"
}

func (x *MaterialMeta_CommodityCardData) Reset() {
	*x = MaterialMeta_CommodityCardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialMeta_CommodityCardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialMeta_CommodityCardData) ProtoMessage() {}

func (x *MaterialMeta_CommodityCardData) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialMeta_CommodityCardData.ProtoReflect.Descriptor instead.
func (*MaterialMeta_CommodityCardData) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{12, 11}
}

func (x *MaterialMeta_CommodityCardData) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *MaterialMeta_CommodityCardData) GetIconName() string {
	if x != nil && x.IconName != nil {
		return *x.IconName
	}
	return ""
}

func (x *MaterialMeta_CommodityCardData) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *MaterialMeta_CommodityCardData) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *MaterialMeta_CommodityCardData) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *MaterialMeta_CommodityCardData) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *MaterialMeta_CommodityCardData) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *MaterialMeta_CommodityCardData) GetLpUrl() string {
	if x != nil && x.LpUrl != nil {
		return *x.LpUrl
	}
	return ""
}

func (x *MaterialMeta_CommodityCardData) GetOpenUrl() string {
	if x != nil && x.OpenUrl != nil {
		return *x.OpenUrl
	}
	return ""
}

func (x *MaterialMeta_CommodityCardData) GetSourceBackgroundColor() string {
	if x != nil && x.SourceBackgroundColor != nil {
		return *x.SourceBackgroundColor
	}
	return ""
}

func (x *MaterialMeta_CommodityCardData) GetSourceTextColor() string {
	if x != nil && x.SourceTextColor != nil {
		return *x.SourceTextColor
	}
	return ""
}

type DspUserInfo_UserQuality struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usertype *DspUserInfo_DspUserType `protobuf:"varint,1,req,name=usertype,enum=com.adkit.demandsideplatform.model.rtb.DspUserInfo_DspUserType" json:"usertype,omitempty"`
	Quality  *float64                 `protobuf:"fixed64,2,req,name=quality" json:"quality,omitempty"` // value range [0, 1]
}

func (x *DspUserInfo_UserQuality) Reset() {
	*x = DspUserInfo_UserQuality{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ToutiaoBidding6_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DspUserInfo_UserQuality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DspUserInfo_UserQuality) ProtoMessage() {}

func (x *DspUserInfo_UserQuality) ProtoReflect() protoreflect.Message {
	mi := &file_ToutiaoBidding6_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DspUserInfo_UserQuality.ProtoReflect.Descriptor instead.
func (*DspUserInfo_UserQuality) Descriptor() ([]byte, []int) {
	return file_ToutiaoBidding6_proto_rawDescGZIP(), []int{15, 0}
}

func (x *DspUserInfo_UserQuality) GetUsertype() DspUserInfo_DspUserType {
	if x != nil && x.Usertype != nil {
		return *x.Usertype
	}
	return DspUserInfo_DEFAULT
}

func (x *DspUserInfo_UserQuality) GetQuality() float64 {
	if x != nil && x.Quality != nil {
		return *x.Quality
	}
	return 0
}

var File_ToutiaoBidding6_proto protoreflect.FileDescriptor

var file_ToutiaoBidding6_proto_rawDesc = []byte{
	0x0a, 0x15, 0x54, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x42, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b,
	0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x22,
	0x85, 0x02, 0x0a, 0x03, 0x50, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x05, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x50, 0x6d, 0x70, 0x2e, 0x44, 0x65, 0x61,
	0x6c, 0x52, 0x05, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x1a, 0x8c, 0x01, 0x0a, 0x04, 0x44, 0x65, 0x61,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x69, 0x64, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x73, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x77,
	0x73, 0x65, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x61, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6e, 0x65, 0x77, 0x49, 0x64, 0x22, 0xc7, 0x09, 0x0a, 0x06, 0x41, 0x64, 0x53, 0x6c,
	0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x4d, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64,
	0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x41, 0x64, 0x53, 0x6c,
	0x6f, 0x74, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x12, 0x47, 0x0a, 0x07, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64,
	0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x41, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69,
	0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62,
	0x69, 0x64, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x03, 0x70, 0x6d, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74,
	0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x50, 0x6d,
	0x70, 0x52, 0x03, 0x70, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x6d, 0x0a, 0x16, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74,
	0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x41, 0x64,
	0x76, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x61,
	0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64,
	0x65, 0x65, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74,
	0x72, 0x75, 0x65, 0x52, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x65, 0x70,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x6d, 0x67, 0x5f, 0x69, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x67, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x64, 0x5f, 0x63, 0x69, 0x64, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72,
	0x65, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x69, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x55, 0x6c, 0x69, 0x6e, 0x6b, 0x1a, 0x9d, 0x01, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x49, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x37, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x41, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x2e, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x50, 0x4c, 0x41, 0x53, 0x48, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x46, 0x45, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45,
	0x54, 0x41, 0x49, 0x4c, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d,
	0x45, 0x4e, 0x44, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x41, 0x4c, 0x4c, 0x45, 0x52, 0x59,
	0x10, 0x10, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x50, 0x41, 0x54, 0x43,
	0x48, 0x10, 0x20, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x45, 0x45,
	0x44, 0x10, 0x40, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x45, 0x58, 0x54, 0x4c, 0x49, 0x4e, 0x4b, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x80, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x54, 0x45, 0x58, 0x54, 0x4c,
	0x49, 0x4e, 0x4b, 0x5f, 0x4d, 0x49, 0x44, 0x44, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10,
	0x81, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x50, 0x4c, 0x41,
	0x53, 0x48, 0x10, 0x80, 0x02, 0x12, 0x0b, 0x0a, 0x06, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10,
	0x80, 0x04, 0x12, 0x0d, 0x0a, 0x08, 0x54, 0x41, 0x42, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x10, 0x80,
	0x08, 0x12, 0x0e, 0x0a, 0x09, 0x50, 0x52, 0x45, 0x5f, 0x50, 0x41, 0x54, 0x43, 0x48, 0x10, 0x80,
	0x10, 0x22, 0x59, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xa1, 0x03, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x54, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b,
	0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x1a, 0x58, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x22, 0x95, 0x03, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x3a, 0x02, 0x31, 0x31, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x12, 0x4f, 0x0a, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x49, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x83, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c,
	0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xbf,
	0x06, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x03, 0x64, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x75,
	0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x75, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x3d, 0x0a, 0x03, 0x67,
	0x65, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74,
	0x62, 0x2e, 0x47, 0x65, 0x6f, 0x52, 0x03, 0x67, 0x65, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x4d, 0x64, 0x35, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6f,
	0x73, 0x76, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x73, 0x76, 0x12, 0x0e, 0x0a,
	0x02, 0x6a, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6a, 0x73, 0x12, 0x66, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b,
	0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64,
	0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x72, 0x74, 0x62, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x5f, 0x6d,
	0x64, 0x35, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x49, 0x64, 0x4d, 0x64, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x61, 0x69, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x61,
	0x69, 0x64, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x61,
	0x69, 0x64, 0x4d, 0x64, 0x35, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x70,
	0x6c, 0x61, 0x73, 0x68, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70,
	0x6c, 0x61, 0x73, 0x68, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x57, 0x69, 0x64, 0x74, 0x68, 0x22, 0x4c, 0x0a,
	0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0d, 0x0a, 0x09, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x57, 0x49, 0x46, 0x49, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x54, 0x5f, 0x32, 0x47, 0x10, 0x04,
	0x12, 0x09, 0x0a, 0x05, 0x4e, 0x54, 0x5f, 0x34, 0x47, 0x10, 0x05, 0x22, 0x23, 0x0a, 0x0a, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x48, 0x4f,
	0x4e, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x10, 0x02,
	0x22, 0xbf, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a,
	0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x43, 0x0a,
	0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xa8, 0x03, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x79, 0x6f, 0x62, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x79, 0x6f, 0x62, 0x12, 0x4b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x3d, 0x0a, 0x03, 0x67, 0x65, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x47, 0x65, 0x6f, 0x52, 0x03, 0x67, 0x65, 0x6f,
	0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x64, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6d, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x64, 0x6d, 0x70, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x75,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x75, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x74, 0x49, 0x64,
	0x22, 0x2b, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x22, 0xba, 0x02,
	0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x5d, 0x0a, 0x09,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x63, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x1a, 0x91, 0x01, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x47, 0x0a, 0x07, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64,
	0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x41, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x79, 0x0a, 0x06, 0x41, 0x42,
	0x54, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x47, 0x0a, 0x05,
	0x76, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69,
	0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x72, 0x74, 0x62, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05,
	0x76, 0x74, 0x79, 0x70, 0x65, 0x22, 0xc1, 0x0b, 0x0a, 0x0a, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x07, 0x61, 0x64, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69,
	0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x41,
	0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x07, 0x61, 0x64, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x3d,
	0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69,
	0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x72, 0x74, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x46, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e,
	0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x69, 0x0a, 0x0c, 0x62, 0x69, 0x64, 0x5f, 0x72,
	0x65, 0x71, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x08, 0x4f, 0x4e,
	0x4c, 0x59, 0x5f, 0x44, 0x53, 0x50, 0x52, 0x0a, 0x62, 0x69, 0x64, 0x52, 0x65, 0x71, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x70, 0x72, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x73,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x73, 0x70, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x64, 0x73, 0x70, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x44,
	0x73, 0x70, 0x49, 0x64, 0x73, 0x12, 0x66, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x5f, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x3a, 0x0d, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x52,
	0x0c, 0x72, 0x65, 0x71, 0x41, 0x75, 0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6a, 0x0a,
	0x10, 0x72, 0x65, 0x71, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64,
	0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62,
	0x2e, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0b, 0x50, 0x52,
	0x49, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x50, 0x4d, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x50, 0x72,
	0x69, 0x63, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x61, 0x62, 0x74,
	0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72,
	0x74, 0x62, 0x2e, 0x41, 0x42, 0x54, 0x65, 0x73, 0x74, 0x52, 0x06, 0x61, 0x62, 0x74, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x64, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x44, 0x73, 0x70, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x11, 0x6e, 0x65, 0x77, 0x5f, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x64, 0x73, 0x70,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x44, 0x73, 0x70, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6d,
	0x64, 0x35, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x4d, 0x64, 0x35, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x63, 0x69, 0x64, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x69, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x69, 0x64, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x69, 0x64, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x69, 0x73,
	0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x12, 0x48,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f,
	0x61, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x01, 0x31, 0x52,
	0x08, 0x6d, 0x61, 0x78, 0x41, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x5c, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x18, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x50,
	0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x53, 0x6c, 0x6f, 0x74, 0x22, 0x43, 0x0a, 0x0a, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x52, 0x45, 0x54, 0x41, 0x52,
	0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x44, 0x53,
	0x50, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f,
	0x41, 0x4e, 0x44, 0x5f, 0x44, 0x53, 0x50, 0x10, 0x03, 0x22, 0xad, 0x2e, 0x0a, 0x0c, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x07, 0x61, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69,
	0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x72, 0x74, 0x62, 0x2e, 0x41, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69,
	0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x72, 0x74, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74,
	0x61, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0b, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x5d, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64,
	0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x72, 0x74, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x60, 0x0a, 0x0b, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65,
	0x74, 0x61, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70, 0x70, 0x52, 0x0a, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70, 0x70, 0x12, 0x54, 0x0a, 0x07, 0x69, 0x6f, 0x73,
	0x5f, 0x61, 0x70, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64,
	0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x72, 0x74, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61,
	0x2e, 0x49, 0x6f, 0x73, 0x41, 0x70, 0x70, 0x52, 0x06, 0x69, 0x6f, 0x73, 0x41, 0x70, 0x70, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x69, 0x6e,
	0x61, 0x70, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x49, 0x6e, 0x61,
	0x70, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6c, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x70, 0x4f, 0x70, 0x65,
	0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2f, 0x0a, 0x14, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x31, 0x0a, 0x15, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x69, 0x0a,
	0x10, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64,
	0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62,
	0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0f, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x2f, 0x0a, 0x14, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x50, 0x6c, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x73, 0x64, 0x6b,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x64, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x74, 0x18, 0x18, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x6e, 0x0a, 0x13, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4d, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x11,
	0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x5d, 0x0a, 0x0a, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4d, 0x65, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x09,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x70, 0x6c, 0x61, 0x73,
	0x68, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x21, 0x6d, 0x6d, 0x61, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f,
	0x75, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x22, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1c,
	0x6d, 0x6d, 0x61, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x21,
	0x6d, 0x6d, 0x61, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x23, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1c, 0x6d, 0x6d, 0x61, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x55, 0x72,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x24, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61,
	0x72, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x73, 0x0a, 0x12, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69,
	0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x10, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2c,
	0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x26, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x1a, 0xac, 0x02,
	0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x66, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x66, 0x55, 0x72, 0x6c, 0x1a, 0xc1, 0x0c, 0x0a,
	0x0c, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x6d, 0x0a, 0x16, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x41, 0x64, 0x76, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63,
	0x65, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x6d, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b,
	0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x55, 0x72, 0x6c, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x5f,
	0x6c, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x4c, 0x70, 0x4f, 0x70, 0x65,
	0x6e, 0x55, 0x72, 0x6c, 0x12, 0x47, 0x0a, 0x07, 0x6c, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69,
	0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x4c,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5d, 0x0a,
	0x0a, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x09, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x76, 0x0a, 0x13,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72,
	0x74, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x73, 0x0a, 0x12, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x43,
	0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x10, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x69, 0x6e,
	0x6b, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x89, 0x01, 0x0a, 0x15, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x55, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72,
	0x74, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x76, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64,
	0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69,
	0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x6d, 0x0a,
	0x10, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64,
	0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62,
	0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x4d, 0x61,
	0x67, 0x6e, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0e, 0x6d, 0x61,
	0x67, 0x6e, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x6f, 0x0a, 0x11, 0x6f, 0x75, 0x74,
	0x69, 0x71, 0x75, 0x65, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74,
	0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x75, 0x74, 0x69, 0x71,
	0x75, 0x65, 0x42, 0x61, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0f, 0x6f, 0x75, 0x74, 0x69, 0x71,
	0x75, 0x65, 0x42, 0x61, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0a, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x48, 0x4f,
	0x4e, 0x45, 0x5f, 0x44, 0x49, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4e,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x48, 0x4f, 0x54, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4c, 0x54, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x54, 0x4f, 0x4e, 0x43, 0x45, 0x5f, 0x44, 0x49, 0x41, 0x4c,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x50, 0x48,
	0x4f, 0x4e, 0x45, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x52, 0x45, 0x45, 0x5f, 0x48, 0x4f,
	0x54, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x4f, 0x49, 0x4e, 0x5f,
	0x48, 0x4f, 0x54, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x48, 0x4f, 0x54, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x07, 0x22, 0x91, 0x01, 0x0a,
	0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x4f, 0x5f, 0x56, 0x49, 0x53, 0x49, 0x54,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x45, 0x57, 0x5f, 0x47, 0x4f, 0x4f, 0x44, 0x53, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x43, 0x4b, 0x49, 0x4c, 0x4c, 0x10, 0x03, 0x12,
	0x10, 0x0a, 0x0c, 0x50, 0x41, 0x4e, 0x49, 0x43, 0x5f, 0x42, 0x55, 0x59, 0x49, 0x4e, 0x47, 0x10,
	0x04, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x4f, 0x54, 0x5f, 0x53, 0x41, 0x4c, 0x45, 0x10, 0x05, 0x12,
	0x10, 0x0a, 0x0c, 0x47, 0x4f, 0x4f, 0x44, 0x53, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x52, 0x45, 0x10,
	0x06, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x4f, 0x52, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x07,
	0x1a, 0x98, 0x01, 0x0a, 0x0a, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70, 0x70, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x70, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x62, 0x55, 0x72, 0x6c, 0x1a, 0x94, 0x01, 0x0a, 0x06,
	0x49, 0x6f, 0x73, 0x41, 0x70, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x70, 0x61,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x61, 0x55,
	0x72, 0x6c, 0x1a, 0xa8, 0x01, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x1a, 0xd6, 0x01,
	0x0a, 0x09, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x70, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x70, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x1a, 0xa3, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x6c, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x55, 0x72,
	0x6c, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0xb2, 0x01, 0x0a,
	0x10, 0x54, 0x65, 0x78, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x1a, 0xbd, 0x01, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x6c, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x55, 0x72,
	0x6c, 0x1a, 0x7a, 0x0a, 0x0e, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xbc, 0x01,
	0x0a, 0x0e, 0x4f, 0x75, 0x74, 0x69, 0x71, 0x75, 0x65, 0x42, 0x61, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x61, 0x70, 0x70, 0x4f, 0x70,
	0x65, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4d, 0x69, 0x63,
	0x72, 0x6f, 0x61, 0x70, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x1a, 0xda, 0x02, 0x0a,
	0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70,
	0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xf9, 0x06, 0x0a, 0x03, 0x42, 0x69,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x69, 0x64, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x04, 0x61, 0x64, 0x69, 0x64, 0x12, 0x50, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64,
	0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x72, 0x74, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x61, 0x6c,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x12, 0x5d, 0x0a, 0x0b, 0x62, 0x69, 0x64, 0x5f, 0x61, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72,
	0x74, 0x62, 0x2e, 0x42, 0x69, 0x64, 0x2e, 0x42, 0x69, 0x64, 0x41, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x3a, 0x06, 0x44, 0x53, 0x50, 0x5f, 0x41, 0x44, 0x52, 0x09, 0x62, 0x69, 0x64, 0x41, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x74, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x63, 0x74, 0x72, 0x12,
	0x66, 0x0a, 0x0e, 0x62, 0x69, 0x64, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64,
	0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62,
	0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0d, 0x44, 0x45, 0x4c, 0x49,
	0x56, 0x45, 0x52, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x52, 0x0c, 0x62, 0x69, 0x64, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6a, 0x0a, 0x10, 0x62, 0x69, 0x64, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0b, 0x50, 0x52, 0x49, 0x43, 0x49, 0x4e, 0x47, 0x5f,
	0x43, 0x50, 0x4d, 0x52, 0x0e, 0x62, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x76,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x3d, 0x0a, 0x09, 0x42, 0x69, 0x64, 0x41, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f,
	0x41, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x53, 0x50, 0x5f, 0x41, 0x44, 0x10, 0x02,
	0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54,
	0x5f, 0x41, 0x44, 0x10, 0x03, 0x22, 0x5c, 0x0a, 0x07, 0x53, 0x65, 0x61, 0x74, 0x42, 0x69, 0x64,
	0x12, 0x3d, 0x0a, 0x03, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x42, 0x69, 0x64, 0x52, 0x03, 0x61, 0x64, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x65, 0x61, 0x74, 0x22, 0xb7, 0x02, 0x0a, 0x0b, 0x44, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x44, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x1a, 0x84, 0x01, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x5b, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x44, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x44, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x01, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x22, 0x1a, 0x0a, 0x0b, 0x44, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x01, 0x22, 0x8f, 0x02,
	0x0a, 0x0b, 0x42, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x08,
	0x73, 0x65, 0x61, 0x74, 0x62, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x42, 0x69, 0x64, 0x52,
	0x08, 0x73, 0x65, 0x61, 0x74, 0x62, 0x69, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x44, 0x73, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x61, 0x0a, 0x14, 0x44, 0x73, 0x70, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x73, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x73, 0x70, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x55, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x53, 0x0a,
	0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e, 0x64,
	0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x49, 0x64, 0x73, 0x2a, 0xd7, 0x0e, 0x0a, 0x06, 0x41, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x15, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x4c,
	0x50, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x4f, 0x55,
	0x54, 0x49, 0x41, 0x4f, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x50, 0x5f, 0x53, 0x4d, 0x41,
	0x4c, 0x4c, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f,
	0x46, 0x45, 0x45, 0x44, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x04,
	0x12, 0x1a, 0x0a, 0x16, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x46, 0x45, 0x45, 0x44,
	0x5f, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19,
	0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x5f, 0x4c,
	0x50, 0x5f, 0x47, 0x52, 0x41, 0x50, 0x48, 0x49, 0x43, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x54,
	0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x5f, 0x4c, 0x50,
	0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x55, 0x41,
	0x4e, 0x5a, 0x49, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x41, 0x50, 0x50, 0x10, 0x07, 0x12, 0x1d,
	0x0a, 0x19, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c,
	0x5f, 0x41, 0x50, 0x50, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x09, 0x12, 0x20, 0x0a,
	0x1c, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x5f,
	0x4c, 0x50, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x0a, 0x12,
	0x19, 0x0a, 0x15, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f,
	0x4c, 0x50, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x0b, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x4f,
	0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x50, 0x41, 0x54, 0x43,
	0x48, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x53,
	0x50, 0x4c, 0x41, 0x53, 0x48, 0x10, 0x0d, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x4f, 0x55, 0x54, 0x49,
	0x41, 0x4f, 0x5f, 0x53, 0x50, 0x4c, 0x41, 0x53, 0x48, 0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14, 0x44,
	0x55, 0x41, 0x4e, 0x5a, 0x49, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x50, 0x5f, 0x4c, 0x41,
	0x52, 0x47, 0x45, 0x10, 0x0f, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x55, 0x41, 0x4e, 0x5a, 0x49, 0x5f,
	0x46, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x50, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x10, 0x12,
	0x18, 0x0a, 0x14, 0x44, 0x55, 0x41, 0x4e, 0x5a, 0x49, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x4c,
	0x50, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x11, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x4f, 0x55,
	0x54, 0x49, 0x41, 0x4f, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x10, 0x12, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f,
	0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x5f, 0x4c, 0x50, 0x5f, 0x53, 0x4d,
	0x41, 0x4c, 0x4c, 0x10, 0x13, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f,
	0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x50, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x14,
	0x12, 0x1a, 0x0a, 0x16, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x46, 0x45, 0x45, 0x44,
	0x5f, 0x41, 0x50, 0x50, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x15, 0x12, 0x1f, 0x0a, 0x1b,
	0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e,
	0x44, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x16, 0x12, 0x16, 0x0a,
	0x12, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x47, 0x41, 0x4c, 0x4c, 0x45, 0x52, 0x59,
	0x5f, 0x4c, 0x50, 0x10, 0x17, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x55, 0x41, 0x4e, 0x5a, 0x49, 0x5f,
	0x46, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x50, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x18, 0x12,
	0x19, 0x0a, 0x15, 0x44, 0x55, 0x41, 0x4e, 0x5a, 0x49, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x41,
	0x50, 0x50, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x19, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x4f,
	0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x5f, 0x4c, 0x50, 0x5f,
	0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x1a, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x4f, 0x55, 0x54, 0x49,
	0x41, 0x4f, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x5f, 0x4c, 0x50, 0x5f, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x10, 0x1b, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f,
	0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45,
	0x10, 0x1c, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x53, 0x50, 0x4c, 0x41,
	0x53, 0x48, 0x10, 0x1d, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x50, 0x41,
	0x54, 0x43, 0x48, 0x5f, 0x4c, 0x50, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x1e, 0x12, 0x11,
	0x0a, 0x0d, 0x44, 0x55, 0x41, 0x4e, 0x5a, 0x49, 0x5f, 0x53, 0x50, 0x4c, 0x41, 0x53, 0x48, 0x10,
	0x1f, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x53, 0x50, 0x4c,
	0x41, 0x53, 0x48, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x20,
	0x12, 0x1c, 0x0a, 0x18, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x53, 0x50, 0x4c, 0x41,
	0x53, 0x48, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x49, 0x4d, 0x47, 0x10, 0x21, 0x12, 0x17,
	0x0a, 0x13, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x4c,
	0x50, 0x5f, 0x47, 0x49, 0x46, 0x10, 0x22, 0x12, 0x19, 0x0a, 0x15, 0x48, 0x4f, 0x54, 0x53, 0x4f,
	0x4f, 0x4e, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x50, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45,
	0x10, 0x23, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x47, 0x41,
	0x4c, 0x4c, 0x45, 0x52, 0x59, 0x5f, 0x4c, 0x45, 0x52, 0x47, 0x45, 0x5f, 0x4c, 0x50, 0x10, 0x24,
	0x12, 0x1d, 0x0a, 0x19, 0x54, 0x4f, 0x55, 0x54, 0x49, 0x41, 0x4f, 0x5f, 0x47, 0x41, 0x4c, 0x4c,
	0x45, 0x52, 0x59, 0x5f, 0x4c, 0x45, 0x52, 0x47, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x10, 0x25, 0x12,
	0x22, 0x0a, 0x1e, 0x48, 0x4f, 0x54, 0x53, 0x4f, 0x4f, 0x4e, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f,
	0x4c, 0x50, 0x5f, 0x56, 0x45, 0x52, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x56, 0x49, 0x44, 0x45,
	0x4f, 0x10, 0x26, 0x12, 0x23, 0x0a, 0x1f, 0x48, 0x4f, 0x54, 0x53, 0x4f, 0x4f, 0x4e, 0x5f, 0x46,
	0x45, 0x45, 0x44, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x56, 0x45, 0x52, 0x54, 0x49, 0x43, 0x41, 0x4c,
	0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x27, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4d, 0x4d,
	0x4f, 0x4e, 0x5f, 0x53, 0x50, 0x4c, 0x41, 0x53, 0x48, 0x5f, 0x47, 0x49, 0x46, 0x10, 0x29, 0x12,
	0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x53, 0x50, 0x4c, 0x41, 0x53, 0x48,
	0x10, 0x2a, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x57, 0x45, 0x4d, 0x45, 0x5f, 0x46, 0x45, 0x45, 0x44,
	0x5f, 0x4c, 0x50, 0x5f, 0x56, 0x45, 0x52, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x56, 0x49, 0x44,
	0x45, 0x4f, 0x10, 0x2b, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x57, 0x45, 0x4d, 0x45, 0x5f, 0x46, 0x45,
	0x45, 0x44, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x56, 0x45, 0x52, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x5f,
	0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x2c, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x49, 0x4f, 0x4e,
	0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x50, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x2d,
	0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x4c,
	0x50, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x2e, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x50, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x10, 0x2f, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x45, 0x45, 0x44,
	0x5f, 0x41, 0x50, 0x50, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x30, 0x12, 0x18, 0x0a, 0x14,
	0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x53,
	0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x31, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f,
	0x46, 0x45, 0x45, 0x44, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x32,
	0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x53, 0x50, 0x4c, 0x41, 0x53,
	0x48, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x33, 0x12, 0x1b,
	0x0a, 0x17, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x4c, 0x49, 0x4e,
	0x4b, 0x5f, 0x4c, 0x50, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x34, 0x12, 0x13, 0x0a, 0x0f, 0x55,
	0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x50, 0x4c, 0x41, 0x53, 0x48, 0x5f, 0x4c, 0x50, 0x10, 0x35,
	0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x50, 0x4c, 0x41, 0x53, 0x48,
	0x5f, 0x41, 0x50, 0x50, 0x10, 0x36, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e,
	0x5f, 0x4c, 0x50, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x37, 0x12, 0x13, 0x0a, 0x0f, 0x43,
	0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x4c, 0x50, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x38,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x4c, 0x50, 0x5f, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x10, 0x39, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f,
	0x41, 0x50, 0x50, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x3a, 0x12, 0x14, 0x0a, 0x10, 0x43,
	0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10,
	0x3b, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x5f,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x3c, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f,
	0x4e, 0x5f, 0x4c, 0x50, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x3d, 0x12, 0x14, 0x0a, 0x10,
	0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f,
	0x10, 0x3e, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x4c, 0x50, 0x5f,
	0x56, 0x45, 0x52, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x3f,
	0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x56,
	0x45, 0x52, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x40, 0x12,
	0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x4c, 0x50, 0x5f, 0x50, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x41, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f,
	0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x53, 0x50, 0x4c, 0x41, 0x53, 0x48, 0x5f, 0x46, 0x55, 0x4c, 0x4c,
	0x10, 0x42, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x4c, 0x50, 0x5f,
	0x4e, 0x4f, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x43, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e,
	0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x50, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x44, 0x12, 0x13,
	0x0a, 0x0f, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x56, 0x49, 0x44, 0x45,
	0x4f, 0x10, 0x45, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x50, 0x5f,
	0x56, 0x45, 0x52, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x46,
	0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x56, 0x45,
	0x52, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x47, 0x12, 0x17,
	0x0a, 0x12, 0x49, 0x31, 0x38, 0x4e, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x50, 0x5f, 0x4c,
	0x41, 0x52, 0x47, 0x45, 0x10, 0xc9, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x49, 0x31, 0x38, 0x4e, 0x5f,
	0x46, 0x45, 0x45, 0x44, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0xca, 0x01, 0x2a, 0xa4, 0x01,
	0x0a, 0x0f, 0x41, 0x64, 0x76, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x47, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x44,
	0x49, 0x54, 0x59, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x49,
	0x47, 0x48, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x14, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x4d,
	0x41, 0x52, 0x54, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x0e, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f,
	0x57, 0x10, 0x13, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x55, 0x54, 0x49, 0x51, 0x55, 0x45, 0x5f, 0x42,
	0x41, 0x52, 0x10, 0x1c, 0x2a, 0x20, 0x0a, 0x06, 0x4c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41,
	0x54, 0x4c, 0x41, 0x53, 0x10, 0x01, 0x2a, 0x46, 0x0a, 0x09, 0x41, 0x75, 0x64, 0x69, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x5f, 0x46,
	0x49, 0x52, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f,
	0x46, 0x49, 0x52, 0x53, 0x54, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x4c, 0x49, 0x56,
	0x45, 0x52, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54, 0x10, 0x03, 0x2a, 0x48,
	0x0a, 0x0b, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x50, 0x52, 0x49, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x50, 0x4d, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x50, 0x52, 0x49, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x50, 0x43, 0x10, 0x02, 0x12,
	0x17, 0x0a, 0x13, 0x50, 0x52, 0x49, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x50, 0x4d, 0x5f, 0x41,
	0x4e, 0x44, 0x5f, 0x43, 0x50, 0x43, 0x10, 0x03, 0x2a, 0x35, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x04, 0x2a,
	0x31, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a,
	0x05, 0x41, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x54, 0x45,
	0x47, 0x4f, 0x52, 0x59, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x4d, 0x4f, 0x4e, 0x53,
	0x10, 0x03, 0x42, 0x38, 0x0a, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6b, 0x69, 0x74, 0x2e,
	0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x69, 0x64, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x74, 0x62, 0x42, 0x0e, 0x54, 0x6f,
	0x75, 0x54, 0x69, 0x61, 0x6f, 0x42, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67,
}

var (
	file_ToutiaoBidding6_proto_rawDescOnce sync.Once
	file_ToutiaoBidding6_proto_rawDescData = file_ToutiaoBidding6_proto_rawDesc
)

func file_ToutiaoBidding6_proto_rawDescGZIP() []byte {
	file_ToutiaoBidding6_proto_rawDescOnce.Do(func() {
		file_ToutiaoBidding6_proto_rawDescData = protoimpl.X.CompressGZIP(file_ToutiaoBidding6_proto_rawDescData)
	})
	return file_ToutiaoBidding6_proto_rawDescData
}

var file_ToutiaoBidding6_proto_enumTypes = make([]protoimpl.EnumInfo, 16)
var file_ToutiaoBidding6_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_ToutiaoBidding6_proto_goTypes = []interface{}{
	(AdType)(0),                               // 0: com.adkit.demandsideplatform.model.rtb.AdType
	(AdvCreativeType)(0),                      // 1: com.adkit.demandsideplatform.model.rtb.AdvCreativeType
	(LpType)(0),                               // 2: com.adkit.demandsideplatform.model.rtb.LpType
	(AuditType)(0),                            // 3: com.adkit.demandsideplatform.model.rtb.AuditType
	(PricingType)(0),                          // 4: com.adkit.demandsideplatform.model.rtb.PricingType
	(ValueType)(0),                            // 5: com.adkit.demandsideplatform.model.rtb.ValueType
	(FilterType)(0),                           // 6: com.adkit.demandsideplatform.model.rtb.FilterType
	(AdSlot_Position)(0),                      // 7: com.adkit.demandsideplatform.model.rtb.AdSlot.Position
	(Device_ConnectionType)(0),                // 8: com.adkit.demandsideplatform.model.rtb.Device.ConnectionType
	(Device_DeviceType)(0),                    // 9: com.adkit.demandsideplatform.model.rtb.Device.DeviceType
	(User_Gender)(0),                          // 10: com.adkit.demandsideplatform.model.rtb.User.Gender
	(BidRequest_BidReqType)(0),                // 11: com.adkit.demandsideplatform.model.rtb.BidRequest.BidReqType
	(MaterialMeta_ExternalMeta_ButtonText)(0), // 12: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.ButtonText
	(MaterialMeta_ExternalMeta_CommodityButtonText)(0), // 13: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.CommodityButtonText
	(Bid_BidAdType)(0),                     // 14: com.adkit.demandsideplatform.model.rtb.Bid.BidAdType
	(DspUserInfo_DspUserType)(0),           // 15: com.adkit.demandsideplatform.model.rtb.DspUserInfo.DspUserType
	(*Pmp)(nil),                            // 16: com.adkit.demandsideplatform.model.rtb.Pmp
	(*AdSlot)(nil),                         // 17: com.adkit.demandsideplatform.model.rtb.AdSlot
	(*Publisher)(nil),                      // 18: com.adkit.demandsideplatform.model.rtb.Publisher
	(*Content)(nil),                        // 19: com.adkit.demandsideplatform.model.rtb.Content
	(*App)(nil),                            // 20: com.adkit.demandsideplatform.model.rtb.App
	(*Geo)(nil),                            // 21: com.adkit.demandsideplatform.model.rtb.Geo
	(*Device)(nil),                         // 22: com.adkit.demandsideplatform.model.rtb.Device
	(*Data)(nil),                           // 23: com.adkit.demandsideplatform.model.rtb.Data
	(*User)(nil),                           // 24: com.adkit.demandsideplatform.model.rtb.User
	(*PrivateReq)(nil),                     // 25: com.adkit.demandsideplatform.model.rtb.PrivateReq
	(*ABTest)(nil),                         // 26: com.adkit.demandsideplatform.model.rtb.ABTest
	(*BidRequest)(nil),                     // 27: com.adkit.demandsideplatform.model.rtb.BidRequest
	(*MaterialMeta)(nil),                   // 28: com.adkit.demandsideplatform.model.rtb.MaterialMeta
	(*Bid)(nil),                            // 29: com.adkit.demandsideplatform.model.rtb.Bid
	(*SeatBid)(nil),                        // 30: com.adkit.demandsideplatform.model.rtb.SeatBid
	(*DspUserInfo)(nil),                    // 31: com.adkit.demandsideplatform.model.rtb.DspUserInfo
	(*BidResponse)(nil),                    // 32: com.adkit.demandsideplatform.model.rtb.BidResponse
	(*DspClickNotification)(nil),           // 33: com.adkit.demandsideplatform.model.rtb.DspClickNotification
	(*Filter)(nil),                         // 34: com.adkit.demandsideplatform.model.rtb.Filter
	(*Pmp_Deal)(nil),                       // 35: com.adkit.demandsideplatform.model.rtb.Pmp.Deal
	(*AdSlot_Banner)(nil),                  // 36: com.adkit.demandsideplatform.model.rtb.AdSlot.Banner
	(*Content_Producer)(nil),               // 37: com.adkit.demandsideplatform.model.rtb.Content.Producer
	(*Data_Segment)(nil),                   // 38: com.adkit.demandsideplatform.model.rtb.Data.Segment
	(*PrivateReq_MaterialInfo)(nil),        // 39: com.adkit.demandsideplatform.model.rtb.PrivateReq.MaterialInfo
	(*MaterialMeta_ImageMeta)(nil),         // 40: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ImageMeta
	(*MaterialMeta_ExternalMeta)(nil),      // 41: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta
	(*MaterialMeta_AndroidApp)(nil),        // 42: com.adkit.demandsideplatform.model.rtb.MaterialMeta.AndroidApp
	(*MaterialMeta_IosApp)(nil),            // 43: com.adkit.demandsideplatform.model.rtb.MaterialMeta.IosApp
	(*MaterialMeta_VideoMeta)(nil),         // 44: com.adkit.demandsideplatform.model.rtb.MaterialMeta.VideoMeta
	(*MaterialMeta_AtlasMeta)(nil),         // 45: com.adkit.demandsideplatform.model.rtb.MaterialMeta.AtlasMeta
	(*MaterialMeta_CommodityCardMeta)(nil), // 46: com.adkit.demandsideplatform.model.rtb.MaterialMeta.CommodityCardMeta
	(*MaterialMeta_TextlinkCardMeta)(nil),  // 47: com.adkit.demandsideplatform.model.rtb.MaterialMeta.TextlinkCardMeta
	(*MaterialMeta_DownloadCardMeta)(nil),  // 48: com.adkit.demandsideplatform.model.rtb.MaterialMeta.DownloadCardMeta
	(*MaterialMeta_MagnetCardMeta)(nil),    // 49: com.adkit.demandsideplatform.model.rtb.MaterialMeta.MagnetCardMeta
	(*MaterialMeta_OutiqueBarMeta)(nil),    // 50: com.adkit.demandsideplatform.model.rtb.MaterialMeta.OutiqueBarMeta
	(*MaterialMeta_CommodityCardData)(nil), // 51: com.adkit.demandsideplatform.model.rtb.MaterialMeta.CommodityCardData
	(*DspUserInfo_UserQuality)(nil),        // 52: com.adkit.demandsideplatform.model.rtb.DspUserInfo.UserQuality
}
var file_ToutiaoBidding6_proto_depIdxs = []int32{
	35, // 0: com.adkit.demandsideplatform.model.rtb.Pmp.deals:type_name -> com.adkit.demandsideplatform.model.rtb.Pmp.Deal
	36, // 1: com.adkit.demandsideplatform.model.rtb.AdSlot.banner:type_name -> com.adkit.demandsideplatform.model.rtb.AdSlot.Banner
	0,  // 2: com.adkit.demandsideplatform.model.rtb.AdSlot.ad_type:type_name -> com.adkit.demandsideplatform.model.rtb.AdType
	16, // 3: com.adkit.demandsideplatform.model.rtb.AdSlot.pmp:type_name -> com.adkit.demandsideplatform.model.rtb.Pmp
	1,  // 4: com.adkit.demandsideplatform.model.rtb.AdSlot.advanced_creative_type:type_name -> com.adkit.demandsideplatform.model.rtb.AdvCreativeType
	37, // 5: com.adkit.demandsideplatform.model.rtb.Content.producer:type_name -> com.adkit.demandsideplatform.model.rtb.Content.Producer
	18, // 6: com.adkit.demandsideplatform.model.rtb.App.publisher:type_name -> com.adkit.demandsideplatform.model.rtb.Publisher
	19, // 7: com.adkit.demandsideplatform.model.rtb.App.content:type_name -> com.adkit.demandsideplatform.model.rtb.Content
	21, // 8: com.adkit.demandsideplatform.model.rtb.Device.geo:type_name -> com.adkit.demandsideplatform.model.rtb.Geo
	8,  // 9: com.adkit.demandsideplatform.model.rtb.Device.connection_type:type_name -> com.adkit.demandsideplatform.model.rtb.Device.ConnectionType
	9,  // 10: com.adkit.demandsideplatform.model.rtb.Device.device_type:type_name -> com.adkit.demandsideplatform.model.rtb.Device.DeviceType
	38, // 11: com.adkit.demandsideplatform.model.rtb.Data.segment:type_name -> com.adkit.demandsideplatform.model.rtb.Data.Segment
	10, // 12: com.adkit.demandsideplatform.model.rtb.User.gender:type_name -> com.adkit.demandsideplatform.model.rtb.User.Gender
	21, // 13: com.adkit.demandsideplatform.model.rtb.User.geo:type_name -> com.adkit.demandsideplatform.model.rtb.Geo
	23, // 14: com.adkit.demandsideplatform.model.rtb.User.data:type_name -> com.adkit.demandsideplatform.model.rtb.Data
	39, // 15: com.adkit.demandsideplatform.model.rtb.PrivateReq.materials:type_name -> com.adkit.demandsideplatform.model.rtb.PrivateReq.MaterialInfo
	5,  // 16: com.adkit.demandsideplatform.model.rtb.ABTest.vtype:type_name -> com.adkit.demandsideplatform.model.rtb.ValueType
	17, // 17: com.adkit.demandsideplatform.model.rtb.BidRequest.adslots:type_name -> com.adkit.demandsideplatform.model.rtb.AdSlot
	20, // 18: com.adkit.demandsideplatform.model.rtb.BidRequest.app:type_name -> com.adkit.demandsideplatform.model.rtb.App
	22, // 19: com.adkit.demandsideplatform.model.rtb.BidRequest.device:type_name -> com.adkit.demandsideplatform.model.rtb.Device
	24, // 20: com.adkit.demandsideplatform.model.rtb.BidRequest.user:type_name -> com.adkit.demandsideplatform.model.rtb.User
	11, // 21: com.adkit.demandsideplatform.model.rtb.BidRequest.bid_req_type:type_name -> com.adkit.demandsideplatform.model.rtb.BidRequest.BidReqType
	25, // 22: com.adkit.demandsideplatform.model.rtb.BidRequest.preq:type_name -> com.adkit.demandsideplatform.model.rtb.PrivateReq
	3,  // 23: com.adkit.demandsideplatform.model.rtb.BidRequest.req_audit_type:type_name -> com.adkit.demandsideplatform.model.rtb.AuditType
	4,  // 24: com.adkit.demandsideplatform.model.rtb.BidRequest.req_pricing_type:type_name -> com.adkit.demandsideplatform.model.rtb.PricingType
	26, // 25: com.adkit.demandsideplatform.model.rtb.BidRequest.abtest:type_name -> com.adkit.demandsideplatform.model.rtb.ABTest
	34, // 26: com.adkit.demandsideplatform.model.rtb.BidRequest.filters:type_name -> com.adkit.demandsideplatform.model.rtb.Filter
	4,  // 27: com.adkit.demandsideplatform.model.rtb.BidRequest.allowed_pricing:type_name -> com.adkit.demandsideplatform.model.rtb.PricingType
	0,  // 28: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ad_type:type_name -> com.adkit.demandsideplatform.model.rtb.AdType
	40, // 29: com.adkit.demandsideplatform.model.rtb.MaterialMeta.image_banner:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.ImageMeta
	41, // 30: com.adkit.demandsideplatform.model.rtb.MaterialMeta.external:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta
	42, // 31: com.adkit.demandsideplatform.model.rtb.MaterialMeta.android_app:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.AndroidApp
	43, // 32: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ios_app:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.IosApp
	40, // 33: com.adkit.demandsideplatform.model.rtb.MaterialMeta.splash_creatives:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.ImageMeta
	40, // 34: com.adkit.demandsideplatform.model.rtb.MaterialMeta.splash_share_banner:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.ImageMeta
	44, // 35: com.adkit.demandsideplatform.model.rtb.MaterialMeta.video_meta:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.VideoMeta
	48, // 36: com.adkit.demandsideplatform.model.rtb.MaterialMeta.download_card_meta:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.DownloadCardMeta
	28, // 37: com.adkit.demandsideplatform.model.rtb.Bid.creative:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta
	14, // 38: com.adkit.demandsideplatform.model.rtb.Bid.bid_ad_type:type_name -> com.adkit.demandsideplatform.model.rtb.Bid.BidAdType
	3,  // 39: com.adkit.demandsideplatform.model.rtb.Bid.bid_audit_type:type_name -> com.adkit.demandsideplatform.model.rtb.AuditType
	4,  // 40: com.adkit.demandsideplatform.model.rtb.Bid.bid_pricing_type:type_name -> com.adkit.demandsideplatform.model.rtb.PricingType
	29, // 41: com.adkit.demandsideplatform.model.rtb.SeatBid.ads:type_name -> com.adkit.demandsideplatform.model.rtb.Bid
	52, // 42: com.adkit.demandsideplatform.model.rtb.DspUserInfo.user_scores:type_name -> com.adkit.demandsideplatform.model.rtb.DspUserInfo.UserQuality
	30, // 43: com.adkit.demandsideplatform.model.rtb.BidResponse.seatbids:type_name -> com.adkit.demandsideplatform.model.rtb.SeatBid
	31, // 44: com.adkit.demandsideplatform.model.rtb.BidResponse.user_info:type_name -> com.adkit.demandsideplatform.model.rtb.DspUserInfo
	6,  // 45: com.adkit.demandsideplatform.model.rtb.Filter.filter_type:type_name -> com.adkit.demandsideplatform.model.rtb.FilterType
	7,  // 46: com.adkit.demandsideplatform.model.rtb.AdSlot.Banner.pos:type_name -> com.adkit.demandsideplatform.model.rtb.AdSlot.Position
	0,  // 47: com.adkit.demandsideplatform.model.rtb.PrivateReq.MaterialInfo.ad_type:type_name -> com.adkit.demandsideplatform.model.rtb.AdType
	1,  // 48: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.advanced_creative_type:type_name -> com.adkit.demandsideplatform.model.rtb.AdvCreativeType
	12, // 49: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.button_text:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.ButtonText
	2,  // 50: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.lp_type:type_name -> com.adkit.demandsideplatform.model.rtb.LpType
	45, // 51: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.atlas_meta:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.AtlasMeta
	46, // 52: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.commodity_card_meta:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.CommodityCardMeta
	47, // 53: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.textlink_card_meta:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.TextlinkCardMeta
	13, // 54: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.commodity_button_text:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.CommodityButtonText
	51, // 55: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.commodity_card_data:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.CommodityCardData
	49, // 56: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.magnet_card_meta:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.MagnetCardMeta
	50, // 57: com.adkit.demandsideplatform.model.rtb.MaterialMeta.ExternalMeta.outique_bar_items:type_name -> com.adkit.demandsideplatform.model.rtb.MaterialMeta.OutiqueBarMeta
	15, // 58: com.adkit.demandsideplatform.model.rtb.DspUserInfo.UserQuality.usertype:type_name -> com.adkit.demandsideplatform.model.rtb.DspUserInfo.DspUserType
	59, // [59:59] is the sub-list for method output_type
	59, // [59:59] is the sub-list for method input_type
	59, // [59:59] is the sub-list for extension type_name
	59, // [59:59] is the sub-list for extension extendee
	0,  // [0:59] is the sub-list for field type_name
}

func init() { file_ToutiaoBidding6_proto_init() }
func file_ToutiaoBidding6_proto_init() {
	if File_ToutiaoBidding6_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ToutiaoBidding6_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pmp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Publisher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Geo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ABTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatBid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DspUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DspClickNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pmp_Deal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdSlot_Banner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content_Producer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Segment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateReq_MaterialInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialMeta_ImageMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialMeta_ExternalMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialMeta_AndroidApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialMeta_IosApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialMeta_VideoMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialMeta_AtlasMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialMeta_CommodityCardMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialMeta_TextlinkCardMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialMeta_DownloadCardMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialMeta_MagnetCardMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialMeta_OutiqueBarMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialMeta_CommodityCardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ToutiaoBidding6_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DspUserInfo_UserQuality); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ToutiaoBidding6_proto_rawDesc,
			NumEnums:      16,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ToutiaoBidding6_proto_goTypes,
		DependencyIndexes: file_ToutiaoBidding6_proto_depIdxs,
		EnumInfos:         file_ToutiaoBidding6_proto_enumTypes,
		MessageInfos:      file_ToutiaoBidding6_proto_msgTypes,
	}.Build()
	File_ToutiaoBidding6_proto = out.File
	file_ToutiaoBidding6_proto_rawDesc = nil
	file_ToutiaoBidding6_proto_goTypes = nil
	file_ToutiaoBidding6_proto_depIdxs = nil
}
